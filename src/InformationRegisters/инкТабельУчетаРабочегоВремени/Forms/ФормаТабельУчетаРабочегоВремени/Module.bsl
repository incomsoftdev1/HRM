&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Отладка:
	УстановкаПараметровПоУмолчанию(Параметры);
	ЗаполнениеДанныхФормыНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	//ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
	МесяцНачисленияСтрокой      = инкЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ЭтотОбъект.МесяцНачисления);
	ЗаполнениеДанныхФормыНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура УстановкаПараметровПоУмолчанию(Параметры)
	
	//ЭтотОбъект.Организация 		= Справочники.Организации.НайтиПоКоду("00-000001"); // Конфетпром ООО
	//ЭтотОбъект.Подразделение    = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000001"); // Основное подразделение
	
	ВидДневки = 1;
	ЭтотОбъект.Организация 		= Параметры.Организация; 
	ЭтотОбъект.Подразделение    = Параметры.Подразделение; 
	ЭтотОбъект.МесяцНачисления  = Параметры.МесяцНачисления;
	МесяцНачисленияСтрокой      = инкЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ЭтотОбъект.МесяцНачисления);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуВТЗ(Сотрудник,тзДанныеТабеля)
	
	стрТабельУчетаРабочегоВремени = тзТабельУчетаРабочегоВремени.Добавить();
	стрТабельУчетаРабочегоВремени.Сотрудник = Сотрудник;
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
		
		чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;
		
		стрПоиск = Новый Структура;
		стрПоиск.Вставить("Сотрудник",Сотрудник);
		стрПоиск.Вставить("Дата",чТекущийДень);
		
		массДанныеТабеля = тзДанныеТабеля.НайтиСтроки(стрПоиск);
		Если массДанныеТабеля.Количество() > 0 Тогда
			стрТабельУчетаРабочегоВремени["Д"+(чИндекс+1)+"Дни"] = массДанныеТабеля[0].ВДнях;
			стрТабельУчетаРабочегоВремени["Д"+(чИндекс+1)+"Часы"] = массДанныеТабеля[0].ВЧасах;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудниковОрганизации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних КАК КадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.Организация = &Организация
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение = &Подразделение";
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Подразделение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"КадроваяИсторияСотрудниковСрезПоследних.Подразделение = &Подразделение","Истина");  	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ЭтотОбъект.Подразделение);
	
	тз = Запрос.Выполнить().Выгрузить();
	
	Возврат тз; 

КонецФункции  

&НаСервере
Процедура ЗаполнениеДанныхФормыНаСервере()
	
	тзТабельУчетаРабочегоВремени.Очистить();
	
	стрПараметры = инкУчетВремениСервер.ПолучитьСтруктуруДляДанныхТабеля();
	ЗаполнитьЗначенияСвойств(стрПараметры,ЭтотОбъект);
	тзДанныеТабеля = инкУчетВремениСервер.ПолучитьДанныеТабеляНаСервере(стрПараметры);   
	тзСотрудники = ПолучитьСотрудниковОрганизации();
	
	Для каждого стрСотрудник из тзСотрудники Цикл
		
		ЗаполнитьСтрокуВТЗ(стрСотрудник.Сотрудник,тзДанныеТабеля);		
		
	КонецЦикла;
	
	ПересчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСтроку(Команда)
	
	стрТабельУчетаРабочегоВремени = Элементы.тзТабельУчетаРабочегоВремени.ТекущиеДанные; 
	Если стрТабельУчетаРабочегоВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
    Для чИндекс = 1 по чКоличествоДнейВМесяце Цикл
		
		стрТабельУчетаРабочегоВремени["Д"+чИндекс+"Дни"]	= "";
		стрТабельУчетаРабочегоВремени["Д"+чИндекс+"Часы"]	= "";
		
	КонецЦикла;
	
	ПересчитатьИтоги(стрТабельУчетаРабочегоВремени.Сотрудник);
	
КонецПроцедуры

&НаСервере 
Функция СтрокуВЧисло(Строка)
	
	Попытка
		чЧисло = Число(Строка);		
	Исключение
		чЧисло = 0;
	КонецПопытки;
	
	Возврат чЧисло;
	
КонецФункции

&НаСервере 
Процедура ПересчитатьИтогиПоСтроке(стрТабеля)
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	ДниЯ 	= 0;
	ДниО    = 0;
	ДниБ	= 0;
	ДниК	= 0;
	ЧасыЯ	= 0;
	ЧасыО	= 0;
	ЧасыБ	= 0;
	ЧасыК	= 0;
	
	Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
		
		Если стрТабеля["Д"+(чИндекс+1)+"Дни"] = "Я" Тогда
			ДниЯ 	= ДниЯ + 1;
			ЧасыЯ	= ЧасыЯ + СтрокуВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		ИначеЕсли стрТабеля["Д"+(чИндекс+1)+"Дни"] = "О" Тогда 
			ДниО 	= ДниО + 1;
			ЧасыО	= ЧасыО + СтрокуВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		ИначеЕсли стрТабеля["Д"+(чИндекс+1)+"Дни"] = "Б" Тогда 
			ДниБ 	= ДниБ + 1;
			ЧасыБ	= ЧасыБ + СтрокуВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		ИначеЕсли стрТабеля["Д"+(чИндекс+1)+"Дни"] = "К" Тогда 
			ДниК	= ДниК + 1;
			ЧасыК	= ЧасыК + СтрокуВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		КонецЕсли;
		
	КонецЦикла;
	
	стрТабеля.Дни2Я = ДниЯ;
	стрТабеля.Дни2О = ДниО;
	стрТабеля.Дни2Б = ДниБ;
	стрТабеля.Дни2К = ДниК;
	//
	стрТабеля.Часы2Я = ЧасыЯ;
	стрТабеля.Часы2О = ЧасыО;
	стрТабеля.Часы2Б = ЧасыБ;
	стрТабеля.Часы2К = ЧасыК;
	
КонецПроцедуры

&НаСервере 
Процедура ПересчитатьИтоги(Сотрудник = Неопределено)
	
	Если Сотрудник = Неопределено Тогда
		
		Для каждого стрТабель из тзТабельУчетаРабочегоВремени Цикл
			ПересчитатьИтогиПоСтроке(стрТабель);
		КонецЦикла;
		
	Иначе
		
		стрПоиск = Новый Структура("Сотрудник",Сотрудник);
		массСтрокТабеля = тзТабельУчетаРабочегоВремени.НайтиСтроки(стрПоиск);
		Для каждого стрТабель из массСтрокТабеля Цикл
			ПересчитатьИтогиПоСтроке(стрТабель);		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуТабеляПоПроизводственномуКалендарю(стрТабеля,тзПроизводственныйКалендарь)
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
		
		чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;
		стрПоиск = Новый Структура("Дата",чТекущийДень);
		
		массПК = тзПроизводственныйКалендарь.НайтиСтроки(стрПоиск);
		Если массПК.Количество() > 0 Тогда
			
			Дни = "";
			Часы = "";
			Если массПК[0].ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
				Дни = "Я";
				Часы = "8";
			ИначеЕсли (ДеньНедели(чТекущийДень) = 6) И (ВидДневки = "2") Тогда
				Дни = "Я";
				Часы = "8";
			КонецЕсли;
			
			стрТабеля["Д"+(чИндекс+1)+"Дни"]	= Дни;
			стрТабеля["Д"+(чИндекс+1)+"Часы"]	= Часы;
			
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВставитьОдномуНаСервере(Сотрудник)
    
    Если Не ЗначениеЗаполнено(Сотрудник) Тогда
    	Возврат;
    КонецЕсли; 
	
	тзПроизводственныйКалендарь = инкУчетВремениСервер.ПолучитьДанныеПроизводственногоКалендаряЗаПериод(НачалоМесяца(МесяцНачисления),КонецМесяца(МесяцНачисления));
	
	стрПоиск = Новый Структура("Сотрудник",Сотрудник);
	массПроизводственныйКалендарь = тзТабельУчетаРабочегоВремени.НайтиСтроки(стрПоиск);
	Если массПроизводственныйКалендарь.Количество() > 0 Тогда
		ЗаполнитьСтрокуТабеляПоПроизводственномуКалендарю(массПроизводственныйКалендарь[0],тзПроизводственныйКалендарь);
	КонецЕсли;
	
	ПересчитатьИтоги(Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОдному(Команда)
	
	стрТабельУчетаРабочегоВремени = Элементы.тзТабельУчетаРабочегоВремени.ТекущиеДанные; 
	Если стрТабельУчетаРабочегоВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Сотрудник = стрТабельУчетаРабочегоВремени.Сотрудник; 
	ВставитьОдномуНаСервере(Сотрудник);
	
КонецПроцедуры

&НаСервере
Процедура ВставитьВсемНаСервере()
	
	тзПроизводственныйКалендарь = инкУчетВремениСервер.ПолучитьДанныеПроизводственногоКалендаряЗаПериод(НачалоМесяца(МесяцНачисления),КонецМесяца(МесяцНачисления));
	
	Для каждого стрПроизводственныйКалендарь из тзТабельУчетаРабочегоВремени Цикл
		ЗаполнитьСтрокуТабеляПоПроизводственномуКалендарю(стрПроизводственныйКалендарь,тзПроизводственныйКалендарь);
	КонецЦикла;
	
	ПересчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьВсем(Команда)
	ВставитьВсемНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПриИзменении(Элемент)
	
	стрТабельУчетаРабочегоВремени = Элементы.тзТабельУчетаРабочегоВремени.ТекущиеДанные; 
	Если стрТабельУчетаРабочегоВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Сотрудник = стрТабельУчетаРабочегоВремени.Сотрудник; 
	
	ПересчитатьИтоги(Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеФормыНаСервере()
	
	Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	тзТабельУчетаРабочегоВремени.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОчиститьДанныеФормыНаСервере();
	ЗаполнениеДанныхФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	ЗаполнениеДанныхФормыНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПодразделениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбораПериода = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(МесяцНачисления), КонецМесяца(МесяцНачисления));
	ОписаниеОповещения     = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.инкВыборСтандартногоПериодаМесяц", ПараметрыВыбораПериода, Элементы.МесяцНачисленияСтрокой, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МесяцНачисления= РезультатВыбора.НачалоПериода;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеФормыНаСервере()
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	нз_инкТабельУчетаРабочегоВремени = РегистрыСведений.инкТабельУчетаРабочегоВремени.СоздатьНаборЗаписей();
	нз_инкТабельУчетаРабочегоВремени.Отбор.Месяц.Установить(чНачалоПериода);
	нз_инкТабельУчетаРабочегоВремени.Очистить();
	
	Для каждого стрТабеля из тзТабельУчетаРабочегоВремени Цикл
		
		Если Не ЗначениеЗаполнено(стрТабеля.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		
		Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
			
			чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;

			стрДни = стрТабеля["Д"+(чИндекс+1)+"Дни"];
			чЧасы  = СтрокуВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
			
			Если (стрДни <> "") И (чЧасы <> 0) Тогда
				
				з_инкТабельУчетаРабочегоВремени = нз_инкТабельУчетаРабочегоВремени.Добавить();
				з_инкТабельУчетаРабочегоВремени.Сотрудник	= стрТабеля.Сотрудник;
				з_инкТабельУчетаРабочегоВремени.День        = чТекущийДень;
				з_инкТабельУчетаРабочегоВремени.Месяц		= чНачалоПериода;
				з_инкТабельУчетаРабочегоВремени.ВДнях       = стрДни;
				з_инкТабельУчетаРабочегоВремени.ВЧасах      = чЧасы;
				
			КонецЕсли;	
				
		КонецЦикла;
			
	КонецЦикла;
	
	Если нз_инкТабельУчетаРабочегоВремени.Количество() > 0 Тогда
		нз_инкТабельУчетаРабочегоВремени.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	СохранитьДанныеФормыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	СохранитьДанныеФормыНаСервере();
	
КонецПроцедуры

#Область о //Печать табеля рабочего времени Т-13:

&НаСервере
Функция ДеньЯвки(стрСимвол)
	
	бул = Ложь;
	
	Если стрСимвол = "Я" Тогда
		бул = Истина;
	КонецЕсли;
	
	Возврат бул;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументТабель()
	
	стрПараметры = инкУчетВремениСервер.ПолучитьСтруктуруДляДанныхТабеля();
	ЗаполнитьЗначенияСвойств(стрПараметры,ЭтотОбъект);
	тзТабельРабочегоВремени = инкУчетВремениСервер.ПолучитьДанныеТабеляНаСервере(стрПараметры);
	
	Если тзТабельРабочегоВремени.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	тдТабель = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("инкПФ_MXL_УнифицированнаяФормаТ13");

	облШапка = Макет.ПолучитьОбласть("Шапка");
	облШапка.Параметры.ОрганизацияНаименование		= стрПараметры.Организация;
	облШапка.Параметры.ПодразделениеНаименование	= стрПараметры.Подразделение; 
	облШапка.Параметры.НомерДокумента 	= 1; 
	облШапка.Параметры.ДатаЗаполнения 	= ТекущаяДата();
	облШапка.Параметры.ДатаНачала	 	= НачалоМесяца(стрПараметры.МесяцНачисления);
	облШапка.Параметры.ДатаОкончания 	= КонецМесяца(стрПараметры.МесяцНачисления); 
	тдТабель.Вывести(облШапка);
	
	облШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	тдТабель.Вывести(облШапкаТаблицы);
	
	// Заполнение строк сотрудников:
	тзСотрудники = тзТабельРабочегоВремени.Скопировать();
	тзСотрудники.Свернуть("Сотрудник");
	чНомерПП = 0;
	Для каждого стрСотрудник из тзСотрудники Цикл
		
		чНомерПП = чНомерПП + 1;

		облСтрока = Макет.ПолучитьОбласть("Строка");
		
		облСтрока.Параметры.НомерПП = чНомерПП;
		облСтрока.Параметры.Сотрудник = стрСотрудник.Сотрудник;
		облСтрока.Параметры.ТабельныйНомер = стрСотрудник.Сотрудник.ТабельныйНомер; 

		чКоличествоДнейВМесяце = День(КонецМесяца(стрПараметры.МесяцНачисления));
		чНачалоПериода = НачалоМесяца(стрПараметры.МесяцНачисления);
		
		чДниПерваяПоловина	= 0;
		чЧасыПерваяПоловина = 0;
		чДниВтораяПоловина  = 0;
		чЧасыВтораяПоловина = 0;
		
		Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
			
			чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;
			
			стрПоиск = Новый Структура;
			стрПоиск.Вставить("Сотрудник",стрСотрудник.Сотрудник);
			стрПоиск.Вставить("Дата",чТекущийДень);
			
			массДанныеТабеля = тзТабельРабочегоВремени.НайтиСтроки(стрПоиск);
			Если массДанныеТабеля.Количество() > 0 Тогда
				
				облСтрока.Параметры["Символ"+(чИндекс+1)] = массДанныеТабеля[0].ВДнях; 
				облСтрока.Параметры["ДополнительноеЗначение"+(чИндекс+1)] = массДанныеТабеля[0].ВЧасах; 
				
				Если чИндекс <= 14 Тогда
				
					Если ДеньЯвки(массДанныеТабеля[0].ВДнях) Тогда
						чДниПерваяПоловина	= чДниПерваяПоловина+1;
					КонецЕсли;
					
					чЧасыПерваяПоловина = чЧасыПерваяПоловина + массДанныеТабеля[0].ВЧасах;
					
				Иначе
					
					Если ДеньЯвки(массДанныеТабеля[0].ВДнях) Тогда
						чДниВтораяПоловина	= чДниВтораяПоловина+1;
					КонецЕсли;
					
					чЧасыВтораяПоловина = чЧасыВтораяПоловина + массДанныеТабеля[0].ВЧасах;
					
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		облСтрока.Параметры.ДниПерваяПоловина	= чДниПерваяПоловина;
		облСтрока.Параметры.ЧасыПерваяПоловина  = чЧасыПерваяПоловина;
		облСтрока.Параметры.ДниВтораяПоловина   = чДниВтораяПоловина;
		облСтрока.Параметры.ЧасыВтораяПоловина  = чЧасыВтораяПоловина;
		облСтрока.Параметры.ДниЗаМесяц          = чДниПерваяПоловина + чДниВтораяПоловина;
		облСтрока.Параметры.ЧасыЗаМесяц         = чЧасыПерваяПоловина + чЧасыВтораяПоловина;

		тдТабель.Вывести(облСтрока);	
		
	КонецЦикла;

	облПодвал = Макет.ПолучитьОбласть("Подвал");
	облПодвал.Параметры.ДолжностьОтветственного		= "";
	облПодвал.Параметры.ФИООтветственного			= Пользователи.ТекущийПользователь();
	облПодвал.Параметры.ДолжностьРуководителя		= стрПараметры.Организация.Руководитель.Должность;
	облПодвал.Параметры.ФИОРуководителя				= стрПараметры.Организация.Руководитель.ФИОСокращенное;
	облПодвал.Параметры.ДолжностьКадровика			= стрПараметры.Организация.Кадровик.Должность; 
	облПодвал.Параметры.ФИОКадровика	            = стрПараметры.Организация.Кадровик.ФИОСокращенное;
 	
	тдТабель.Вывести(облПодвал);
	
	Возврат тдТабель; 
	
КонецФункции

&НаКлиенте
Процедура Распечатать(Команда)
	
	СохранитьДанныеФормыНаСервере();
	
	тдТабель = ПолучитьТабличныйДокументТабель();
	
	Если тдТабель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Создаём новую коллекцию печатных форм
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Табель учета рабочего времени (Т-13)");
	
	//Добавляем в коллекцию сформированный табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = тдТабель;
	
	//Устанавливаем параметры печати (при необходимости)
	КоллекцияПечатныхФорм[0].Экземпляров = 1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Табель учета рабочего времени (Т-13)";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
	
	//Вывод через стандартную процедуру БСП
 	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
