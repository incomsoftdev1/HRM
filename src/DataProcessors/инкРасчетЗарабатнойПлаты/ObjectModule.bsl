
#Область о // Описание обработки и ключевых параметров:

// Параметры:
//	ДанныеНачисленияЗарплаты - объект, описывающий документ начисления зарплаты и 
//  содержащий следующий минимальный набор полей.
//		ОбъектНачисленияЗарплаты
//		МесяцНачисления
//		Организация
//		Подразделение
//		Начисления - коллекция со списком начисления, со следующим 
//		минимальным набором полей:
//			Сотрудник
//			Подразделение
//			Начисление
//			Результат
//			ОтработаноДней
//			ОтработаноЧасов
//		Удержания и иные коллекции, содержащие данные начисления зарплаты, 
//		которые могут быть разными в зависимости от реализации документа начисления.
//
//	СотрудникиМассив	- массив, индивидуальный расчет по сотрудникам.
//  булСортировкаПоСотрудникам - булево, сортировать табличную часть Сотрудники.
//	булПерерасчет - булево, перерасчет документа (существующие записи обновляются),
//  				в противном случае документ перезаполняется по-умолчанию.

#КонецОбласти

#Область о // Переменные:

Перем ДанныеНачисленияЗарплаты Экспорт;

#КонецОбласти

#Область о //Регистрация обработки:

Функция СведенияОВнешнейОбработке() Экспорт
    
    ИмяОтчета = ЭтотОбъект.Метаданные().Имя; 
    Синоним = ЭтотОбъект.Метаданные().Синоним; 
    Синоним = ?(ЗначениеЗаполнено(Синоним),Синоним, ИмяОтчета);         
    РегистрационныеДанные = Новый Структура;
    РегистрационныеДанные.Вставить("Вид","ЗаполнениеОбъекта"); //может быть – ПечатнаяФорма, ЗаполнениеОбъекта (для вн.обработки), ДополнительныйОтчет, СозданиеСвязанныхОбъектов… 
    РегистрационныеДанные.Вставить("Наименование", Синоним); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
    РегистрационныеДанные.Вставить("Версия", "1.2");
    РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
    РегистрационныеДанные.Вставить("Информация", "Отчет "+Синоним); //так будет выглядеть описание вн.отчета для пользователя
	//
	
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, Синоним, "СформироватьОтчет" , "ОткрытиеФормы", Истина, );
        
    // Сохраним таблицу команд в параметры регистрации обработки
    РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);
    
    Возврат РегистрационныеДанные;
                                       
КонецФункции

Функция ПолучитьТаблицуКоманд()
    
    // Создадим пустую таблицу команд и колонки в ней
    Команды = Новый ТаблицаЗначений;

    // Как будет выглядеть описание печатной формы для пользователя
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

    // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

    // Тут задается, как должна вызваться команда обработки
    // Возможные варианты:
    // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
    // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
    // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

    // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

    // Для печатной формы должен содержать строку ПечатьMXL 
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
    Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ОткрытиеФормы", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
    
    // Добавляем команду в таблицу команд по переданному описанию.
    // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры 

#КонецОбласти

#Область о // Инициализация:

// Производит инициализацию данных объекта
Процедура Инициализация() Экспорт
	
	ДанныеНачисленияЗарплаты = Неопределено;
	СотрудникиМассив = Новый Массив;
	булСортировкаПоСотрудникам = Ложь;
	булПерерасчет = Ложь;
	ЗагрузкаИзВнешнегоИсточникаБулево = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область о // Расчет налога по сотрудникам:

Функция ПолучитьОблагаемуюБазуВОбъектеРасчета(стрПараметры)
	
	чОблагаемаяБаза = 0;
	
	стрПоиск = Новый Структура("Сотрудник",стрПараметры.Сотрудник); 
	// Основные начисления:
	СотрудникиМассив = стрПараметры.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск); 
	Для каждого стрСотрудник из СотрудникиМассив Цикл
		чОблагаемаяБаза = чОблагаемаяБаза 
		                + стрСотрудник.Оклад
						+ стрСотрудник.РайонныйКоэффициент
						+ стрСотрудник.СевернаяНадбавка
						+ стрСотрудник.Отпуск
						+ стрСотрудник.БольничныйЛист;
	КонецЦикла;	
	
	// Прочие начисления: 
	массНачисления = стрПараметры.ОбъектНачисленияЗарплаты.ПрочиеНачисления.НайтиСтроки(стрПоиск);
	Для каждого стрНачисления из массНачисления Цикл
		
		Если стрНачисления.Начисление.Налог Тогда
			чОблагаемаяБаза = чОблагаемаяБаза + стрНачисления.СуммаНачисления;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат чОблагаемаяБаза; 
	
КонецФункции

Функция ПолучитьНалогУдержанный(стрПараметры)
	
	чНалогУдержанный = 0;
	
	стрПоиск = Новый Структура("Сотрудник",стрПараметры.Сотрудник);
	массНалогУдержанный = стрПараметры.НалогУдержанныйТаблица.НайтиСтроки(стрПоиск);
	
	Для каждого элНалогУдержанный из массНалогУдержанный Цикл
		
		чНалогУдержанный = чНалогУдержанный + элНалогУдержанный.НалогУдержанный;
		
	КонецЦикла;

	Возврат чНалогУдержанный;
	
КонецФункции
	
Функция Получить_СтандартныеВычетыНДФЛ(ДанныеНачисленияЗарплаты)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инкВычетыНДФЛОбороты.Период КАК Период,
	               |	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
	               |	инкВычетыНДФЛОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
	               |ИЗ
	               |	РегистрНакопления.инкВычетыНДФЛ.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Сотрудник В (&СотрудникиМассив)
	               |				И ДокументОснование <> &ТекущийДокумент
	               |				И ГруппаВычетаНДФЛ В (&СтандартрыеВычеты)) КАК инкВычетыНДФЛОбороты";
	
	СтандартрыеВычеты = Новый Массив;
	СтандартрыеВычеты.Добавить(Перечисления.инкГруппыВычетовПоНДФЛ.Стандартные);
	СтандартрыеВычеты.Добавить(Перечисления.инкГруппыВычетовПоНДФЛ.СтандартныеНаДетей);
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеНачисленияЗарплаты.СотрудникиМассив);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ссылка);
	Запрос.УстановитьПараметр("СтандартрыеВычеты", СтандартрыеВычеты);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник,ВычетНДФЛ");
	
	Возврат тз;
	
КонецФункции

Функция Получить_ИмущественныйВычетыНДФЛ(ДанныеНачисленияЗарплаты)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инкВычетыНДФЛОбороты.Период КАК Период,
	               |	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
	               |	инкВычетыНДФЛОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
	               |ИЗ
	               |	РегистрНакопления.инкВычетыНДФЛ.Обороты(
	               |			,
	               |			&Дата2,
	               |			Месяц,
	               |			Сотрудник В (&СотрудникиМассив)
	               |				И ДокументОснование <> &ТекущийДокумент
	               |				И ГруппаВычетаНДФЛ В (&ГруппаВычетаНДФЛ)) КАК инкВычетыНДФЛОбороты";
	
	ГруппаВычетаНДФЛ = Новый Массив;
	ГруппаВычетаНДФЛ.Добавить(Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные);
	
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеНачисленияЗарплаты.СотрудникиМассив);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ссылка);
	Запрос.УстановитьПараметр("ГруппаВычетаНДФЛ", ГруппаВычетаНДФЛ);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник,ВычетНДФЛ");
	
	Возврат тз;
	
КонецФункции

// Расчет вычетов (скидки) за исключением стандартных:
Процедура РасчетВычетов(ДанныеНачисленияЗарплаты)
	
	ВычетыНДФЛТаблица = ДанныеНачисленияЗарплаты.ВычетыНДФЛТаблица;
	
	Для каждого СотрудникСтрока из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		стрПоиск = Новый Структура("Сотрудник",СотрудникСтрока);
		ПрочиеНачисленияМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ПрочиеНачисления.НайтиСтроки(стрПоиск); 
		Для каждого ПрочиеНачисленияСтрока из ПрочиеНачисленияМассив Цикл
			
			Если Не ПрочиеНачисленияСтрока.Начисление.Налог Тогда 
				Продолжить;
			КонецЕсли;
			
			ВычетНДФЛ = ПрочиеНачисленияСтрока.Начисление.ВычетНДФЛ;
				
			Если Не ЗначениеЗаполнено(ВычетНДФЛ) Тогда
				Продолжить;
			КонецЕсли;
			
			стрПоискВычета = Новый Структура;	
			стрПоискВычета.Вставить("Сотрудник",СотрудникСтрока);
			стрПоискВычета.Вставить("ВычетНДФЛ",ВычетНДФЛ);
			
			чСуммаВычета = ВычетНДФЛ.СуммаВычета;
			Если чСуммаВычета > 0 Тогда
				
				массВычетыНДФЛ = ВычетыНДФЛТаблица.НайтиСтроки(стрПоискВычета); 
				чСуммаУчтенногоВычета = 0;
				Для каждого элВычетыНДФЛ из массВычетыНДФЛ Цикл
					чСуммаУчтенногоВычета = чСуммаУчтенногоВычета + элВычетыНДФЛ.СуммаВычета;
				КонецЦикла;
				
				чСуммаВычета = чСуммаВычета - чСуммаУчтенногоВычета;
				
				Если чСуммаВычета > ПрочиеНачисленияСтрока.СуммаНачисления Тогда
					чСуммаВычета = ПрочиеНачисленияСтрока.СуммаНачисления;
				КонецЕсли;
				
			КонецЕсли;
			
			Если чСуммаВычета > 0 Тогда
				
				ПрочиеНачисленияСтрока.ВычетНДФЛ 	= ВычетНДФЛ;
				ПрочиеНачисленияСтрока.СуммаВычета	= чСуммаВычета;
				
			КонецЕсли;
					
		КонецЦикла;	
		
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьВычетыСотрудника(ДанныеНачисленияЗарплаты,Сотрудник)
	
	ВычетыТаблица = Новый ТаблицаЗначений;
	ВычетыТаблица.Колонки.Добавить("ВычетНДФЛ");
	ВычетыТаблица.Колонки.Добавить("ГруппаВычетаНДФЛ");
	ВычетыТаблица.Колонки.Добавить("НетОграниченийПоНалоговйБазе");
	ВычетыТаблица.Колонки.Добавить("ДействуетС");
	ВычетыТаблица.Колонки.Добавить("ДействуетПо");
	ВычетыТаблица.Колонки.Добавить("СуммаВычета");
	
	// Полученные ранее:
	Для каждого ВычетСтрока из Сотрудник.НалоговыеВычеты Цикл
		
		МесяцНачисления = ДанныеНачисленияЗарплаты.МесяцНачисления;
		ДействуетС = НачалоМесяца(ВычетСтрока.ДействуетС);
		ДействуетПо = ВычетСтрока.ДействуетПо; 
		Если Не ЗначениеЗаполнено(ДействуетС) Тогда
			ДействуетС = НачалоГода(МесяцНачисления);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДействуетПо) Тогда
			ДействуетПо = КонецМесяца(МесяцНачисления);
		КонецЕсли;
		
		Если (ДействуетС <= МесяцНачисления) И (ДействуетПо >= МесяцНачисления) Тогда
			
			ВычетыСтрока = ВычетыТаблица.Добавить();
			ВычетыСтрока.ВычетНДФЛ			= ВычетСтрока.ВычетНДФЛ;
			ВычетыСтрока.ГруппаВычетаНДФЛ   = ВычетСтрока.ВычетНДФЛ.ГруппаВычетаНДФЛ;
			ВычетыСтрока.НетОграниченийПоНалоговйБазе = ВычетСтрока.ВычетНДФЛ.НетОграниченийПоНалоговйБазе; 
			ВычетыСтрока.ДействуетС	 		= ДействуетС;
			ВычетыСтрока.ДействуетПо		= ДействуетПо;
			ВычетыСтрока.СуммаВычета		= ВычетСтрока.ВычетНДФЛ.СуммаВычета;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВычетыТаблица;
	
КонецФункции

Функция ПолучитьОблагаемыйДоход(ПоискСотрудник,ДанныеНачисленияЗарплаты)
	
	ОблагаемыйСуммаДохода = 0;
	
	НДФЛМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ.НайтиСтроки(ПоискСотрудник);
	Для каждого НДФЛСтрока из НДФЛМассив Цикл
		ОблагаемыйСуммаДохода = ОблагаемыйСуммаДохода 
		                      + НДФЛСтрока.ОблагаемыйДоходСНачалаГода;
	КонецЦикла;
	
	Возврат ОблагаемыйСуммаДохода;
	
КонецФункции

Функция ПолучитьПревышениеОблагаемойБазы(ДанныеНачисленияЗарплаты,ВычетСтрока,ОблагаемыйСуммаДохода)
	
	ПревышениеОблагаемойБазы = Ложь;
	
	Если Не ВычетСтрока.НетОграниченийПоНалоговйБазе Тогда
		
		МаксимальнаяСумма = 0; 
		Если ВычетСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.СтандартныеНаДетей Тогда 
			МаксимальнаяСумма = ДанныеНачисленияЗарплаты.МаксимальнаяСуммаНаДетей; 	
		КонецЕсли;
		
		Если (МаксимальнаяСумма > 0) И (ОблагаемыйСуммаДохода > МаксимальнаяСумма) Тогда
			ПревышениеОблагаемойБазы = Истина;			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ПревышениеОблагаемойБазы;
	
КонецФункции

Функция ПолучитьПодразделениеСотрудника(ДанныеНачисленияЗарплаты,Сотрудник)
	
	ПодразделениеСотрудника = Справочники.инкПодразделения.ПустаяСсылка();
	ПоискСотрудника = Новый Структура("Сотрудник",Сотрудник);
	
	ТабличнаяЧастьСотрудникиМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(ПоискСотрудника);
	Если ТабличнаяЧастьСотрудникиМассив.Количество() > 0 Тогда
		ПодразделениеСотрудника = ТабличнаяЧастьСотрудникиМассив[0].Подразделение; 	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПодразделениеСотрудника) Тогда
		ПодразделениеСотрудника = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Подразделение;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПодразделениеСотрудника) Тогда
		ПодразделениеСотрудника = Сотрудник.Подразделение;
	КонецЕсли;
	
	Возврат ПодразделениеСотрудника; 
	
КонецФункции

// Расчет стандартных вычетов:
Процедура РасчетСтандартныхНалоговыхВычетов(ДанныеНачисленияЗарплаты)
	
	ВычетыНДФЛТаблица 		= ДанныеНачисленияЗарплаты.ВычетыНДФЛТаблица;
	
	Для каждого СотрудникЭлемент из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		стрПоиск = Новый Структура("Сотрудник",СотрудникЭлемент);
		ВедомостьТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		
		Для каждого СотрудникСтрока из ВедомостьТаблица Цикл
			
			Если СотрудникСтрока.ОблагаемыйДоходЗаМесяц <= 0 Тогда			
				Продолжить;
			КонецЕсли;
			
			СтандартныеВычетыСотрудника = ПолучитьВычетыСотрудника(ДанныеНачисленияЗарплаты,СотрудникЭлемент);
			ОблагаемыйСуммаДохода 		= ПолучитьОблагаемыйДоход(стрПоиск,ДанныеНачисленияЗарплаты);
			 
			Для каждого ВычетСтрока из СтандартныеВычетыСотрудника Цикл
				
				// Предельные суммы для вычетов:
				ПревышениеОблагаемойБазы = ПолучитьПревышениеОблагаемойБазы(ДанныеНачисленияЗарплаты,ВычетСтрока,ОблагаемыйСуммаДохода);
				Если ПревышениеОблагаемойБазы Тогда
					Продолжить;
				КонецЕсли;
				
				ПоискПредоставленныхВычетов = Новый Структура;			
				ПоискПредоставленныхВычетов.Вставить("Сотрудник",СотрудникЭлемент);
				ПоискПредоставленныхВычетов.Вставить("ВычетНДФЛ",ВычетСтрока.ВычетНДФЛ);
				
				ВычетыНДФЛМассив = ВычетыНДФЛТаблица.НайтиСтроки(ПоискПредоставленныхВычетов);
				МесяцНачисленияЧисло = Месяц(ДанныеНачисленияЗарплаты.МесяцНачисления);
				ТекущийПериод	  = НачалоГода(ТекущаяДата());
				
				ВычетЗаМесяцСумма = 0;
				Для  ИндексЧисло = 1 По МесяцНачисленияЧисло Цикл
					
					БылПредоставленВычет = Ложь;
					Для каждого ВычетыНДФЛСтрока из  ВычетыНДФЛМассив Цикл
						Если ТекущийПериод = ВычетыНДФЛСтрока.Период Тогда
							БылПредоставленВычет = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если Не БылПредоставленВычет Тогда
						
						Если (ТекущийПериод >= ВычетСтрока.ДействуетС) И (ТекущийПериод <= ВычетСтрока.ДействуетПо) Тогда
							ВычетЗаМесяцСумма = ВычетЗаМесяцСумма + ВычетСтрока.ВычетНДФЛ.СуммаВычета;
						КонецЕсли;
						
					КонецЕсли;
					
					ТекущийПериод = ДобавитьМесяц(ТекущийПериод,1);
					
				КонецЦикла;
				
				Если ВычетЗаМесяцСумма > 0 Тогда
					стрВычеты 					= ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ВычетыНДФЛ.Добавить();
					стрВычеты.Сотрудник 		= СотрудникЭлемент;
					стрВычеты.Подразделение		= СотрудникСтрока.Подразделение;	
					стрВычеты.ГруппаВычетаНДФЛ	= ВычетСтрока.ВычетНДФЛ.ГруппаВычетаНДФЛ;
					стрВычеты.ВычетНДФЛ			= ВычетСтрока.ВычетНДФЛ;
					стрВычеты.СуммаВычета		= ВычетЗаМесяцСумма;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
	
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьИмущественныйВычетПоСотруднику(ДанныеНачисленияЗарплаты,Сотрудник)
	
	ИмущественныйВычет = 0; 
	ИмущественныйВычетСумма = Сотрудник.ИмущественныйВычетСумма;
	
	// Предоставляется ли имущественный вычет в данном периоде:
	Если ИмущественныйВычетСумма<>0 Тогда 
		
		МесяцНачисления = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.МесяцНачисления;
		ИмущественныйВычетДатаВыдачи = Сотрудник.ИмущественныйВычетДатаВыдачи; 
		Если Не ЗначениеЗаполнено(ИмущественныйВычетДатаВыдачи) Тогда
			ИмущественныйВычетДатаВыдачи = МесяцНачисления;			
		КонецЕсли;
		
		Если НачалоМесяца(ИмущественныйВычетДатаВыдачи) <= НачалоМесяца(МесяцНачисления) Тогда
			ИмущественныйВычет = ИмущественныйВычетСумма;
		КонецЕсли;
	
	КонецЕсли; 
	
	Возврат ИмущественныйВычет;
	
КонецФункции

// Расчет имущественного вычета:
Процедура РасчетИмущественногоВычета(ДанныеНачисленияЗарплаты)
	
	ВычетыНДФЛТаблица = ДанныеНачисленияЗарплаты.ВычетыНДФЛТаблица;
	
	Для каждого СотрудникЭлемент из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		стрПоиск = Новый Структура("Сотрудник",СотрудникЭлемент);
		ВедомостьТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		
		Для каждого СотрудникСтрока из ВедомостьТаблица Цикл
		
			ПоискСотрудника = Новый Структура("Сотрудник",СотрудникЭлемент);
			
			ПоискВычета = Новый Структура;
			ПоискВычета.Вставить("Сотрудник",СотрудникЭлемент);
			ПоискВычета.Вставить("ГруппаВычетаНДФЛ",Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные);

			ИмущественныйВычетСотрудника = ПолучитьИмущественныйВычетПоСотруднику(ДанныеНачисленияЗарплаты,СотрудникЭлемент);
			Если ИмущественныйВычетСотрудника <> 0 Тогда  
				
				ПодразделениеСотрудника     = ПолучитьПодразделениеСотрудника(ДанныеНачисленияЗарплаты,СотрудникЭлемент);
				
				ПредоствленныйРанееВычет = 0;
				ИмущественныйВычетМассив  = ВычетыНДФЛТаблица.НайтиСтроки(ПоискВычета);
				Для каждого ИмущественныйВычетСтрока из ИмущественныйВычетМассив Цикл
					ПредоствленныйРанееВычет = ПредоствленныйРанееВычет + ИмущественныйВычетСтрока.СуммаВычета;
				КонецЦикла;

				Если ИмущественныйВычетСотрудника <= ПредоствленныйРанееВычет Тогда
					Продолжить;
				КонецЕсли;
				
				// Облагаемый доход:
				ОблагаемыйДоходЗаМесяц	= 0;
				ОблагаемыйДоход 		= 0;
				НДФЛТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ;
				НДФЛМассив  = НДФЛТаблица.НайтиСтроки(ПоискСотрудника);
				Для каждого НдфлСтрока из НДФЛМассив Цикл
					ОблагаемыйДоходЗаМесяц = ОблагаемыйДоходЗаМесяц 
					                       + НдфлСтрока.ОблагаемыйДоходЗаМесяц;
					ОблагаемыйДоход = ОблагаемыйДоход
					                + НдфлСтрока.ОблагаемыйДоходСНачалаГода;
				КонецЦикла;

				// Налоговые вычеты за месяц (за исключением имущественных):
				НалоговыеВычетыЗаМесяц = 0;
				ВычетыНДФЛТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ВычетыНДФЛ;
				ВычетыНДФЛМассив  = ВычетыНДФЛТаблица.НайтиСтроки(ПоискСотрудника);
				Для каждого ВычетыНДФЛСтрока из ВычетыНДФЛМассив Цикл
					Если ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ <> Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные Тогда
						НалоговыеВычетыЗаМесяц = НалоговыеВычетыЗаМесяц + ВычетыНДФЛСтрока.СуммаВычета;
					КонецЕсли;
				КонецЦикла;
				
				// Налоговые вычеты с начала года (за исключением имущественных):
				НалоговыеВычеты = НалоговыеВычетыЗаМесяц;
				ВычетыНДФЛТаблица = ДанныеНачисленияЗарплаты.ВычетыНДФЛТаблица;
				ВычетыНДФЛМассив  = ВычетыНДФЛТаблица.НайтиСтроки(ПоискСотрудника);
				Для каждого ВычетыНДФЛСтрока из ВычетыНДФЛМассив Цикл
					Если ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ <> Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные Тогда
						НалоговыеВычеты = НалоговыеВычеты + ВычетыНДФЛСтрока.СуммаВычета;
					КонецЕсли;
				КонецЦикла;
				
				ИмущественныйВычетРасчет = ОблагаемыйДоход - НалоговыеВычеты; 
				Если (ИмущественныйВычетРасчет+ПредоствленныйРанееВычет) > ИмущественныйВычетСотрудника Тогда
					ИмущественныйВычетРасчет = ИмущественныйВычетСотрудника
					                         - ПредоствленныйРанееВычет; 
				КонецЕсли;

				ИмущесвтенныйВычетЗаМесяц = ОблагаемыйДоходЗаМесяц - НалоговыеВычетыЗаМесяц; 
				Если ИмущесвтенныйВычетЗаМесяц > ИмущественныйВычетРасчет Тогда
					ИмущесвтенныйВычетЗаМесяц = ИмущественныйВычетРасчет;
				КонецЕсли;
				
				Если ИмущесвтенныйВычетЗаМесяц > 0 Тогда
					
					Вычеты 						= ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ВычетыНДФЛ.Добавить();
					Вычеты.Сотрудник 			= СотрудникЭлемент;
					Вычеты.Подразделение		= СотрудникСтрока.Подразделение;
					Вычеты.ГруппаВычетаНДФЛ		= Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные;
					Вычеты.ВычетНДФЛ			= СотрудникЭлемент.ИмущественныйВычетКодВычета;
					Вычеты.СуммаВычета			= ИмущесвтенныйВычетЗаМесяц;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;    
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВычетыНДФЛ_Заполнение(ДанныеНачисленияЗарплаты)
	
	ОчиститьТабличнуюЧастьОбъекта("ВычетыНДФЛ",ДанныеНачисленияЗарплаты);
	
	РасчетВычетов(ДанныеНачисленияЗарплаты);
	РасчетСтандартныхНалоговыхВычетов(ДанныеНачисленияЗарплаты);
	РасчетИмущественногоВычета(ДанныеНачисленияЗарплаты);

КонецПроцедуры

Процедура НДФЛ_ОблагаемаяБаза()
	
	ОчиститьТабличнуюЧастьОбъекта("НДФЛ",ДанныеНачисленияЗарплаты);
	
	Для каждого СотрудникСтрока из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		НДФЛСтрока = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ.Добавить();
		НДФЛСтрока.Сотрудник = СотрудникСтрока;
		ПоискСотрудника = Новый Структура("Сотрудник",СотрудникСтрока);
		
		// Облагаемый доход за месяц:
		НДФЛСтрока.ОблагаемыйДоходЗаМесяц = 0;
		ОблагаемыйДоходТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ДоходыНДФЛ;
		ОблагаемыйДоходМассив  = ОблагаемыйДоходТаблица.НайтиСтроки(ПоискСотрудника);
		Для каждого ОблагаемыйДоходСтрока из ОблагаемыйДоходМассив Цикл
			НДФЛСтрока.ОблагаемыйДоходЗаМесяц = НДФЛСтрока.ОблагаемыйДоходЗаМесяц
			                                          + ОблагаемыйДоходСтрока.СуммаДохода;
		КонецЦикла;
		
		// Облагаемый доход с начала года:
		НДФЛСтрока.ОблагаемыйДоходСНачалаГода = НДФЛСтрока.ОблагаемыйДоходЗаМесяц;
		ОблагаемыйДоходТаблица = ДанныеНачисленияЗарплаты.ОблагаемыйДоходТаблица;
		ОблагаемыйДоходМассив = ОблагаемыйДоходТаблица.НайтиСтроки(ПоискСотрудника);
		Для каждого ОблагаемыйДоходСтрока из ОблагаемыйДоходМассив Цикл
			НДФЛСтрока.ОблагаемыйДоходСНачалаГода = НДФЛСтрока.ОблагаемыйДоходСНачалаГода
			                                      + ОблагаемыйДоходСтрока.СуммаДохода;
		КонецЦикла;

	КонецЦикла;		
	
КонецПроцедуры

Процедура НДФЛ_Заполнение(ДанныеНачисленияЗарплаты)
	
	ОчиститьТабличнуюЧастьОбъекта("НДФЛ",ДанныеНачисленияЗарплаты);
	
	Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
				
		стрПоиск = Новый Структура("Сотрудник",стрСотрудник);
		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		
		Для каждого ВедомостьСтрока из ВедомостьМассив Цикл
			
			НДФЛСтрока = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ.Добавить();
			ЗаполнитьЗначенияСвойств(НДФЛСтрока,ВедомостьСтрока);
			
			ПоискСотрудника = Новый Структура("Сотрудник",НДФЛСтрока.Сотрудник);
			
			// Облагаемый доход за месяц:
			НДФЛСтрока.ОблагаемыйДоходЗаМесяц = 0;
			//		ведомости:
			ВедомостьТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость;
			ВедомостьМассив = ВедомостьТаблица.НайтиСтроки(ПоискСотрудника); 
			Для каждого ВедомостьСтрока из ВедомостьМассив Цикл
				НДФЛСтрока.ОблагаемыйДоходЗаМесяц = НДФЛСтрока.ОблагаемыйДоходЗаМесяц
				                                  + ВедомостьСтрока.Оклад
												  + ВедомостьСтрока.РайонныйКоэффициент
												  + ВедомостьСтрока.СевернаяНадбавка;
			КонецЦикла;

			//		прочие начисления:		
			ПрочиеНачисленияТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ПрочиеНачисления;
			ПрочиеНачисленияМассив  = ПрочиеНачисленияТаблица.НайтиСтроки(ПоискСотрудника);
			Для каждого ПрочиеНачисленияСтрока из ПрочиеНачисленияМассив Цикл
				Если ПрочиеНачисленияСтрока.Начисление.Налог Тогда 
					НДФЛСтрока.ОблагаемыйДоходЗаМесяц = НДФЛСтрока.ОблагаемыйДоходЗаМесяц
				                                      + ПрочиеНачисленияСтрока.СуммаНачисления;
				КонецЕсли;
			КонецЦикла;
			
			// Облагаемый доход с начала года:
			НДФЛСтрока.ОблагаемыйДоходСНачалаГода = НДФЛСтрока.ОблагаемыйДоходЗаМесяц;
			ОблагаемыйДоходТаблица = ДанныеНачисленияЗарплаты.ОблагаемыйДоходТаблица;
			ОблагаемыйДоходМассив = ОблагаемыйДоходТаблица.НайтиСтроки(ПоискСотрудника);
			Для каждого ОблагаемыйДоходСтрока из ОблагаемыйДоходМассив Цикл
				НДФЛСтрока.ОблагаемыйДоходСНачалаГода = НДФЛСтрока.ОблагаемыйДоходСНачалаГода
				                                      + ОблагаемыйДоходСтрока.СуммаДохода;
			КонецЦикла;   
			
			Для каждого ВедомостьСтрока Из ВедомостьМассив Цикл
				ВедомостьСтрока.ОблагаемыйДоходЗаМесяц     = НДФЛСтрока.ОблагаемыйДоходЗаМесяц;
				ВедомостьСтрока.ОблагаемыйДоходСНачалаГода = НДФЛСтрока.ОблагаемыйДоходСНачалаГода;
			КонецЦикла;
			
			Если НДФЛСтрока.ОблагаемыйДоходЗаМесяц <= 0 Тогда
				ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ.Удалить(НДФЛСтрока);	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	   
КонецПроцедуры

Процедура НДФЛ_Расчет(ДанныеНачисленияЗарплаты)

	Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		ПоискСотрудника = Новый Структура("Сотрудник",стрСотрудник);
		НДФЛМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ.НайтиСтроки(ПоискСотрудника); 
 	
		Для каждого НДФЛСтрока из НДФЛМассив Цикл
			
			// Налоговые вычеты за месяц:
			НДФЛСтрока.СоциальныеВычетыЗаМесяц = 0;
		    НДФЛСтрока.СтандартныеВычетыНаРаботникаЗаМесяц = 0;
			НДФЛСтрока.СтандартныеВычетыНаДетейЗаМесяц = 0;
			НДФЛСтрока.ИмущественныйВычетЗаМесяц = 0;
			
			// Вычеты за исключением стандартных:
			ПрочиеНачисленияТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ПрочиеНачисления;
			ПрочиеНачисленияМассив  = ПрочиеНачисленияТаблица.НайтиСтроки(ПоискСотрудника);
			Для каждого ПрочиеНачисленияСтрока из ПрочиеНачисленияМассив Цикл
				Если ПрочиеНачисленияСтрока.СуммаВычета <> 0 Тогда
					НДФЛСтрока.СоциальныеВычетыЗаМесяц = НДФЛСтрока.СоциальныеВычетыЗаМесяц 
					                                  + ПрочиеНачисленияСтрока.СуммаВычета;
				КонецЕсли;
			КонецЦикла;	
			
			// Другие вычеты:
			ВычетыНДФЛТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ВычетыНДФЛ;
			ВычетыНДФЛМассив  = ВычетыНДФЛТаблица.НайтиСтроки(ПоискСотрудника);
			Для каждого ВычетыНДФЛСтрока из ВычетыНДФЛМассив Цикл
				// Стандартные вычеты на работника:
				Если ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.Стандартные Тогда
					НДФЛСтрока.СтандартныеВычетыНаРаботникаЗаМесяц = НДФЛСтрока.СтандартныеВычетыНаРаботникаЗаМесяц
					                                               + ВычетыНДФЛСтрока.СуммаВычета; 
																   
				// Стандартные вычеты на детей:												   
				ИначеЕсли ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.СтандартныеНаДетей Тогда								
					НДФЛСтрока.СтандартныеВычетыНаДетейЗаМесяц = НДФЛСтрока.СтандартныеВычетыНаДетейЗаМесяц
					                                           + ВычетыНДФЛСтрока.СуммаВычета;
															   
				// Имущественный вычет											   
				ИначеЕсли ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные Тогда
		 			НДФЛСтрока.ИмущественныйВычетЗаМесяц = НДФЛСтрока.ИмущественныйВычетЗаМесяц
					                                     + ВычетыНДФЛСтрока.СуммаВычета;
				КонецЕсли;
												  
			КонецЦикла;
			
			// Налоговые вычеты c начала года:
			НДФЛСтрока.СоциальныеВычетыСНачалаГода = НДФЛСтрока.СоциальныеВычетыЗаМесяц;
		    НДФЛСтрока.СтандартныеВычетыНаРаботникаСНачалаГода = НДФЛСтрока.СтандартныеВычетыНаРаботникаЗаМесяц;
			НДФЛСтрока.СтандартныеВычетыНаДетейСНачалаГода = НДФЛСтрока.СтандартныеВычетыНаДетейЗаМесяц;
			НДФЛСтрока.ИмущественныйВычетСНачалаГода = НДФЛСтрока.ИмущественныйВычетЗаМесяц;

			ВычетыНДФЛТаблица = ДанныеНачисленияЗарплаты.ВычетыНДФЛТаблица;
			ВычетыНДФЛМассив  = ВычетыНДФЛТаблица.НайтиСтроки(ПоискСотрудника);
			Для каждого ВычетыНДФЛСтрока из ВычетыНДФЛМассив Цикл
				// За исключением стандартных и имущественых:
				Если инкНалогСервер.НалоговыйВычетЗаИсключениемСтандартных(ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ) Тогда	 
					НДФЛСтрока.СоциальныеВычетыСНачалаГода = НДФЛСтрока.СоциальныеВычетыСНачалаГода
					               	                      + ВычетыНДФЛСтрока.СуммаВычета;
				// Стандартные вычеты на работника:
				ИначеЕсли ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.Стандартные Тогда
					НДФЛСтрока.СтандартныеВычетыНаРаботникаСНачалаГода = НДФЛСтрока.СтандартныеВычетыНаРаботникаСНачалаГода
					                                                   + ВычетыНДФЛСтрока.СуммаВычета; 
																   
				// Стандартные вычеты на детей:												   
				ИначеЕсли ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.СтандартныеНаДетей Тогда								
					НДФЛСтрока.СтандартныеВычетыНаДетейСНачалаГода = НДФЛСтрока.СтандартныеВычетыНаДетейСНачалаГода
					                                               + ВычетыНДФЛСтрока.СуммаВычета;
															   
				// Имущественный вычет											   
				ИначеЕсли ВычетыНДФЛСтрока.ГруппаВычетаНДФЛ = Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные Тогда
		 			НДФЛСтрока.ИмущественныйВычетСНачалаГода = НДФЛСтрока.ИмущественныйВычетСНачалаГода
					                                         + ВычетыНДФЛСтрока.СуммаВычета;
				КонецЕсли;
												  
			КонецЦикла;

			// Налог удержанный с начала года:
			НДФЛСтрока.НалогУдержанныйСНачалаГода = 0;
			НалогУдержанныйТаблица = ДанныеНачисленияЗарплаты.НалогУдержанныйТаблица;
			НалогУдержанныйМассив  = НалогУдержанныйТаблица.НайтиСтроки(ПоискСотрудника);
			Для каждого НалогУдержанныйСтрока из НалогУдержанныйМассив Цикл
				НДФЛСтрока.НалогУдержанныйСНачалаГода = НДФЛСтрока.НалогУдержанныйСНачалаГода
					                                  + НалогУдержанныйСтрока.СуммаНалога;
			КонецЦикла;
			
			// Процент налога и налоговая ставка: 		
			НДФЛСтрока.НалоговаяСтавка = инкНалогСервер.ПолучитьНалоговуюСтавкуСотрудника(НДФЛСтрока.Сотрудник);
			НДФЛСтрока.ПроцентНалога   = инкНалогСервер.ПолучитьПроцентПоНалоговойСтавке(НДФЛСтрока.НалоговаяСтавка);
			//
			
			НДФЛСтрока.НалоговаяБазаЗаМесяц  	 = НДФЛСтрока.ОблагаемыйДоходЗаМесяц
												 - НДФЛСтрока.СоциальныеВычетыЗаМесяц
												 - НДФЛСтрока.СтандартныеВычетыНаРаботникаЗаМесяц
												 - НДФЛСтрока.СтандартныеВычетыНаДетейЗаМесяц
												 - НДФЛСтрока.ИмущественныйВычетЗаМесяц;
												 
			Если НДФЛСтрока.НалоговаяБазаЗаМесяц < 0 Тогда
				НДФЛСтрока.НалоговаяБазаЗаМесяц = 0;
			КонецЕсли;
			
			НДФЛСтрока.НалоговаяБазаСНачалаГода  = НДФЛСтрока.ОблагаемыйДоходСНачалаГода
												 - НДФЛСтрока.СоциальныеВычетыСНачалаГода
												 - НДФЛСтрока.СтандартныеВычетыНаРаботникаСНачалаГода
												 - НДФЛСтрока.СтандартныеВычетыНаДетейСНачалаГода
												 - НДФЛСтрока.ИмущественныйВычетСНачалаГода;
												 
			Если НДФЛСтрока.НалоговаяБазаСНачалаГода < 0 Тогда
				НДФЛСтрока.НалоговаяБазаСНачалаГода = 0;
			КонецЕсли;
												 
			НДФЛСтрока.СуммаНалога = НДФЛСтрока.НалоговаяБазаСНачалаГода * НДФЛСтрока.ПроцентНалога
			                       - НДФЛСтрока.НалогУдержанныйСНачалаГода;					 
								   
			НДФЛСтрока.СуммаНалога = Окр(НДФЛСтрока.СуммаНалога);					   

		КонецЦикла;	 
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область о // Загрузка данных для расчета зарплаты:

Процедура ЗагрузкаДанныхДляРасчетаЗарплаты(ДанныеНачисленияЗарплаты)
	
	// Сотрудники:
	ДанныеНачисленияЗарплаты.Вставить("СотрудникиТаблица",Получить_Сотрудники(ДанныеНачисленияЗарплаты));
	ДанныеНачисленияЗарплаты.СотрудникиМассив = ПолучитьМассивСотрудников(ДанныеНачисленияЗарплаты);
	
	// НДФЛ:
	ДанныеНачисленияЗарплаты.Вставить("ВычетыНДФЛТаблица",Получить_ВычетыНДФЛ(ДанныеНачисленияЗарплаты));
	ДанныеНачисленияЗарплаты.Вставить("НалогУдержанныйТаблица",Получить_НалогУдержанный(ДанныеНачисленияЗарплаты));
	ДанныеНачисленияЗарплаты.Вставить("ОблагаемыйДоходТаблица",Получить_ОблагаемыйДоход(ДанныеНачисленияЗарплаты));
	ДанныеНачисленияЗарплаты.Вставить("ВыбранныеСотрудники",Получить_ВыбранныеСотрудники(ДанныеНачисленияЗарплаты));
	
	ДанныеНачисленияЗарплаты.Вставить("ВидРасчетаДниЧасы",ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ВидРасчетаДниЧасы);
	
	Загрузить_СтандартныеВычетыНастройки(ДанныеНачисленияЗарплаты);
	
КонецПроцедуры	

Функция Получить_Сотрудники(ДанныеНачисленияЗарплаты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапроса_Сотрудники(ДанныеНачисленияЗарплаты); 
	
	массВидыСобытийПриема = Новый Массив;
	массВидыСобытийПриема.Добавить(Перечисления.инкВидыКадровыхСобытий.Прием);
	массВидыСобытийПриема.Добавить(Перечисления.инкВидыКадровыхСобытий.Перемещение);
	массВидыСобытийПриема.Добавить(Перечисления.инкВидыКадровыхСобытий.ВосстановлениеВДолжности);
	                                                                  
	Запрос.УстановитьПараметр("ВидыСобытийПриема", массВидыСобытийПриема);
	Запрос.УстановитьПараметр("Организация", ДанныеНачисленияЗарплаты.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДанныеНачисленияЗарплаты.Подразделение);
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеНачисленияЗарплаты.СотрудникиМассив);
	
	тз = Запрос.Выполнить().Выгрузить(); 
	
	Возврат тз;
	
КонецФункции

Функция ПолучитьМассивСотрудников(ДанныеНачисленияЗарплаты) 
	
	СотрудникиМассив = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.СотрудникиМассив) Тогда
		Для каждого СотрудникиСтрока из ДанныеНачисленияЗарплаты.СотрудникиТаблица Цикл
			СотрудникиМассив.Добавить(СотрудникиСтрока.Сотрудник);
		КонецЦикла;
	Иначе
		СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив; 	
	КонецЕсли;
	
	Возврат СотрудникиМассив; 
	
КонецФункции

Функция Получить_ВычетыНДФЛ(ДанныеНачисленияЗарплаты)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инкВычетыНДФЛОбороты.Период КАК Период,
	               |	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
	               |	инкВычетыНДФЛОбороты.ГруппаВычетаНДФЛ КАК ГруппаВычетаНДФЛ,
	               |	инкВычетыНДФЛОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
	               |ПОМЕСТИТЬ втВычеты
	               |ИЗ
	               |	РегистрНакопления.инкВычетыНДФЛ.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Сотрудник В (&СотрудникиМассив)
	               |				И ДокументОснование <> &ТекущийДокумент) КАК инкВычетыНДФЛОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	инкНачисленияОбороты.Период КАК Период,
	               |	инкНачисленияОбороты.Сотрудник КАК Сотрудник,
	               |	инкНачисленияОбороты.ВычетНДФЛ.ГруппаВычетаНДФЛ КАК ВычетНДФЛГруппаВычетаНДФЛ,
	               |	инкНачисленияОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	инкНачисленияОбороты.СуммаВычетаОборот КАК СуммаВычетаОборот
	               |ПОМЕСТИТЬ втВычетыСкидкиНаДоходы
	               |ИЗ
	               |	РегистрНакопления.инкНачисления.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Сотрудник В (&СотрудникиМассив)
	               |				И ДокументОснование <> &ТекущийДокумент) КАК инкНачисленияОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втВычеты.Период КАК Период,
	               |	втВычеты.Сотрудник КАК Сотрудник,
	               |	втВычеты.ГруппаВычетаНДФЛ КАК ГруппаВычетаНДФЛ,
	               |	втВычеты.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	втВычеты.СуммаВычета КАК СуммаВычета
	               |ПОМЕСТИТЬ втОбъединение
	               |ИЗ
	               |	втВычеты КАК втВычеты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втВычетыСкидкиНаДоходы.Период,
	               |	втВычетыСкидкиНаДоходы.Сотрудник,
	               |	втВычетыСкидкиНаДоходы.ВычетНДФЛГруппаВычетаНДФЛ,
	               |	втВычетыСкидкиНаДоходы.ВычетНДФЛ,
	               |	втВычетыСкидкиНаДоходы.СуммаВычетаОборот
	               |ИЗ
	               |	втВычетыСкидкиНаДоходы КАК втВычетыСкидкиНаДоходы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втОбъединение.Период КАК Период,
	               |	втОбъединение.Сотрудник КАК Сотрудник,
	               |	втОбъединение.ГруппаВычетаНДФЛ КАК ГруппаВычетаНДФЛ,
	               |	втОбъединение.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	СУММА(втОбъединение.СуммаВычета) КАК СуммаВычета
	               |ИЗ
	               |	втОбъединение КАК втОбъединение
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втОбъединение.Период,
	               |	втОбъединение.Сотрудник,
	               |	втОбъединение.ГруппаВычетаНДФЛ,
	               |	втОбъединение.ВычетНДФЛ";
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеНачисленияЗарплаты.СотрудникиМассив);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ссылка);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник,ВычетНДФЛ");
	
	Возврат тз;
	
КонецФункции

Функция Получить_НалогУдержанный(ДанныеНачисленияЗарплаты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНалогУдержанныйОбороты.Сотрудник КАК Сотрудник,
		|	инкНалогУдержанныйОбороты.Период КАК Период,
		|	инкНалогУдержанныйОбороты.СуммаНалогаОборот КАК СуммаНалога
		|ИЗ
		|	РегистрНакопления.инкНалогУдержанный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			Месяц,
		|			Сотрудник В (&СотрудникиМассив)
		|				И ДокументОснование <> &ТекущийДокумент) КАК инкНалогУдержанныйОбороты";
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеНачисленияЗарплаты.СотрудникиМассив);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ссылка);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции	

Функция Получить_ОблагаемыйДоход(ДанныеНачисленияЗарплаты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   инкНачисленияОбороты.Сотрудник КАК Сотрудник,
        |   инкНачисленияОбороты.Период КАК Период,
        |   инкНачисленияОбороты.СуммаНачисленияОборот + инкНачисленияОбороты.РайонныйКоэффициентОборот + инкНачисленияОбороты.СевернаяНадбавкаОборот КАК СуммаДохода
        |ИЗ
        |   РегистрНакопления.инкНачисления.Обороты(
        |           &Дата1,
        |           &Дата2,
        |           Месяц,
        |           Сотрудник В (&СотрудникиМассив)
        |               И ДокументОснование <> &ТекущийДокумент
        |               И Налог = ИСТИНА) КАК инкНачисленияОбороты";
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеНачисленияЗарплаты.МесяцНачисления));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеНачисленияЗарплаты.СотрудникиМассив);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ссылка);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции	

Функция Получить_ВыбранныеСотрудники(ДанныеНачисленияЗарплаты)
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив; 
	ВедомостьТаблица = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость;
	
	ВыбранныеСотрудники = ВедомостьТаблица.Выгрузить();

	Если СотрудникиМассив.Количество() > 0 Тогда
		
		ВыбранныеСотрудники.Очистить();
		Для Каждого СотрудникСтрока из СотрудникиМассив Цикл
			Для каждого СотрудникТаблица из ВедомостьТаблица Цикл
				Если СотрудникТаблица.Сотрудник = СотрудникСтрока Тогда
					ВыбранныеСотрудникиСтрока = ВыбранныеСотрудники.Добавить();
					ЗаполнитьЗначенияСвойств(ВыбранныеСотрудникиСтрока,СотрудникТаблица);
				КонецЕсли;				
			КонецЦикла;			
		КонецЦикла;		
		
	КонецЕсли;
	
	Возврат ВыбранныеСотрудники; 
	
КонецФункции

#КонецОбласти

#Область о // Расчет заработной платы:

Процедура ВыполнитьРасчетЗаработнойПлаты() Экспорт
	
	Если ДанныеНачисленияЗарплаты = Неопределено Тогда
		инкОбщийКлиентСервер.СообщитьПользователю("Внимание! Не заданы данные для ПрочиеНачисления зарплаты. Операция прервана.");
		Возврат;
	КонецЕсли;
	
	ЗагрузкаДанныхДляРасчетаЗарплаты(ДанныеНачисленияЗарплаты);
	
	Ведомость_Заполнение(ДанныеНачисленияЗарплаты);
	Ведомость_Расчет(ДанныеНачисленияЗарплаты);
	//
	ПрочиеНачисления_Заполнение(ДанныеНачисленияЗарплаты);
	ПрочиеНачисления_Расчет(ДанныеНачисленияЗарплаты);
	//
	ПрочиеУдержания_Заполнение(ДанныеНачисленияЗарплаты);
	ПрочиеУдержания_Расчет(ДанныеНачисленияЗарплаты);
	//
	РКиКН_Расчет(ДанныеНачисленияЗарплаты);
	//
	НДФЛ_Заполнение(ДанныеНачисленияЗарплаты);
	ВычетыНДФЛ_Заполнение(ДанныеНачисленияЗарплаты);
	НДФЛ_Расчет(ДанныеНачисленияЗарплаты);
	//
	Ведомость_НДФЛ(ДанныеНачисленияЗарплаты);
	//    
    Ведомость_Итоги(ДанныеНачисленияЗарплаты);
    Ведомость_Сальдо(ДанныеНачисленияЗарплаты);
    Ведомость_Сортировка(ДанныеНачисленияЗарплаты);
	//
	
КонецПроцедуры

Процедура ОчиститьТабличнуюЧастьОбъекта(стрТабличнаяЧасть,ДанныеНачисленияЗарплаты)
	
	ОбъектНачисленияЗарплаты = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты; 
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.СотрудникиМассив) Тогда
		ОбъектНачисленияЗарплаты[стрТабличнаяЧасть].Очистить();
	Иначе
		
		Если ДанныеНачисленияЗарплаты.СотрудникиМассив.Количество() = 0 Тогда
			ОбъектНачисленияЗарплаты[стрТабличнаяЧасть].Очистить();
		Иначе
			
			Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
				
				стрПоиск = Новый Структура("Сотрудник",стрСотрудник);
				массСтроки = ОбъектНачисленияЗарплаты[стрТабличнаяЧасть].НайтиСтроки(стрПоиск); 	
				Для каждого стрМассива из массСтроки Цикл
					ОбъектНачисленияЗарплаты[стрТабличнаяЧасть].Удалить(стрМассива);	
				КонецЦикла;				
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТекстЗапроса_Сотрудники(ДанныеНачисленияЗарплаты)

	стрТекстЗапроса =	
		"ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втРаботающиеСотрудникиНаНачалоПериода
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата1,
		|			Организация = &Организация
		|				И Подразделение = &Подразделение
		|				И Сотрудник В (&СотрудникиМассив)) КАК инкКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия В(&ВидыСобытийПриема)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втРаботающиеСотрудникиНаКонецПериода
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата2,
		|			Организация = &Организация
		|				И Подразделение = &Подразделение
		|				И Сотрудник В (&СотрудникиМассив)) КАК инкКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия В(&ВидыСобытийПриема)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втУволенныеСотрудникиНаНачалоПериода
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата1,
		|			Организация = &Организация
		|				И Подразделение = &Подразделение
		|				И Сотрудник В (&СотрудникиМассив)) КАК инкКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.инкВидыКадровыхСобытий.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудников.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудников.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудников.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втУволенныеВТекущемПериоде
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников КАК инкКадроваяИсторияСотрудников
		|ГДЕ
		|	инкКадроваяИсторияСотрудников.Период >= &Дата1
		|	И инкКадроваяИсторияСотрудников.Период <= &Дата2
		|	И инкКадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.инкВидыКадровыхСобытий.Увольнение)
		|	И инкКадроваяИсторияСотрудников.Организация = &Организация
		|	И инкКадроваяИсторияСотрудников.Подразделение = &Подразделение
		|	И инкКадроваяИсторияСотрудников.Сотрудник В(&СотрудникиМассив)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРаботающиеСотрудникиНаНачалоПериода.Сотрудник КАК Сотрудник,
		|	втРаботающиеСотрудникиНаНачалоПериода.Организация КАК Организация,
		|	втРаботающиеСотрудникиНаНачалоПериода.Подразделение КАК Подразделение,
		|	втРаботающиеСотрудникиНаНачалоПериода.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втОбъединение
		|ИЗ
		|	втРаботающиеСотрудникиНаНачалоПериода КАК втРаботающиеСотрудникиНаНачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втРаботающиеСотрудникиНаКонецПериода.Сотрудник,
		|	втРаботающиеСотрудникиНаКонецПериода.Организация,
		|	втРаботающиеСотрудникиНаКонецПериода.Подразделение,
		|	втРаботающиеСотрудникиНаКонецПериода.ВидСобытия
		|ИЗ
		|	втРаботающиеСотрудникиНаКонецПериода КАК втРаботающиеСотрудникиНаКонецПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втУволенныеСотрудникиНаНачалоПериода.Сотрудник,
		|	втУволенныеСотрудникиНаНачалоПериода.Организация,
		|	втУволенныеСотрудникиНаНачалоПериода.Подразделение,
		|	втУволенныеСотрудникиНаНачалоПериода.ВидСобытия
		|ИЗ
		|	втУволенныеСотрудникиНаНачалоПериода КАК втУволенныеСотрудникиНаНачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втУволенныеВТекущемПериоде.Сотрудник,
		|	втУволенныеВТекущемПериоде.Организация,
		|	втУволенныеВТекущемПериоде.Подразделение,
		|	втУволенныеВТекущемПериоде.ВидСобытия
		|ИЗ
		|	втУволенныеВТекущемПериоде КАК втУволенныеВТекущемПериоде
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбъединение.Сотрудник КАК Сотрудник,
		|	втОбъединение.Организация КАК Организация,
		|	втОбъединение.Подразделение КАК Подразделение,
		|	втОбъединение.Сотрудник.Оклад КАК ОкладРазмер
		|ИЗ
		|	втОбъединение КАК втОбъединение
		|ГДЕ
		|	втОбъединение.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.инкВидыКадровыхСобытий.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбъединение.Сотрудник,
		|	втОбъединение.Организация,
		|	втОбъединение.Подразделение
		|
		|УПОРЯДОЧИТЬ ПО
		|	втОбъединение.Сотрудник.Наименование";
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.СотрудникиМассив) Тогда
		
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"инкКадроваяИсторияСотрудников.Сотрудник В (&СотрудникиМассив)","Истина");
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Сотрудник В (&СотрудникиМассив)","Истина");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.Организация) Тогда
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Организация = &Организация","Истина");
	КонецЕсли;		
	
	Если Не ЗначениеЗаполнено(ДанныеНачисленияЗарплаты.Подразделение) Тогда
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"инкКадроваяИсторияСотрудников.Подразделение = &Подразделение","Истина");
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Подразделение = &Подразделение","Истина");
	КонецЕсли;		
	
	Возврат стрТекстЗапроса;
	
КонецФункции

Процедура Ведомость_Заполнение(ДанныеНачисленияЗарплаты)
	
	Если ДанныеНачисленияЗарплаты.булПерерасчет Тогда
		Возврат;
	КонецЕсли;		
	
	ОбъектНачисленияЗарплаты = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты; 
	СотрудникиТаблица = ДанныеНачисленияЗарплаты.СотрудникиТаблица;
	ОчиститьТабличнуюЧастьОбъекта("Ведомость",ДанныеНачисленияЗарплаты);
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
	
		ВедомостьСтрока = ОбъектНачисленияЗарплаты.Ведомость.Добавить();
		ЗаполнитьЗначенияСвойств(ВедомостьСтрока,СотрудникСтрока);
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура Ведомость_Сортировка(ДанныеНачисленияЗарплаты)
	
	Если ДанныеНачисленияЗарплаты.булСортировкаПоСотрудникам Тогда
		ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.Сортировать("Сотрудник");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеПоляТабличнойЧасти_Сотрудники(стрПолеПриемника,стрПолеИсточника,ТабличнаяЧасть,ДанныеНачисленияЗарплаты)
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив;

	Для каждого элСотрудник из СотрудникиМассив Цикл
		
		чСумма = 0;
		стрПоиск = Новый Структура("Сотрудник",элСотрудник);
		массТабличнаяЧасть = ТабличнаяЧасть.НайтиСтроки(стрПоиск);
			
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл
			чСумма = чСумма + стрТабличнаяЧасть[стрПолеИсточника]; 
		КонецЦикла;
		
		массТЧСотрудники = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		Для каждого элТЧСотрудники из массТЧСотрудники Цикл
			элТЧСотрудники[стрПолеПриемника] = чСумма;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьКоэффициентДниЧасы(ДанныеНачисленияЗарплаты,Сотрудник)
	
	чКоэффициент = 0;
	
	стрПоиск = Новый Структура("Сотрудник",Сотрудник);
	ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск); 
	Если ВедомостьМассив.Количество() > 0 Тогда
		
		ВедомостьСтрока = ВедомостьМассив[0]; 
		
		ДниЧасыСтрока = "Часы";
		Если ДанныеНачисленияЗарплаты.ВидРасчетаДниЧасы = Перечисления.инкВидРасчетаДниЧасы.ВДнях Тогда
			ДниЧасыСтрока = "Дни";	
		КонецЕсли;
        НормаСтрока = "";
		Если ВедомостьСтрока["Норма"+ДниЧасыСтрока+"Факт"] <> 0 Тогда
			НормаСтрока = "Норма";	                   
		КонецЕсли;
		
		ДниЧасыЧисло 		= ВедомостьСтрока[НормаСтрока+ДниЧасыСтрока];
		ДниЧасыФактЧисло    = ВедомостьСтрока[НормаСтрока+ДниЧасыСтрока+"Факт"];
		Если ДниЧасыЧисло <> 0 Тогда
			чКоэффициент = Окр(ДниЧасыФактЧисло / ДниЧасыЧисло,2);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ЗагрузкаИзВнешнегоИсточника Тогда
		чКоэффициент = 1;	
	КонецЕсли;
	
	Возврат чКоэффициент; 
	
КонецФункции

Процедура ПрочиеНачисления_Заполнение(ДанныеНачисленияЗарплаты);
	
	Если ДанныеНачисленияЗарплаты.булПерерасчет Тогда
		Возврат;
	КонецЕсли;		

	ОбъектНачисленияЗарплаты = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты;
	ОчиститьТабличнуюЧастьОбъекта("ПрочиеНачисления",ДанныеНачисленияЗарплаты);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление КАК Начисление,
		|	ПлановыеНачисленияСрезПоследних.Организация КАК Организация,
		|	ПлановыеНачисленияСрезПоследних.Подразделение КАК Подразделение,
		|	ПлановыеНачисленияСрезПоследних.РазмерНачисления КАК РазмерНачисления
		|ИЗ
		|	РегистрСведений.инкПлановыеНачисления.СрезПоследних(&Дата, Сотрудник В (&Сотрудники)) КАК ПлановыеНачисленияСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Начисление";
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив;
	
	Запрос.УстановитьПараметр("Дата", ОбъектНачисленияЗарплаты.Дата);
	Запрос.УстановитьПараметр("Сотрудники", СотрудникиМассив);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		стрНачисление = ОбъектНачисленияЗарплаты.ПрочиеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(стрНачисление,ВыборкаДетальныеЗаписи);
		стрНачисление.СуммаНачисления = ВыборкаДетальныеЗаписи.РазмерНачисления;
		
	КонецЦикла;

КонецПроцедуры	

Процедура ПрочиеУдержания_Заполнение(ДанныеНачисленияЗарплаты);
	
	Если ДанныеНачисленияЗарплаты.булПерерасчет Тогда
		Возврат;
	КонецЕсли;		
	
	ОбъектНачисленияЗарплаты = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты;
	ОчиститьТабличнуюЧастьОбъекта("ПрочиеУдержания",ДанныеНачисленияЗарплаты);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеУдержанияСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПлановыеУдержанияСрезПоследних.Удержание КАК Удержание,
		|	ПлановыеУдержанияСрезПоследних.Организация КАК Организация,
		|	ПлановыеУдержанияСрезПоследних.Подразделение КАК Подразделение,
		|	ПлановыеУдержанияСрезПоследних.РазмерУдержания КАК РазмерУдержания
		|ИЗ
		|	РегистрСведений.инкПлановыеУдержания.СрезПоследних(&Дата, Сотрудник В (&Сотрудники)) КАК ПлановыеУдержанияСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Удержание";
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив;
	
	Запрос.УстановитьПараметр("Дата", ОбъектНачисленияЗарплаты.Дата);
	Запрос.УстановитьПараметр("Сотрудники", СотрудникиМассив);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		стрУдержание = ОбъектНачисленияЗарплаты.ПрочиеУдержания.Добавить();
		ЗаполнитьЗначенияСвойств(стрУдержание,ВыборкаДетальныеЗаписи);
		стрУдержание.СуммаУдержания = ВыборкаДетальныеЗаписи.РазмерУдержания;
		
	КонецЦикла;

КонецПроцедуры	

// Расчет РК и СН:
Процедура РКиКН_Расчет(ДанныеНачисленияЗарплаты)
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив;
	
	Для каждого стрСотрудник из СотрудникиМассив Цикл
		
		чРайонныйКоэффициентСумма = 0;
		чСевернаяНадбавкаСумма = 0;
		
		чКоэффициентРК = стрСотрудник.РайонныйКоэффициент;
		чКоэффициентСН = стрСотрудник.СевернаяНадбавка;

		стрПоиск = Новый Структура("Сотрудник",стрСотрудник);
		
		// Прочие начисления:
		массНачисления = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ПрочиеНачисления.НайтиСтроки(стрПоиск);
		Для каждого стрНачисление из массНачисления Цикл
			
			Если стрНачисление.Начисление.РайонныйКоэффициент Тогда
				
				стрНачисление.РайонныйКоэффициент = инкОбщийКлиентСервер.ФинансовоеОкругление(стрНачисление.СуммаНачисления * чКоэффициентРК); 
				чРайонныйКоэффициентСумма = чРайонныйКоэффициентСумма 
				                          + стрНачисление.РайонныйКоэффициент;
										  
			КонецЕсли;
			
			Если стрНачисление.Начисление.СевернаяНадбавка Тогда
				
				стрНачисление.СевернаяНадбавка = инкОбщийКлиентСервер.ФинансовоеОкругление(стрНачисление.СуммаНачисления * чКоэффициентСН); 
				чСевернаяНадбавкаСумма = чСевернаяНадбавкаСумма
				                       + стрНачисление.СевернаяНадбавка;
									   
			КонецЕсли;
			
		КонецЦикла;
		
		// Запись данных в табличную часть сотрудники:
		СотрудникиМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		Для каждого стрСотрудник из СотрудникиМассив Цикл
			
			стрСотрудник.РайонныйКоэффициентОклад 	= инкОбщийКлиентСервер.ФинансовоеОкругление(стрСотрудник.Оклад*чКоэффициентРК);
			стрСотрудник.СевернаяНадбавкаОклад 		= инкОбщийКлиентСервер.ФинансовоеОкругление(стрСотрудник.Оклад*чКоэффициентСН);
			
			стрСотрудник.РайонныйКоэффициент    = стрСотрудник.РайонныйКоэффициентОклад
			                                     + чРайонныйКоэффициентСумма;
			стрСотрудник.СевернаяНадбавка       = стрСотрудник.СевернаяНадбавкаОклад
			                                     + чСевернаяНадбавкаСумма;
			
		КонецЦикла;	
		
	КонецЦикла;   
	
КонецПроцедуры

Процедура Ведомость_НДФЛ(ДанныеНачисленияЗарплаты)
	
	Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		ПоискСотрудника = Новый Структура("Сотрудник",стрСотрудник);
		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(ПоискСотрудника); 
		
		Для каждого ВедомостьСтрока из ВедомостьМассив Цикл

			НДФЛМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.НДФЛ.НайтиСтроки(ПоискСотрудника);
			НДФЛЧисло = 0;
			Для каждого НДФЛЭлемент из НДФЛМассив Цикл
				НДФЛЧисло = НДФЛЧисло + НДФЛЭлемент.СуммаНалога;
			КонецЦикла;		
			
			ВедомостьСтрока.НДФЛ = НДФЛЧисло;		
			
		КонецЦикла;	
			
	КонецЦикла;
	
КонецПроцедуры

Процедура Ведомость_Итоги(ДанныеНачисленияЗарплаты)
	
	Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		ПоискСотрудника = Новый Структура("Сотрудник",стрСотрудник);
		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(ПоискСотрудника); 
		
		Для каждого ВедомостьСтрока из ВедомостьМассив Цикл

			ВедомостьСтрока.ВсегоНачислено  = ВедомостьСтрока.Оклад
											+ ВедомостьСтрока.РайонныйКоэффициент
											+ ВедомостьСтрока.СевернаяНадбавка
											+ ВедомостьСтрока.Отпуск
											+ ВедомостьСтрока.БольничныйЛист
											+ ВедомостьСтрока.ПрочиеНачисления;
			
			ВедомостьСтрока.ВсегоУдержано 	= ВедомостьСтрока.ПрочиеУдержания
			                                + ВедомостьСтрока.НДФЛ;
										
			ВедомостьСтрока.КВыплате	 	= ВедомостьСтрока.ВсегоНачислено
			                                - ВедомостьСтрока.ВсегоУдержано;
							
		КонецЦикла;								
										
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрочиеНачисления_Расчет(ДанныеНачисленияЗарплаты)
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив;

	Для каждого элСотрудник из СотрудникиМассив Цикл
		
		чКоэффициентДни = ПолучитьКоэффициентДниЧасы(ДанныеНачисленияЗарплаты,элСотрудник);
		
		стрПоиск = Новый Структура("Сотрудник",элСотрудник);
		
		// Основные начисления
		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		Оклад = 0;
		Если ВедомостьМассив.Количество() > 0 Тогда
			Для каждого ВедомостьСтрока из ВедомостьМассив Цикл
				Оклад = Оклад + ВедомостьСтрока.ОкладРазмер * чКоэффициентДни;
			КонецЦикла;
		КонецЕсли;			
		
		// Прочие начисления:
		чПрочиеНачисления = 0; 
		массТабличнаяЧасть = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ПрочиеНачисления.НайтиСтроки(стрПоиск);
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл
			
			Если стрТабличнаяЧасть.Начисление.ВПроцентах Тогда
				Продолжить;		
			КонецЕсли;    
			
			Если ЗначениеЗаполнено(стрТабличнаяЧасть.ДокументСсылка) Тогда
            	Продолжить;
			КонецЕсли;
                     		
			чПрочиеНачисления = чПрочиеНачисления + стрТабличнаяЧасть.СуммаНачисления;
			
		КонецЦикла;
		
		// Прочие начисления - расчет процентом:
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл
			
			Если НЕ стрТабличнаяЧасть.Начисление.ВПроцентах Тогда
				Продолжить;
			КонецЕсли;
			
			Если стрТабличнаяЧасть.СуммаНачисления <> 0 Тогда
				Продолжить;	
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(стрТабличнаяЧасть.ДокументСсылка) Тогда
            	Продолжить;
			КонецЕсли;
				
			чБаза = 0;
			чПроцент = стрТабличнаяЧасть.ПроцентОтБазы / 100;
			
			// Расчет базы:
			БазовыеНачисления = стрТабличнаяЧасть.Начисление.БазовыеВидыРасчета;
			Для каждого стрБазовоеНачисление Из БазовыеНачисления Цикл
				
				// Основная зарплата:
				Если стрБазовоеНачисление.ВидРасчета = ПланыВидовРасчета.инкНачисления.ОсновнаяЗарплата Тогда
					чБаза = чБаза + Оклад;	
					Продолжить;
				КонецЕсли;
				
				// Прочие начисления:
				Для каждого стрБазовоеНачислениеСотрудника из массТабличнаяЧасть Цикл 
					Если стрБазовоеНачислениеСотрудника.Начисление = стрБазовоеНачисление.ВидРасчета Тогда
						чБаза = чБаза + стрБазовоеНачислениеСотрудника.СуммаНачисления;	
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
							
			//стрТабличнаяЧасть.СуммаНачисления = чБаза * чКоэффициентДни * чПроцент;
            стрТабличнаяЧасть.СуммаНачисления = чБаза * чПроцент;
			
		КонецЦикла;
		
		// Больничные листы и отпуска:
		чБольничныйЛист = 0;
		чОтпуск = 0;
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл

			Если ЗначениеЗаполнено(стрТабличнаяЧасть.ДокументСсылка) Тогда
				
				Если ТипЗнч(стрТабличнаяЧасть.ДокументСсылка) = Тип("ДокументСсылка.инкБольничныйЛист") Тогда
					чБольничныйЛист = чБольничныйЛист + стрТабличнаяЧасть.СуммаНачисления;	
				ИначеЕсли ТипЗнч(стрТабличнаяЧасть.ДокументСсылка) = Тип("ДокументСсылка.инкОтпускРасчетПоСреднему") Тогда
					чОтпуск = чОтпуск + стрТабличнаяЧасть.СуммаНачисления;	
				Иначе
					чПрочиеНачисления = чПрочиеНачисления + стрТабличнаяЧасть.СуммаНачисления;	
				КонецЕсли;
				
			Иначе
				чПрочиеНачисления = чПрочиеНачисления + стрТабличнаяЧасть.СуммаНачисления;	
			КонецЕсли;  
			
		КонецЦикла;
		
		// Запись в сотрудники:
		массТабличнаяЧасть = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл
			
			стрТабличнаяЧасть.ПрочиеНачисления	= чПрочиеНачисления;
			стрТабличнаяЧасть.БольничныйЛист	= чБольничныйЛист;
			стрТабличнаяЧасть.Отпуск           	= чОтпуск;
			
		КонецЦикла;		
		
	КонецЦикла;

КонецПроцедуры
	
Процедура ПрочиеУдержания_Расчет(ДанныеНачисленияЗарплаты)
	
	СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив;

	Для каждого элСотрудник из СотрудникиМассив Цикл
		
		стрПоиск = Новый Структура("Сотрудник",элСотрудник);
		
		// Прочие удержания:
		чПрочиеУдержания = 0;
		массТабличнаяЧасть = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.ПрочиеУдержания.НайтиСтроки(стрПоиск);
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл
			чПрочиеУдержания = чПрочиеУдержания + стрТабличнаяЧасть.СуммаУдержания;	
		КонецЦикла;
		
		// Запись в сотрудники:
		массТабличнаяЧасть = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(стрПоиск);
		Для каждого стрТабличнаяЧасть из массТабличнаяЧасть Цикл
			стрТабличнаяЧасть.ПрочиеУдержания = чПрочиеУдержания;
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура Ведомость_Расчет(ДанныеНачисленияЗарплаты)
	
	Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		ПоискСотрудника = Новый Структура("Сотрудник",стрСотрудник);
		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(ПоискСотрудника); 
		
		Для каждого ВедомостьСтрока из ВедомостьМассив Цикл
		
			чКоэффициентДни = ПолучитьКоэффициентДниЧасы(ДанныеНачисленияЗарплаты,стрСотрудник);
			ВедомостьСтрока.Оклад = ВедомостьСтрока.Сотрудник.Оклад * чКоэффициентДни; 
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОблагаемыйДоход_ДобавитьДоход(ОблагаемыйДоходТаблица,Сотрудник,ОблагаемыйДоход)
	
	Если Не ЗначениеЗаполнено(Сотрудник) ИЛИ (ОблагаемыйДоход > 0) Тогда
		Возврат;
	КонецЕсли;
	
	ОблагаемыйДоходСтрока = ОблагаемыйДоходТаблица.Добавить();
	ОблагаемыйДоходСтрока.Сотрудник = Сотрудник;
	ОблагаемыйДоходСтрока.СуммаДохода = ОблагаемыйДоход;
	
КонецПроцедуры

Процедура Загрузить_СтандартныеВычетыНастройки(ДанныеНачисленияЗарплаты)
	
	ДанныеНачисленияЗарплаты.Вставить("МаксимальнаяСуммаНаДетей");
	ДанныеНачисленияЗарплаты.Вставить("Мрот");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкСтандартныеВычетыНастройкиСрезПоследних.Период КАК Период,
		|	инкСтандартныеВычетыНастройкиСрезПоследних.МаксимальнаяСуммаНаДетей КАК МаксимальнаяСуммаНаДетей,
		|	инкСтандартныеВычетыНастройкиСрезПоследних.Мрот КАК Мрот
		|ИЗ
		|	РегистрСведений.инкСтандартныеВычетыНастройки.СрезПоследних(&Дата1, ) КАК инкСтандартныеВычетыНастройкиСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата1", ДанныеНачисленияЗарплаты.МесяцНачисления);
	СтандартныеВычетыНастройки = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТаблицы из СтандартныеВычетыНастройки Цикл
		
		ДанныеНачисленияЗарплаты.МаксимальнаяСуммаНаДетей		= СтрокаТаблицы.МаксимальнаяСуммаНаДетей;
		ДанныеНачисленияЗарплаты.Мрот							= СтрокаТаблицы.Мрот;
		
	КонецЦикла;	
		
КонецПроцедуры

Процедура Ведомость_Сальдо(ДанныеНачисленияЗарплаты)
    
    ПредыдущийПериодДата = ДобавитьМесяц(ДанныеНачисленияЗарплаты.МесяцНачисления,-1);
    СотрудникиМассив = ДанныеНачисленияЗарплаты.СотрудникиМассив; 
    
    // Расчет входящего сальдо:
    СальдоВходящееТаблица = ПолучитьСальдоЗаПериод(ПредыдущийПериодДата,СотрудникиМассив);
   	Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
		
		ПоискСотрудника = Новый Структура("Сотрудник",стрСотрудник);
		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(ПоискСотрудника); 
		
		Для каждого ВедомостьСтрока из ВедомостьМассив Цикл

			СальдоВходящееМассив = СальдоВходящееТаблица.НайтиСтроки(ПоискСотрудника);
			СальдоВходящееЧисло = 0;
			Для каждого СальдоВходящееЭлемент из СальдоВходящееМассив Цикл
				СальдоВходящееЧисло = СальдоВходящееЧисло + СальдоВходящееЭлемент.Сальдо;
			КонецЦикла;		
            
            Если СальдоВходящееЧисло<>0 Тогда
                ВедомостьСтрока.СальдоВходящее = СальдоВходящееЧисло;	
            КонецЕсли;					
			
		КонецЦикла;	
			
	КонецЦикла;
    
    // Расчет исходящего сальдо:
    Если ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.УчитыватьКакСальдоСуммуЗаПредыдущийМесяц Тогда
        
        Для каждого стрСотрудник из ДанныеНачисленияЗарплаты.СотрудникиМассив Цикл
    		
    		ПоискСотрудника = Новый Структура("Сотрудник",стрСотрудник);
    		ВедомостьМассив = ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты.Ведомость.НайтиСтроки(ПоискСотрудника); 
    		
    		Для каждого ВедомостьСтрока из ВедомостьМассив Цикл

    			ВедомостьСтрока.СальдоИсходящее = ВедомостьСтрока.СальдоВходящее
                                                + ВедомостьСтрока.ВсегоНачислено
                                                - ВедомостьСтрока.ВсегоУдержано;
    			
    		КонецЦикла;	
    			
    	КонецЦикла;
    	
    КонецЕсли; 
    
КонецПроцедуры

Функция ПолучитьСальдоЗаПериод(ПредыдущийПериодДата,СотрудникиМассив)
    
    // Исходящее сальдо прошлого период, в текущем будет входящим:
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   инкВедомостиОбороты.Сотрудник КАК Сотрудник,
        |   инкВедомостиОбороты.СальдоИсходящееОборот КАК Сальдо
        |ИЗ
        |   РегистрНакопления.инкВедомости.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкВедомостиОбороты";
    
    Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ПредыдущийПериодДата));
    Запрос.УстановитьПараметр("Дата2", КонецМесяца(ПредыдущийПериодДата));
    Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
    
    тз = Запрос.Выполнить().Выгрузить();
    тз.Индексы.Добавить("Сотрудник");
    
    Возврат тз;
    
КонецФункции
 
#КонецОбласти