
#Область о // Параметры:

// Параметры:
//	ДанныеДляРасчетаВзносов - структура, содержит информацию для расчета взносов:
// 		Организация  - ссылка, справочник инкОрганизации;
//		ПодразделенияМассив - массив, справочник инкПодразделения;
//		Дата1 - дата, начало расчетного периода;
// 		Дата2 - дата, окончание расчетного периода;
//		СортировкаПоСотрудникам - булево, сортировать табличную часть Сотрудники.
//		СотрудникиМассив - массив, список сотрудников для расчета (отладки);
//		СформироватьТабличныеДокументыВЗН - булево, признак формирования табличных документово;
//
//	РезультатРасчета - структура, содержит результирующие таблицы расчета взносов:
// 		ВзносыТаблица_Месяц		- расчет взносов по-месячно;	
//  	ВзносыТаблица_Квартал	- расчет взносов по-квартально;
//  	ВзносыТаблица_Год		- расчет взносов за год (весь период);
//
//  СводныеДанные  - структура, содержит результирующие таблицы расчета взносов:
//		Взносы  					- расчет взносов по периодам
//      Численность					- расчет численности в разрезе по периодам;
//		Пособия						- расчет пособий за период (для отчета);
//
//	ТабличныеДокументы - структура, содержит табличные документы для вывода на печать:	
//  	ВзносыСортировкаПоОблагаемойБазе 	- табличный документ, отчет: ВЗН. 
//		ВзносыСортировкаПоФИО 				- табличный документ, отчет: ВЗН.
//		ПФ                                  - табличный документ, отчет: ВЗН.
//		Инвалиды                            - табличный документ, отчет: ВЗН.

#КонецОбласти

#Область о // Переменные:

Перем ДанныеДляРасчетаВзносов Экспорт;
Перем РезультатРасчета Экспорт;	
Перем ТабличныеДокументы Экспорт;	
Перем СводныеДанные Экспорт;	

#КонецОбласти

#Область о // Фомирование табличных документов:

Процедура Взносы_СформироватьТабличныеДокументы(ИсходныеДанные)
	
	Если Не ДанныеДляРасчетаВзносов.СформироватьТабличныеДокументы Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныеДокументы.ВзносыСортировкаПоОблагаемойБазе = СформироватьТабличныйДокумент_Взносы("ОблагаемаяБаза",ИсходныеДанные);
	ТабличныеДокументы.ВзносыСортировкаПоФИО = СформироватьТабличныйДокумент_Взносы("ФИО",ИсходныеДанные);
	ТабличныеДокументы.ПФ = СформироватьТабличныйДокумент_ПФ(ИсходныеДанные);
	ТабличныеДокументы.Инвалиды = СформироватьТабличныйДокумент_Инвалиды(ИсходныеДанные);
	ТабличныеДокументы.ВзносыМСБ = СформироватьТабличныйДокумент_ВзносыМСБ("ФИО",ИсходныеДанные);
	
КонецПроцедуры

Функция СформироватьТабличныйДокумент_ВзносыМСБ(ВидСортировки,ИсходныеДанные)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ВзносыМСБ");
	ВзносыТаблица_Год	= РезультатРасчета.ВзносыТаблица_Год; 
	Регресс_Взносы		= РезультатРасчета.Регресс_Взносы; 
	           	
	Если ВидСортировки = "ОблагаемаяБаза" Тогда
		ВзносыТаблица_Год.Сортировать("ОблагаемаяБаза");
	ИначеЕсли ВидСортировки = "ФИО" Тогда
		ВзносыТаблица_Год.Сортировать("ФИО");
	КонецЕсли;
	
	// Основная таблица:
	ВывестиЗаголовокСтраницы(Макет,ТабДок,ДанныеДляРасчетаВзносов);
	ВывестиШапкуТаблицы(Макет,ТабДок,ДанныеДляРасчетаВзносов,ИсходныеДанные,Истина);
	
	СтрокаТаблицыОбласть = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого ВзносыСтрока из ВзносыТаблица_Год Цикл
		
		Если ВзносыСтрока.Доход <> 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыОбласть.Параметры,ВзносыСтрока);
			ТабДок.Вывести(СтрокаТаблицыОбласть);
		КонецЕсли; 
		
	КонецЦикла;
	
	ВзносыТаблица_Всего = ВзносыТаблица_Год.Скопировать();
	ВзносыТаблица_Всего.Свернуть(,ПолучитьПоляДляСуммированияТаблицВЗН());
	
	ИтогТаблицыОбласть = Макет.ПолучитьОбласть("ИтогТаблицы"); 
	Для каждого ВзносыСтрока из ВзносыТаблица_Всего Цикл
		
		ЗаполнитьЗначенияСвойств(ИтогТаблицыОбласть.Параметры,ВзносыСтрока);
		ТабДок.Вывести(ИтогТаблицыОбласть);
		
	КонецЦикла;
	
	ОтступОбласть = Макет.ПолучитьОбласть("Отступ"); 
	ТабДок.Вывести(ОтступОбласть);

	// Регресс:
	РегрессШапкаОбласть = Макет.ПолучитьОбласть("РегрессШапка");
	ТабДок.Вывести(РегрессШапкаОбласть);

	РегрессСтрокаОбласть = Макет.ПолучитьОбласть("РегрессСтрока");
	Для каждого РегрессСтрока из Регресс_Взносы Цикл
		ЗаполнитьЗначенияСвойств(РегрессСтрокаОбласть.Параметры,РегрессСтрока);
		ТабДок.Вывести(РегрессСтрокаОбласть);
	КонецЦикла;
	
	Регресс_Взносы_Итоги = Регресс_Взносы.Скопировать();
	Регресс_Взносы_Итоги.Свернуть("","Численность,ОблагаемаяБазаСПревышением,ОблагаемаяБаза,ОблагаемаяБазаПревышение,ПФ,ФФОМС,НСиПЗ,ФСС");
	РегрессИтогиОбласть = Макет.ПолучитьОбласть("РегрессИтоги");
	Для каждого РегрессИтогиСтрока из Регресс_Взносы_Итоги Цикл
		ЗаполнитьЗначенияСвойств(РегрессИтогиОбласть.Параметры,РегрессИтогиСтрока);
		ТабДок.Вывести(РегрессИтогиОбласть);
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция СформироватьТабличныйДокумент_Взносы(ВидСортировки,ИсходныеДанные)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Взносы");
	ВзносыТаблица_Год	= РезультатРасчета.ВзносыТаблица_Год; 
	Регресс_Взносы		= РезультатРасчета.Регресс_Взносы; 
	                	
	Если ВидСортировки = "ОблагаемаяБаза" Тогда
		ВзносыТаблица_Год.Сортировать("Доход Возр");
	ИначеЕсли ВидСортировки = "ФИО" Тогда
		ВзносыТаблица_Год.Сортировать("ФИО Возр");
	КонецЕсли;
	
	// Основная таблица:
	ВывестиЗаголовокСтраницы(Макет,ТабДок,ДанныеДляРасчетаВзносов);
	ВывестиШапкуТаблицы(Макет,ТабДок,ДанныеДляРасчетаВзносов,ИсходныеДанные);
	
	СтрокаТаблицыОбласть = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого ВзносыСтрока из ВзносыТаблица_Год Цикл
		
		Если ВзносыСтрока.Доход <> 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыОбласть.Параметры,ВзносыСтрока);
			ТабДок.Вывести(СтрокаТаблицыОбласть);
		КонецЕсли; 
		
	КонецЦикла;
	
	ВзносыТаблица_Всего = ВзносыТаблица_Год.Скопировать();
	ВзносыТаблица_Всего.Свернуть(,ПолучитьПоляДляСуммированияТаблицВЗН());
	
	ИтогТаблицыОбласть = Макет.ПолучитьОбласть("ИтогТаблицы"); 
	Для каждого ВзносыСтрока из ВзносыТаблица_Всего Цикл
		
		ЗаполнитьЗначенияСвойств(ИтогТаблицыОбласть.Параметры,ВзносыСтрока);
		ТабДок.Вывести(ИтогТаблицыОбласть);
		
	КонецЦикла;
	
	ОтступОбласть = Макет.ПолучитьОбласть("Отступ"); 
	ТабДок.Вывести(ОтступОбласть);

	// Регресс:
	РегрессШапкаОбласть = Макет.ПолучитьОбласть("РегрессШапка");
	ТабДок.Вывести(РегрессШапкаОбласть);

	РегрессСтрокаОбласть = Макет.ПолучитьОбласть("РегрессСтрока");
	Для каждого РегрессСтрока из Регресс_Взносы Цикл
		ЗаполнитьЗначенияСвойств(РегрессСтрокаОбласть.Параметры,РегрессСтрока);
		ТабДок.Вывести(РегрессСтрокаОбласть);
	КонецЦикла;
	
	Регресс_Взносы_Итоги = Регресс_Взносы.Скопировать();
	Регресс_Взносы_Итоги.Свернуть("","Численность,ОблагаемаяБазаСПревышением,ОблагаемаяБаза,ОблагаемаяБазаПревышение,ПФ,ФФОМС,НСиПЗ,ФСС");
	РегрессИтогиОбласть = Макет.ПолучитьОбласть("РегрессИтоги");
	Для каждого РегрессИтогиСтрока из Регресс_Взносы_Итоги Цикл
		ЗаполнитьЗначенияСвойств(РегрессИтогиОбласть.Параметры,РегрессИтогиСтрока);
		ТабДок.Вывести(РегрессИтогиОбласть);
	КонецЦикла;
	
	Возврат ТабДок; 
	
 КонецФункции

Функция СформироватьТабличныйДокумент_ПФ(ИсходныеДанные)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ");
	ВзносыТаблица_Год = РезультатРасчета.ВзносыТаблица_Год; 
	Регресс_ПФ = РезультатРасчета.Регресс_ПФ;
	
	//
	ВывестиЗаголовокСтраницы(Макет,ТабДок,ДанныеДляРасчетаВзносов);
	//
	
	ШапкаОбласть = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(ШапкаОбласть);
	
	// Основная таблица:
	Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого ВзносыСтрока из ВзносыТаблица_Год Цикл
		
		Если ВзносыСтрока.Доход <> 0 Тогда
			ЗаполнитьЗначенияСвойств(Область.Параметры,ВзносыСтрока);
			ТабДок.Вывести(Область);
		КонецЕсли; 
		
	КонецЦикла;
	
	Для Индекс = 1 по 3 Цикл
		ОтступОбласть = Макет.ПолучитьОбласть("Отступ"); 
		ТабДок.Вывести(ОтступОбласть);
	КонецЦикла;
		
	// Регресс:
	Область = Макет.ПолучитьОбласть("СводШапка");
	ТабДок.Вывести(Область);

	Область = Макет.ПолучитьОбласть("СводСтрока");
	Для каждого РегрессСтрока из Регресс_ПФ Цикл
		Если РегрессСтрока.ОблагаемаяБаза <> 0 Тогда
			ЗаполнитьЗначенияСвойств(Область.Параметры,РегрессСтрока);
			ТабДок.Вывести(Область);
		КонецЕсли; 
	КонецЦикла;
	
	Регресс_ПФ_Итоги = Регресс_ПФ.Скопировать();
	Регресс_ПФ_Итоги.Свернуть("","Численность,ОблагаемаяБаза,ОблагаемаяБазаПревышение,ПФ,ПФПревышение");
	Область = Макет.ПолучитьОбласть("СводИтог");
	Для каждого РегрессИтогиСтрока из Регресс_ПФ_Итоги Цикл
		ЗаполнитьЗначенияСвойств(Область.Параметры,РегрессИтогиСтрока);
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция СформироватьТабличныйДокумент_Инвалиды(ИсходныеДанные)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Инвалиды");
	ВзносыТаблица_ГодИнвалиды = ПолучитьТаблицуПоИнвалидам(РезультатРасчета);
	Регресс_Инвалиды = РезультатРасчета.Регресс_Инвалиды; 
	
	// Основная таблица:
	ВывестиЗаголовокСтраницы(Макет,ТабДок,ДанныеДляРасчетаВзносов);
	ВывестиШапкуТаблицы(Макет,ТабДок,ДанныеДляРасчетаВзносов,ИсходныеДанные);
	
	СтрокаТаблицыОбласть = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого ВзносыСтрока из ВзносыТаблица_ГодИнвалиды Цикл
		
		Если ВзносыСтрока.Доход <> 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыОбласть.Параметры,ВзносыСтрока);
			ТабДок.Вывести(СтрокаТаблицыОбласть);
		КонецЕсли; 
			
	КонецЦикла;
	
	ВзносыТаблица_Всего = ВзносыТаблица_ГодИнвалиды.Скопировать();
	ВзносыТаблица_Всего.Свернуть(,ПолучитьПоляДляСуммированияТаблицВЗН());
	
	ИтогТаблицыОбласть = Макет.ПолучитьОбласть("ИтогТаблицы"); 
	Для каждого ВзносыСтрока из ВзносыТаблица_Всего Цикл
		
		ЗаполнитьЗначенияСвойств(ИтогТаблицыОбласть.Параметры,ВзносыСтрока);
		ТабДок.Вывести(ИтогТаблицыОбласть);
		
	КонецЦикла;
	
	ОтступОбласть = Макет.ПолучитьОбласть("Отступ"); 
	ТабДок.Вывести(ОтступОбласть);

	// Регресс:
	РегрессШапкаОбласть = Макет.ПолучитьОбласть("РегрессШапка");
	ТабДок.Вывести(РегрессШапкаОбласть);

	РегрессСтрокаОбласть = Макет.ПолучитьОбласть("РегрессСтрока");
	Для каждого РегрессСтрока из Регресс_Инвалиды Цикл
		ЗаполнитьЗначенияСвойств(РегрессСтрокаОбласть.Параметры,РегрессСтрока);
		ТабДок.Вывести(РегрессСтрокаОбласть);
	КонецЦикла;
	
	Регресс_Взносы_Итоги = Регресс_Инвалиды.Скопировать();
	Регресс_Взносы_Итоги.Свернуть("","Численность,ОблагаемаяБазаСПревышением,ОблагаемаяБаза,ОблагаемаяБазаПревышение,ПФ,ФФОМС,НСиПЗ,ФСС");
	РегрессИтогиОбласть = Макет.ПолучитьОбласть("РегрессИтоги");
	Для каждого РегрессИтогиСтрока из Регресс_Взносы_Итоги Цикл
		ЗаполнитьЗначенияСвойств(РегрессИтогиОбласть.Параметры,РегрессИтогиСтрока);
		ТабДок.Вывести(РегрессИтогиОбласть);
	КонецЦикла;
	
	Возврат ТабДок;

КонецФункции

Процедура ВывестиЗаголовокСтраницы(Макет,ТабДок,ДанныеДляРасчетаВзносов)
	
	ЗаголовокОбласть = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОбласть.Параметры.РасчетныйПериод = "За "
	                                           + Формат(ДанныеДляРасчетаВзносов.Дата1, "ДФ='ММММ гггг'")
											   + " - "
											   + Формат(ДанныеДляРасчетаВзносов.Дата2, "ДФ='ММММ гггг'"); 
	
	ЗаголовокОбласть.Параметры.ТекущаяДата = ТекущаяДата(); 		
	ЗаголовокОбласть.Параметры.Подразделения = "Все подразделения";
	Если ДанныеДляРасчетаВзносов.ПодразделенияМассив.Количество() > 0 Тогда
		ЗаголовокОбласть.Параметры.Подразделения = "";
		Для каждого ПодразделениеСтрока из ДанныеДляРасчетаВзносов.ПодразделенияМассив Цикл
			ЗаголовокОбласть.Параметры.Подразделения = ЗаголовокОбласть.Параметры.Подразделения
			                                         + ", "
			                                         + ПодразделениеСтрока;
		КонецЦикла;
		ЗаголовокОбласть.Параметры.Подразделения = Лев(ЗаголовокОбласть.Параметры.Подразделения,СтрДлина(ЗаголовокОбласть.Параметры.Подразделения) - 2);
	КонецЕсли;
	
	ТабДок.Вывести(ЗаголовокОбласть);

	ОтступОбласть = Макет.ПолучитьОбласть("Отступ"); 
	ТабДок.Вывести(ОтступОбласть);
	
КонецПроцедуры

Процедура ВывестиШапкуТаблицы(Макет,ТабДок,ДанныеДляРасчетаВзносов,ИсходныеДанные,МСБ = Ложь)

	ШапкаОбласть = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	// Заполнение тарифов в пределах лимита:
	СтрокаТарифаВЗН = Перечисления.инкСтрокаТарифаВЗН.ТарифВПределахЛимита;
	ПоискСтроки 	= Новый Структура("СтрокаТарифаВЗН",СтрокаТарифаВЗН);
	КВФМассив 		= ИсходныеДанные.КонфигурацияВыплатВФонды.НайтиСтроки(ПоискСтроки);
	
	Для каждого КВФСтрока из КВФМассив Цикл
		ЗаполнитьЗначенияСвойств(ШапкаОбласть.Параметры,КВФСтрока);
	КонецЦикла;
	
	// Заполнение тарифов в пределах лимита для МСБ:
	Если МСБ Тогда
		
		СтрокаТарифаВЗН = Перечисления.инкСтрокаТарифаВЗН.ТарифСвышеМРОТДляМСБ;
		ПоискСтроки 	= Новый Структура("СтрокаТарифаВЗН",СтрокаТарифаВЗН);
		КВФМассив 		= ИсходныеДанные.КонфигурацияВыплатВФонды.НайтиСтроки(ПоискСтроки);
	
		Для каждого КВФСтрока из КВФМассив Цикл
			ШапкаОбласть.Параметры.ПФПревышение = КВФСтрока.ПФ;
			ШапкаОбласть.Параметры.ФФОМСПревышение = КВФСтрока.ФФОМС;
		КонецЦикла;	
		
	КонецЕсли;	
	
	ТабДок.Вывести(ШапкаОбласть);
	
КонецПроцедуры

#КонецОбласти

#Область о // Инициализация:

Процедура Инициализация() Экспорт
	
	ДанныеДляРасчетаВзносов = Новый Структура;
	ДанныеДляРасчетаВзносов.Вставить("Организация",Справочники.инкОрганизации.ПустаяСсылка());
	ДанныеДляРасчетаВзносов.Вставить("ПодразделенияМассив",Новый Массив);
	ДанныеДляРасчетаВзносов.Вставить("Дата1",НачалоГода(ТекущаяДата()));
	ДанныеДляРасчетаВзносов.Вставить("Дата2",КонецГода(ТекущаяДата()));
	ДанныеДляРасчетаВзносов.Вставить("СортировкаПоСотрудникам",Истина); 
	ДанныеДляРасчетаВзносов.Вставить("СотрудникиМассив",Новый Массив);
	ДанныеДляРасчетаВзносов.Вставить("СформироватьТабличныеДокументы",Ложь);
		
	РезультатРасчета = Новый Структура;
	РезультатРасчета.Вставить("ВзносыТаблица_Месяц",ПолучитьСтруктуруВзносы_Месяц());
	РезультатРасчета.Вставить("ВзносыТаблица_Квартал");
	РезультатРасчета.Вставить("ВзносыТаблица_Год");
	РезультатРасчета.Вставить("Регресс_Взносы",ПолучитьСтруктуруРегрессВзносы());
	РезультатРасчета.Вставить("Регресс_ПФ",ПолучитьСтруктуруРегрессПФ());
	РезультатРасчета.Вставить("Регресс_Инвалиды",ПолучитьСтруктуруРегрессВзносы());
	
	ТабличныеДокументы = Новый Структура;
	ТабличныеДокументы.Вставить("ВзносыСортировкаПоОблагаемойБазе",Неопределено);
	ТабличныеДокументы.Вставить("ВзносыСортировкаПоФИО",Неопределено);
	ТабличныеДокументы.Вставить("ПФ",Неопределено);
	ТабличныеДокументы.Вставить("Инвалиды",Неопределено);
	ТабличныеДокументы.Вставить("ВзносыМСБ",Неопределено);
    
    СводныеДанные = Новый Структура;
	СводныеДанные.Вставить("Взносы", ПолучитьСтруктуруСводВзносы());
	СводныеДанные.Вставить("Численность", ПолучитьСтруктуруСводЧисленность());
	СводныеДанные.Вставить("Пособия", ПолучитьСтруктуруСводПособия());
	                                   	
КонецПроцедуры

#КонецОбласти

#Область о // Структура таблиц:

Функция ПолучитьСтруктуруВзносы_Месяц()
	
	СтруктураТаблицы = Новый ТаблицаЗначений;
	
	//
	СтруктураТаблицы.Колонки.Добавить("Сотрудник");
	СтруктураТаблицы.Колонки.Добавить("ФИО");
	СтруктураТаблицы.Колонки.Добавить("Инвалид");
	СтруктураТаблицы.Колонки.Добавить("Пол");
	СтруктураТаблицы.Колонки.Добавить("ГодРождения");
	СтруктураТаблицы.Колонки.Добавить("ДатаРождения");
	СтруктураТаблицы.Колонки.Добавить("СтатусРезидента");
	//
	СтруктураТаблицы.Колонки.Добавить("ДатаПриемаНаРаботу");
	СтруктураТаблицы.Колонки.Добавить("ДатаУвольнения");
	//
	СтруктураТаблицы.Колонки.Добавить("Месяц",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("Квартал",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата"));
	//
	СтруктураТаблицы.Колонки.Добавить("Доход",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБаза",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБазаПревышение",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБазаФСС",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБазаФССПревышение",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("Ст9ФЗ212",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("МатПомощь",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ВыплатыИнвалидам",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ДоговорыГПХ",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ПФ",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ПФПревышение",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФФОМС",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФФОМСПревышение",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("НСиПЗ",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФСС",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФССИностранцы",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФССПревышение",Новый ОписаниеТипов("Число"));
	//
	ДобавитьВСтруктурыТаблицыКолонкиПоЧисленности(СтруктураТаблицы);
	//
	
	Возврат СтруктураТаблицы; 
	
КонецФункции

Процедура ДобавитьВСтруктурыТаблицыКолонкиПоЧисленности(СтруктураТаблицы)

    //
	СтруктураТаблицы.Колонки.Добавить("СреднесписочнаяЧисленность",Новый ОписаниеТипов("Число"));
	//
	СтруктураТаблицы.Колонки.Добавить("МужчиныКоличество",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ЖенщиныКоличество",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ИнвалидыКоличество",Новый ОписаниеТипов("Число"));
	//
	СтруктураТаблицы.Колонки.Добавить("ЗастрахованныеКоличество",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ЗастрахованныеПФКоличество",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ЗастрахованныеПФПревышениеБазыКоличество",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ЗастрахованныеФССКоличество",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ЗастрахованныеФССПревышениеБазыКоличество",Новый ОписаниеТипов("Число"));
		
КонецПроцедуры

Функция ПолучитьСтруктуруРегрессВзносы()
	
	СтруктураТаблицы = Новый ТаблицаЗначений;
	
	//
	СтруктураТаблицы.Колонки.Добавить("СтрокаТарифа");
	СтруктураТаблицы.Колонки.Добавить("Численность",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБазаСПревышением",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБаза",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБазаПревышение",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ПФ",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФФОМС",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("НСиПЗ",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ФСС",Новый ОписаниеТипов("Число"));
	//
	
	Возврат СтруктураТаблицы; 
	
КонецФункции

Функция ПолучитьСтруктуруРегрессПФ()
	
	СтруктураТаблицы = Новый ТаблицаЗначений;
	
	//
	СтруктураТаблицы.Колонки.Добавить("НаименованиеПоказателя");
	СтруктураТаблицы.Колонки.Добавить("КодОснования");
	СтруктураТаблицы.Колонки.Добавить("Численность",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБаза",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ОблагаемаяБазаПревышение",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ПФ",Новый ОписаниеТипов("Число"));
	СтруктураТаблицы.Колонки.Добавить("ПФПревышение",Новый ОписаниеТипов("Число"));
	//
	
	Возврат СтруктураТаблицы; 
	
КонецФункции

Функция ПолучитьСтруктуруВзносы_Год(ИсходныеДанные,РезультатРасчета)

	ПоляДляГруппировки = ПолучитьПоляДляГруппировкиТаблицВЗН();
	ПоляДляСуммирования = ПолучитьПоляДляСуммированияТаблицВЗН();
	
	ВзносыТаблица_Год	= РезультатРасчета.ВзносыТаблица_Месяц.Скопировать();
	УдалитьСтрокиНеВходящиеВПериод(ИсходныеДанные, ВзносыТаблица_Год);
	
	ВзносыТаблица_Год.Свернуть(ПоляДляГруппировки,ПоляДляСуммирования);

	Возврат ВзносыТаблица_Год; 
	
КонецФункции

Процедура УдалитьСтрокиНеВходящиеВПериод(ИсходныеДанные, ТЗ)
	
	Если ИсходныеДанные.Месяц1 = ИсходныеДанные.Месяц2 Тогда
		
		Для Индекс = -ТЗ.Количество() + 1 По 0 Цикл
		    Если ТЗ[-Индекс].Месяц <> ИсходныеДанные.Месяц1 Тогда
		        ТЗ.Удалить(-Индекс);
		    КонецЕсли;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция СтруктураДанныхПособияСводТаблица()
	
	ПособияСтруктура = Новый Структура;
	ПособияСтруктура.Вставить("ЧислоСлучаев",Новый ОписаниеТипов("Число"));
	ПособияСтруктура.Вставить("КоличествоДней",Новый ОписаниеТипов("Число"));
	ПособияСтруктура.Вставить("РасходыВсего",Новый ОписаниеТипов("Число"));
	ПособияСтруктура.Вставить("РасходыЗасчетФедеральногоБюджета",Новый ОписаниеТипов("Число"));
	
	Возврат ПособияСтруктура;
	
КонецФункции                                

Функция ПолучитьСтруктуруСводВзносы()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ВзносыСводТаблица_Месяц");
	СтруктураДанных.Вставить("ВзносыСводТаблица_Квартал");
	СтруктураДанных.Вставить("ВзносыСводТаблица_Год");
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПолучитьСтруктуруЧисленностьТаблица()
	
	СтруктураТаблицы = Новый ТаблицаЗначений;
	СтруктураТаблицы.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата"));

	//
	ДобавитьВСтруктурыТаблицыКолонкиПоЧисленности(СтруктураТаблицы);
	//
	
	Возврат СтруктураТаблицы;
	
КонецФункции

Функция ПолучитьСтруктуруСводЧисленность()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЧисленностьСводТаблица_Месяц",ПолучитьСтруктуруЧисленностьТаблица());
	СтруктураДанных.Вставить("ЧисленностьСводТаблица_Квартал",ПолучитьСтруктуруЧисленностьТаблица());
	СтруктураДанных.Вставить("ЧисленностьСводТаблица_Год",ПолучитьСтруктуруЧисленностьТаблица());
	
	Возврат СтруктураДанных;

КонецФункции

Функция ПолучитьСтруктуруПособияСвод()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Период",Новый ОписаниеТипов("Дата"));

    //
	СтруктураДанных.Вставить("НетрудБезИностр",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("НетрудБезИнострСовместители",СтруктураДанныхПособияСводТаблица());
	//
	СтруктураДанных.Вставить("НетрудИностр",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("НетрудИнострСовместители",СтруктураДанныхПособияСводТаблица());
	//
	СтруктураДанных.Вставить("ПоБеременностиИРодам",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ПоБеременностиИРодамСовместители",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ПоБеременностиИРодамВРанниеСроки",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ПриРожденииРебенка",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ПоУходуЗаРебенком",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ПоУходуЗаРебенкомЗаПервымРебенком",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ПоУходуЗаРебенкомЗаВторымИПослед",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("ОплатаДнейЗаДетьмиИнвалидами",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("НаПогребение",СтруктураДанныхПособияСводТаблица());
	СтруктураДанных.Вставить("Итоги",СтруктураДанныхПособияСводТаблица());
	//
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПолучитьСтруктуруСводПособия()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Пособия_Год",ПолучитьСтруктуруПособияСвод());
	
	Возврат СтруктураДанных;
		
КонецФункции

#КонецОбласти

#Область о // Исходные данные:

Функция ПолучитьИсходныеДанные(ДанныеДляРасчетаВзносов)
	
	ИсходныеДанные = Новый Структура;
	//
	ИсходныеДанные.Вставить("ОсобыеУсловияТруда",ПолучитьОсобыеУсловияТруда());
	ИсходныеДанные.Вставить("КонфигурацияВыплатВФонды",ПолучитьКонфигурациюВыплатВФонды());
	ИсходныеДанные.Вставить("СтандартныеВычетыНастройки",инкОбщийСервер.СтандартныеВычетыНастройки(ДанныеДляРасчетаВзносов.Дата2));
	//
	ИсходныеДанные.Вставить("СотрудникиТаблица",ПолучитьСотрудникиТаблица(ДанныеДляРасчетаВзносов));
	ИсходныеДанные.Вставить("НачисленияТаблица",ПолучитьНачисленияТаблица(ДанныеДляРасчетаВзносов));
	//
	ИсходныеДанные.Вставить("Месяц1",Месяц(ДанныеДляРасчетаВзносов.Дата1));
	ИсходныеДанные.Вставить("Месяц2",Месяц(ДанныеДляРасчетаВзносов.Дата2));
	//
	ИсходныеДанные.Вставить("Дата1",НачалоМесяца(ДанныеДляРасчетаВзносов.Дата1));
	ИсходныеДанные.Вставить("Дата2",НачалоМесяца(ДанныеДляРасчетаВзносов.Дата2));
	//
	ИсходныеДанные.Вставить("ПредприятиеМалогоИлиСреднегоБизнеса",ДанныеДляРасчетаВзносов.Организация.ПредприятиеМалогоИлиСреднегоБизнеса);
	ИсходныеДанные.Вставить("МРОТ",ИсходныеДанные.СтандартныеВычетыНастройки.МРОТ);
	
	Возврат ИсходныеДанные;
	
КонецФункции

Функция ПолучитьОсобыеУсловияТруда()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инкОсобыеУсловияТруда.УсловияТрудаКласс КАК УсловияТрудаКласс,
	               |	инкОсобыеУсловияТруда.УсловияТрудаПодкласс КАК УсловияТрудаПодкласс,
	               |	инкОсобыеУсловияТруда.Тариф КАК Тариф
	               |ИЗ
	               |	РегистрСведений.инкОсобыеУсловияТруда КАК инкОсобыеУсловияТруда"; 
	
	тз = Запрос.Выполнить().Выгрузить(); 
	
	Возврат тз;	
	
КонецФункции

Функция ПолучитьКонфигурациюВыплатВФонды()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инкКонфигурацияВыплатВФонды.СтрокаТарифаВЗН КАК СтрокаТарифаВЗН,
	               |	инкКонфигурацияВыплатВФонды.ПФ КАК ПФ,
	               |	инкКонфигурацияВыплатВФонды.ФСС КАК ФСС,
	               |	инкКонфигурацияВыплатВФонды.ФФОМС КАК ФФОМС,
	               |	&НСиПЗ КАК НСиПЗ
	               |ИЗ
	               |	РегистрСведений.инкКонфигурацияВыплатВФонды КАК инкКонфигурацияВыплатВФонды"; 
		
	Запрос.Параметры.Вставить("НСиПЗ",Константы.инкФондТравматизма.Получить());
	
	тз = Запрос.Выполнить().Выгрузить(); 
	
	Возврат тз;	
	
КонецФункции

Функция ПолучитьНачисленияТаблица(ДанныеДляРасчетаВзносов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инкНачисленияОбороты.Период КАК Период,
	               |	МЕСЯЦ(инкНачисленияОбороты.Период) КАК Месяц,
	               |	инкНачисленияОбороты.Сотрудник КАК Сотрудник,
	               |	инкНачисленияОбороты.Сотрудник.Пол КАК СотрудникПол,
	               |	инкНачисленияОбороты.Сотрудник.СтатусРезидента КАК СотрудникСтатусРезидента,
	               |	инкНачисленияОбороты.Сотрудник.Гражданство КАК СотрудникГражданство,
	               |	инкНачисленияОбороты.Сотрудник.Совместитель КАК СотрудникСовместитель,
	               |	инкНачисленияОбороты.Сотрудник.Иностранец КАК СотрудникИностранец,
	               |	инкНачисленияОбороты.Организация КАК Организация,
	               |	инкНачисленияОбороты.Подразделение КАК Подразделение,
	               |	инкНачисленияОбороты.Начисление КАК Начисление,
	               |	инкНачисленияОбороты.Ст9ФЗ212 КАК Ст9ФЗ212,
	               |	инкНачисленияОбороты.МатериальнаяПомощь КАК МатериальнаяПомощь,
	               |	инкНачисленияОбороты.ФондТравматизма КАК ФондТравматизма,
	               |	инкНачисленияОбороты.Взносы КАК Взносы,
	               |	инкНачисленияОбороты.ДоходНДФЛ КАК ДоходНДФЛ,
	               |	инкНачисленияОбороты.ДоходНДФЛ.ВычетНДФЛ КАК ВычетНДФЛ,
	               |	инкНачисленияОбороты.СуммаНачисленияОборот КАК СуммаНачисления,
	               |	инкНачисленияОбороты.РайонныйКоэффициентОборот КАК РайонныйКоэффициент,
	               |	инкНачисленияОбороты.СевернаяНадбавкаОборот КАК СевернаяНадбавка,
	               |	инкНачисленияОбороты.КоличествоДетейОборот КАК КоличествоДетей,
	               |	инкНачисленияОбороты.ДниОборот КАК Дни,
	               |	инкНачисленияОбороты.ДниФактОборот КАК ДниФакт
	               |ИЗ
	               |	РегистрНакопления.инкНачисления.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Организация = &Организация
	               |				И Подразделение В (&ПодразделенияМассив)
	               |				И Сотрудник В (&СотрудникиМассив)) КАК инкНачисленияОбороты
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник,
	               |	Период"; 
	
	Если Не ЗначениеЗаполнено(ДанныеДляРасчетаВзносов.СотрудникиМассив) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&СотрудникиМассив)","Истина");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеДляРасчетаВзносов.Организация) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Организация = &Организация","Истина");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеДляРасчетаВзносов.ПодразделенияМассив) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Подразделение В (&ПодразделенияМассив)","Истина");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", ДанныеДляРасчетаВзносов.Организация);
	Запрос.УстановитьПараметр("ПодразделенияМассив", ДанныеДляРасчетаВзносов.ПодразделенияМассив);
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ДанныеДляРасчетаВзносов.Дата1));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеДляРасчетаВзносов.Дата2));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеДляРасчетаВзносов.СотрудникиМассив);
	
	тз = Запрос.Выполнить().Выгрузить(); 
	
	Возврат тз;
	
КонецФункции

Функция ПолучитьСотрудникиТаблица(ДанныеДляРасчетаВзносов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапроса_Сотрудники(ДанныеДляРасчетаВзносов); 
	
	массВидыСобытийПриема = Новый Массив;
	массВидыСобытийПриема.Добавить(Перечисления.инкВидыКадровыхСобытий.Прием);
	массВидыСобытийПриема.Добавить(Перечисления.инкВидыКадровыхСобытий.Перемещение);
	массВидыСобытийПриема.Добавить(Перечисления.инкВидыКадровыхСобытий.ВосстановлениеВДолжности);
	                                                                  
	Запрос.УстановитьПараметр("ВидыСобытийПриема", массВидыСобытийПриема);
	Запрос.УстановитьПараметр("Организация", ДанныеДляРасчетаВзносов.Организация);
	Запрос.УстановитьПараметр("ПодразделенияМассив", ДанныеДляРасчетаВзносов.ПодразделенияМассив);
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ДанныеДляРасчетаВзносов.Дата1));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ДанныеДляРасчетаВзносов.Дата2));
	Запрос.УстановитьПараметр("СотрудникиМассив", ДанныеДляРасчетаВзносов.СотрудникиМассив);
	
	тз = Запрос.Выполнить().Выгрузить(); 
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Функция ПолучитьТекстЗапроса_Сотрудники(ДанныеДляРасчетаВзносов)

	стрТекстЗапроса =	
		"ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втРаботающиеСотрудникиНаНачалоПериода
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата1,
		|			Организация = &Организация
		|				И Подразделение В (&ПодразделенияМассив)
		|				И Сотрудник В (&СотрудникиМассив)) КАК инкКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия В(&ВидыСобытийПриема)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втРаботающиеСотрудникиНаКонецПериода
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата2,
		|			Организация = &Организация
		|				И Подразделение В (&ПодразделенияМассив)
		|				И Сотрудник В (&СотрудникиМассив)) КАК инкКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия В(&ВидыСобытийПриема)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втУволенныеСотрудникиНаНачалоПериода
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(
		|			&Дата1,
		|			Организация = &Организация
		|				И Подразделение В (&ПодразделенияМассив)
		|				И Сотрудник В (&СотрудникиМассив)) КАК инкКадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	инкКадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.инкВидыКадровыхСобытий.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудников.Организация КАК Организация,
		|	инкКадроваяИсторияСотрудников.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудников.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втУволенныеВТекущемПериоде
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников КАК инкКадроваяИсторияСотрудников
		|ГДЕ
		|	инкКадроваяИсторияСотрудников.Период >= &Дата1
		|	И инкКадроваяИсторияСотрудников.Период <= &Дата2
		|	И инкКадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.инкВидыКадровыхСобытий.Увольнение)
		|	И инкКадроваяИсторияСотрудников.Организация = &Организация
		|	И инкКадроваяИсторияСотрудников.Подразделение В(&ПодразделенияМассив)
		|	И инкКадроваяИсторияСотрудников.Сотрудник В(&СотрудникиМассив)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРаботающиеСотрудникиНаНачалоПериода.Сотрудник КАК Сотрудник,
		|	втРаботающиеСотрудникиНаНачалоПериода.Организация КАК Организация,
		|	втРаботающиеСотрудникиНаНачалоПериода.Подразделение КАК Подразделение,
		|	втРаботающиеСотрудникиНаНачалоПериода.ВидСобытия КАК ВидСобытия
		|ПОМЕСТИТЬ втОбъединение
		|ИЗ
		|	втРаботающиеСотрудникиНаНачалоПериода КАК втРаботающиеСотрудникиНаНачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втРаботающиеСотрудникиНаКонецПериода.Сотрудник,
		|	втРаботающиеСотрудникиНаКонецПериода.Организация,
		|	втРаботающиеСотрудникиНаКонецПериода.Подразделение,
		|	втРаботающиеСотрудникиНаКонецПериода.ВидСобытия
		|ИЗ
		|	втРаботающиеСотрудникиНаКонецПериода КАК втРаботающиеСотрудникиНаКонецПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втУволенныеСотрудникиНаНачалоПериода.Сотрудник,
		|	втУволенныеСотрудникиНаНачалоПериода.Организация,
		|	втУволенныеСотрудникиНаНачалоПериода.Подразделение,
		|	втУволенныеСотрудникиНаНачалоПериода.ВидСобытия
		|ИЗ
		|	втУволенныеСотрудникиНаНачалоПериода КАК втУволенныеСотрудникиНаНачалоПериода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втУволенныеВТекущемПериоде.Сотрудник,
		|	втУволенныеВТекущемПериоде.Организация,
		|	втУволенныеВТекущемПериоде.Подразделение,
		|	втУволенныеВТекущемПериоде.ВидСобытия
		|ИЗ
		|	втУволенныеВТекущемПериоде КАК втУволенныеВТекущемПериоде
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбъединение.Сотрудник КАК Сотрудник,
		|	втОбъединение.Организация КАК Организация,
		|	втОбъединение.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ втГруппировка
		|ИЗ
		|	втОбъединение КАК втОбъединение
		|ГДЕ
		|	втОбъединение.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.инкВидыКадровыхСобытий.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбъединение.Сотрудник,
		|	втОбъединение.Организация,
		|	втОбъединение.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппировка.Сотрудник КАК Сотрудник,
		|	втГруппировка.Организация КАК Организация,
		|	втГруппировка.Подразделение КАК Подразделение,
		|	втГруппировка.Сотрудник.ФИОСокращенное КАК ФИО,
		|	втГруппировка.Сотрудник.Пол КАК Пол,
		|	втГруппировка.Сотрудник.Инвалид КАК Инвалид,
		|	втГруппировка.Сотрудник.ДатаРождения КАК ДатаРождения,
		|	ГОД(втГруппировка.Сотрудник.ДатаРождения) КАК ГодРождения,
		|	втГруппировка.Сотрудник.СтатусРезидента КАК СтатусРезидента,
		|	втГруппировка.Сотрудник.ДатаПриемаНаРаботу КАК ДатаПриемаНаРаботу,
		|	втГруппировка.Сотрудник.ДатаУвольнения КАК ДатаУвольнения,
		|	втГруппировка.Сотрудник.СтатусИностранца КАК СтатусИностранца,
		|	втГруппировка.Сотрудник.Иностранец КАК Иностранец
		|ИЗ
		|	втГруппировка КАК втГруппировка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";
	
	Если Не ЗначениеЗаполнено(ДанныеДляРасчетаВзносов.Организация) Тогда
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Организация = &Организация","Истина");
	КонецЕсли;		
	
	Если Не ЗначениеЗаполнено(ДанныеДляРасчетаВзносов.ПодразделенияМассив) Тогда
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"инкКадроваяИсторияСотрудников.ПодразделенияМассив = &ПодразделенияМассив","Истина");
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Подразделение В (&ПодразделенияМассив)","Истина");
	КонецЕсли;		
	
	Если Не ЗначениеЗаполнено(ДанныеДляРасчетаВзносов.СотрудникиМассив) Тогда
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"инкКадроваяИсторияСотрудников.Сотрудник В (&СотрудникиМассив)","Истина");
		стрТекстЗапроса = СтрЗаменить(стрТекстЗапроса,"Сотрудник В (&СотрудникиМассив)","Истина");
	КонецЕсли;
	
	Возврат стрТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область о // Расчет взносов - детальный расчет:

Функция ПолучучитьНастройкиВЗН(ИсходныеДанные,ИмяДанныхТаблицы,Фонд)
	
	НастройкиВЗН 	= 0;

	Если ИмяДанныхТаблицы = "ОблагаемаяБаза" Тогда
		
		Если ИсходныеДанные.ПредприятиеМалогоИлиСреднегоБизнеса Тогда
			НастройкиВЗН = ИсходныеДанные.МРОТ;
		Иначе			
			НастройкиВЗН = ПолучитьЗначениеСтрокиТаблицы(ИсходныеДанные,
			                                             Перечисления.инкСтрокаТарифаВЗН.ОблагаемаяБазаВЗН,
														 Фонд);  
		КонецЕсли;
		
	ИначеЕсли ИмяДанныхТаблицы = "ТарифВПределахЛимита" Тогда
		
		НастройкиВЗН = ПолучитьЗначениеСтрокиТаблицы(ИсходныеДанные,
		                                             Перечисления.инкСтрокаТарифаВЗН.ТарифВПределахЛимита,
													 Фонд)/100;
		
	ИначеЕсли ИмяДанныхТаблицы = "ТарифСверхЛимита" Тогда 	
		
		Если ИсходныеДанные.ПредприятиеМалогоИлиСреднегоБизнеса Тогда
			НастройкиВЗН = ПолучитьЗначениеСтрокиТаблицы(ИсходныеДанные,
			                                             Перечисления.инкСтрокаТарифаВЗН.ТарифСвышеМРОТДляМСБ,
														 Фонд)/100;
		Иначе			
			НастройкиВЗН = ПолучитьЗначениеСтрокиТаблицы(ИсходныеДанные,
			                                             Перечисления.инкСтрокаТарифаВЗН.ТарифСверхЛимита,
														 Фонд)/100;  
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НастройкиВЗН; 
	
КонецФункции

Функция ПолучитьЗначениеСтрокиТаблицы(ИсходныеДанные,СтрокаТаблицыВЗН,Фонд)

	ПоискСтроки 	= Новый Структура("СтрокаТарифаВЗН",СтрокаТаблицыВЗН);
	КВФМассив 		= ИсходныеДанные.КонфигурацияВыплатВФонды.НайтиСтроки(ПоискСтроки)[0];
	
	Возврат КВФМассив[Фонд]; 
	
КонецФункции

Процедура ВзносыТаблица_НачальноеЗаполнениеДанными(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	ВзносыТаблица_Месяц.Очистить();
	
	Для каждого Сотрудник из ИсходныеДанные.СотрудникиТаблица Цикл
		
		Если Сотрудник.Инвалид Тогда
			Сотрудник.ФИО = Сотрудник.ФИО + " (инв.)";
		КонецЕсли;
		
		МесяцДата   = НачалоГода(ИсходныеДанные.Дата1);

		Для Месяц = 1 По 12 Цикл 
			
			ВзносыСтрока = ВзносыТаблица_Месяц.Добавить();
			ЗаполнитьЗначенияСвойств(ВзносыСтрока,Сотрудник);
			ВзносыСтрока.Месяц = Месяц;
			ВзносыСтрока.Квартал = инкОбщийКлиентСервер.КварталПоМесяцу(ВзносыСтрока.Месяц);	
			ВзносыСтрока.Период = МесяцДата;
			
			МесяцДата   = ДобавитьМесяц(МесяцДата,1);
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВзносыТаблица_Доход(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	
	Для каждого ВзносыСтрока из ВзносыТаблица_Месяц Цикл
		
		ПоискСтруктура = ПолучитьСтруктуруПоиска(ВзносыСтрока);
		НачисленияСтроки = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
		ВзносыСтрока.Доход = 0;
		
		Для каждого НачислениеСтрока из НачисленияСтроки Цикл
			
			ВзносыСтрока.Доход = ВзносыСтрока.Доход
			                   + НачислениеСтрока.СуммаНачисления
							   + НачислениеСтрока.РайонныйКоэффициент
							   + НачислениеСтрока.СевернаяНадбавка;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВзносыТаблица_Ст9ФЗ212(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	
	Для каждого ВзносыСтрока из ВзносыТаблица_Месяц Цикл
		
		ПоискСтруктура = ПолучитьСтруктуруПоиска(ВзносыСтрока);
		НачисленияСтроки = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
		ВзносыСтрока.Ст9ФЗ212 = 0;
		
		Для каждого НачислениеСтрока из НачисленияСтроки Цикл
			
			Если НачислениеСтрока.Ст9ФЗ212 Тогда
				ВзносыСтрока.Ст9ФЗ212 = ВзносыСтрока.Ст9ФЗ212 
				                      + НачислениеСтрока.СуммаНачисления
									  + НачислениеСтрока.РайонныйКоэффициент
									  + НачислениеСтрока.СевернаяНадбавка;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; 	
	
КонецПроцедуры

Процедура ВзносыТаблица_ОблагаемаяБаза(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	
	ПредельнаяВеличинаБазы = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ОблагаемаяБаза","ПФ");
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		НакопительнаяБаза = 0;
		
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ВзносыСтрока.ОблагаемаяБаза = ВзносыСтрока.Доход
			                            - ВзносыСтрока.Ст9ФЗ212
										- ВзносыСтрока.МатПомощь;
										
			НакопительнаяБаза = НакопительнаяБаза 
			                  + ВзносыСтрока.ОблагаемаяБаза;	
			Если ИсходныеДанные.ПредприятиеМалогоИлиСреднегоБизнеса Тогда
				НакопительнаяБаза = ВзносыСтрока.ОблагаемаяБаза; 
			КонецЕсли;
							  
			Если НакопительнаяБаза >= ПредельнаяВеличинаБазы Тогда
				
				ПревышениеОблагаемойБазы = НакопительнаяБаза - ПредельнаяВеличинаБазы;
				Если ПревышениеОблагаемойБазы > ВзносыСтрока.ОблагаемаяБаза Тогда
					ПревышениеОблагаемойБазы = ВзносыСтрока.ОблагаемаяБаза;
				КонецЕсли;
				
				ВзносыСтрока.ОблагаемаяБаза = ВзносыСтрока.ОблагаемаяБаза
				                            - ПревышениеОблагаемойБазы;
				ВзносыСтрока.ОблагаемаяБазаПревышение = ПревышениеОблагаемойБазы;				
				
			КонецЕсли;	
		
		КонецЦикла;
		
	КонецЦикла;	

КонецПроцедуры

Процедура ВзносыТаблица_ОблагаемаяБазаФСС(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	ПредельнаяВеличинаБазы = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ОблагаемаяБаза","ФСС"); 
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		НакопительнаяБаза = 0;
		
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ВзносыСтрока.ОблагаемаяБазаФСС	= ВзносыСтрока.Доход
			                            	- ВзносыСтрока.Ст9ФЗ212
											- ВзносыСтрока.МатПомощь
											- ВзносыСтрока.ДоговорыГПХ;
											
			НакопительнаяБаза = НакопительнаяБаза 
			                  + ВзносыСтрока.ОблагаемаяБазаФСС;	
			Если ИсходныеДанные.ПредприятиеМалогоИлиСреднегоБизнеса Тогда
				НакопительнаяБаза = ВзносыСтрока.ОблагаемаяБазаФСС; 
			КонецЕсли;
							  
			Если НакопительнаяБаза >= ПредельнаяВеличинаБазы Тогда
				
				ПревышениеОблагаемойБазы = НакопительнаяБаза - ПредельнаяВеличинаБазы;
				Если ПревышениеОблагаемойБазы > ВзносыСтрока.ОблагаемаяБазаФСС Тогда
					ПревышениеОблагаемойБазы = ВзносыСтрока.ОблагаемаяБазаФСС;
				КонецЕсли;
				
				ВзносыСтрока.ОблагаемаяБазаФСС	= ВзносыСтрока.ОблагаемаяБазаФСС
				                            	- ПревышениеОблагаемойБазы;
				ВзносыСтрока.ОблагаемаяБазаФССПревышение = ПревышениеОблагаемойБазы;				
				
			КонецЕсли;	
		
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВзносыТаблица_МатПомощь(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	КодДохода2760 = Справочники.инкДоходНДФЛ.Код2760;
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		НакопительнаяБаза = 0;                  
		МатПомощьСвод = 0;
		ПредельнаяВеличинаСкидки = 4000;
		
		// В общем случае мат. помощь облагается только с сумм свыше 
		//предоставленной скидки: 
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ВзносыСтрока.МатПомощь = 0;
			
			ПоискСтроки = Новый Структура;
			ПоискСтроки.Вставить("Сотрудник",ВзносыСтрока.Сотрудник);
			ПоискСтроки.Вставить("Месяц",ВзносыСтрока.Месяц);
			ПоискСтроки.Вставить("ДоходНДФЛ",КодДохода2760);
			НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтроки);

			Для каждого НачислениеСтрока из НачисленияМассив Цикл
			
				НачисленнаяМатПомощь   = НачислениеСтрока.СуммаНачисления
									   + НачислениеСтрока.РайонныйКоэффициент
									   + НачислениеСтрока.СевернаяНадбавка;
									   
				Если ПредельнаяВеличинаСкидки = 0 Тогда
					Прервать;
				КонецЕсли; 					   
									   
				ПредельнаяВеличинаСкидки = ПредельнаяВеличинаСкидки - НачисленнаяМатПомощь; 					   
				Если ПредельнаяВеличинаСкидки >= 0 Тогда
					ВзносыСтрока.МатПомощь = НачисленнаяМатПомощь;
				Иначе
					ВзносыСтрока.МатПомощь = НачисленнаяМатПомощь + ПредельнаяВеличинаСкидки;
					ПредельнаяВеличинаСкидки = 0;
				КонецЕсли; 
				
			КонецЦикла;	
				
		КонецЦикла;
		
	КонецЦикла; 	

КонецПроцедуры

Процедура ВзносыТаблица_ВыплатыИнвалидам(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	
	Для каждого ВзносыСтрока из ВзносыТаблица_Месяц Цикл
		
		ПоискСтруктура = ПолучитьСтруктуруПоиска(ВзносыСтрока);
		НачисленияСтроки = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
		ВзносыСтрока.ВыплатыИнвалидам = 0;
		
		Для каждого НачислениеСтрока из НачисленияСтроки Цикл
			
			Если ВзносыСтрока.Инвалид Тогда
				ВзносыСтрока.ВыплатыИнвалидам = ВзносыСтрока.ВыплатыИнвалидам + НачислениеСтрока.СуммаНачисления;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВзносыТаблица_ДоговорыГПХ(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	ДоходНДФЛ_2010	= Справочники.инкДоходНДФЛ.Код2010; 
	ВычетНДФЛ_403	= Справочники.инкВычетыНДФЛ.Код403;	
	ВычетНДФЛ_404	= Справочники.инкВычетыНДФЛ.Код404;	
	ВычетНДФЛ_405	= Справочники.инкВычетыНДФЛ.Код405;	
	
	Для каждого ВзносыСтрока из ВзносыТаблица_Месяц Цикл
		
		ПоискСтруктура = ПолучитьСтруктуруПоиска(ВзносыСтрока);
		НачисленияСтроки = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
		ВзносыСтрока.ДоговорыГПХ = 0;
		
		
		Для каждого НачислениеСтрока из НачисленияСтроки Цикл
			
			Если НачислениеСтрока.ДоходНДФЛ = ДоходНДФЛ_2010 ИЛИ
				 НачислениеСтрока.ВычетНДФЛ = ВычетНДФЛ_403  ИЛИ
				 НачислениеСтрока.ВычетНДФЛ = ВычетНДФЛ_404  ИЛИ
				 НачислениеСтрока.ВычетНДФЛ = ВычетНДФЛ_405  				 
			Тогда
			
				ВзносыСтрока.ДоговорыГПХ = ВзносыСтрока.ДоговорыГПХ
							             + НачислениеСтрока.СуммаНачисления
										 + НачислениеСтрока.РайонныйКоэффициент
										 + НачислениеСтрока.СевернаяНадбавка;
										 
			КонецЕсли;
					
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВзносыТаблица_ПФ(ИсходныеДанные,РезультатРасчета)
	
	ТарифВПределахЛимита    = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ТарифВПределахЛимита","ПФ");
	ТарифСверхЛимита		= ПолучучитьНастройкиВЗН(ИсходныеДанные,"ТарифСверхЛимита","ПФ"); 
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ВзносыСтрока.ПФ = ВзносыСтрока.ПФ
			                + ВзносыСтрока.ОблагаемаяБаза * ТарифВПределахЛимита;
							
			ВзносыСтрока.ПФПревышение = ВзносыСтрока.ПФПревышение
			 				          + ВзносыСтрока.ОблагаемаяБазаПревышение * ТарифСверхЛимита;
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВзносыТаблица_ФФОМС(ИсходныеДанные,РезультатРасчета)
	
	ТарифВПределахЛимита    = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ТарифВПределахЛимита","ФФОМС");
	ТарифСверхЛимита		= ПолучучитьНастройкиВЗН(ИсходныеДанные,"ТарифСверхЛимита","ФФОМС"); 
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ВзносыСтрока.ФФОМС = ВзносыСтрока.ФФОМС
			                   + ВзносыСтрока.ОблагаемаяБаза * ТарифВПределахЛимита;
							   
			ВзносыСтрока.ФФОМСПревышение = ВзносыСтрока.ФФОМСПревышение
							   + ВзносыСтрока.ОблагаемаяБазаПревышение * ТарифСверхЛимита;
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВзносыТаблица_ФСС(ИсходныеДанные,РезультатРасчета)
	
	ТарифВПределахЛимита    = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ТарифВПределахЛимита","ФСС");
	ТарифСверхЛимита		= ПолучучитьНастройкиВЗН(ИсходныеДанные,"ТарифСверхЛимита","ФСС"); 
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	ВременноПребывающий = Перечисления.инкСтатусыИностранцев.ВременноПребывающий;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ВзносыСтрока.ФСС = ВзносыСтрока.ФСС
			                 + ВзносыСтрока.ОблагаемаяБазаФСС * ТарифВПределахЛимита;
							 
			ВзносыСтрока.ФССПревышение = ВзносыСтрока.ФССПревышение
							 + ВзносыСтрока.ОблагаемаяБазаФССПревышение * ТарифСверхЛимита;
							 
			Если СотрудникСтрока.СтатусИностранца = ВременноПребывающий ИЛИ СотрудникСтрока.Иностранец  Тогда
				ВзносыСтрока.ФССИностранцы = ВзносыСтрока.ФССИностранцы
				                           + ВзносыСтрока.ОблагаемаяБазаФСС * ТарифВПределахЛимита;
			КонецЕсли; 				 
				 
							 
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВзносыТаблица_НСиПЗ(ИсходныеДанные,РезультатРасчета)
	
	ТарифТравматизм = Константы.инкФондТравматизма.Получить()/100;
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	СотрудникиТаблица = ИсходныеДанные.СотрудникиТаблица;
	
	Для каждого СотрудникСтрока из СотрудникиТаблица Цикл
		
		ПоискСтроки = Новый Структура("Сотрудник",СотрудникСтрока.Сотрудник);
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтроки);
		СтавкаИнвалида = 1;
		//Если СотрудникСтрока.Инвалид Тогда 
		//	СтавкаИнвалида = 0.6;	
		//КонецЕсли;
		
		Для каждого ВзносыСтрока из ВзносыМассив Цикл
			
			ОблагаемаяБазаНСиПЗ = ВзносыСтрока.ОблагаемаяБазаФСС
			                     + ВзносыСтрока.ОблагаемаяБазаФССПревышение
							     + ВзносыСтрока.ДоговорыГПХ;
			Если ИсходныеДанные.ПредприятиеМалогоИлиСреднегоБизнеса Тогда
				ОблагаемаяБазаНСиПЗ = ВзносыСтрока.ОблагаемаяБазаФСС
				                    + ВзносыСтрока.ДоговорыГПХ;
			КонецЕсли;	
				
			ВзносыСтрока.НСиПЗ = ОблагаемаяБазаНСиПЗ * ТарифТравматизм * СтавкаИнвалида;
				             			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры

Функция РасчетСреднесписочнойЧисленности(ВзносыСтрока,НачисленияТаблица)
	
	СреднесписочнаяЧисленность = 0;
	
	Если ВзносыСтрока.Доход > 0 Тогда
		
		КоличествоДнейВМесяце = День(КонецМесяца(ВзносыСтрока.Период));
		
		КоличествоОтработанныхДнейВМесяце = КоличествоДнейВМесяце;
		
		// Если приняли на работу в текущем месяце:
		Если (ВзносыСтрока.ДатаПриемаНаРаботу >= НачалоМесяца(ВзносыСтрока.Период)) И
			(ВзносыСтрока.ДатаПриемаНаРаботу <= КонецМесяца(ВзносыСтрока.Период))
			Тогда
			КоличествоОтработанныхДнейВМесяце = КоличествоДнейВМесяце -
			День(ВзносыСтрока.ДатаПриемаНаРаботу);
		КонецЕсли; 
		
		// Если уволили в текущем месяце:
		Если (ВзносыСтрока.ДатаУвольнения >= НачалоМесяца(ВзносыСтрока.Период)) И
			(ВзносыСтрока.ДатаУвольнения <= КонецМесяца(ВзносыСтрока.Период))
			Тогда
			КоличествоОтработанныхДнейВМесяце = День(ВзносыСтрока.ДатаУвольнения);
		КонецЕсли; 
		
		// Если есть начисления по уходу за ребенком:
		Если КоличествоОтработанныхДнейВМесяце > 0 Тогда
			
			ПоискСтруктура = Новый Структура;
			ПоискСтруктура.Вставить("Сотрудник",ВзносыСтрока.Сотрудник);
			ПоискСтруктура.Вставить("Месяц",ВзносыСтрока.Месяц);
				
			НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);

			Если НачисленияМассив.Количество() > 0 Тогда
				
				ПособиеПоУходуЗаребенкомНачисление = ПланыВидовРасчета.инкНачисления.НайтиПоКоду("00028");
				Для каждого НачислениеЭлемент Из НачисленияМассив Цикл
					
					Если НачислениеЭлемент.Начисление = ПособиеПоУходуЗаребенкомНачисление Тогда
						КоличествоОтработанныхДнейВМесяце = 0;
						Прервать;
					КонецЕсли; 
					
				КонецЦикла; 
				
			КонецЕсли; 
			
		КонецЕсли;
		
		Если КоличествоОтработанныхДнейВМесяце < 0 Тогда
			КоличествоОтработанныхДнейВМесяце = 0;
		КонецЕсли; 
		
		Если КоличествоОтработанныхДнейВМесяце > 0 Тогда
			СреднесписочнаяЧисленность = Окр(КоличествоОтработанныхДнейВМесяце / КоличествоДнейВМесяце,2);
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат СреднесписочнаяЧисленность;
		
КонецФункции

Процедура ВзносыТаблица_Численность(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	
	Для каждого ВзносыСтрока Из ВзносыТаблица_Месяц Цикл
		
		ВзносыСтрока.СреднесписочнаяЧисленность = РасчетСреднесписочнойЧисленности(ВзносыСтрока,НачисленияТаблица);
		
		Если ВзносыСтрока.Доход <> 0 Тогда
		
			Если ВзносыСтрока.Пол = Перечисления.инкПол.Мужской Тогда
				ВзносыСтрока.МужчиныКоличество = 1;
			Иначе
				ВзносыСтрока.ЖенщиныКоличество = 1;
			КонецЕсли; 

			Если ВзносыСтрока.Инвалид Тогда
				ВзносыСтрока.ИнвалидыКоличество = 1;
			КонецЕсли;
			
			Если ВзносыСтрока.ОблагаемаяБаза <> 0 Тогда
				ВзносыСтрока.ЗастрахованныеПФКоличество	= 1;
				ВзносыСтрока.ЗастрахованныеКоличество = 1;
			КонецЕсли; 
			
			Если ВзносыСтрока.ОблагаемаяБазаПревышение <> 0 Тогда
				ВзносыСтрока.ЗастрахованныеПФПревышениеБазыКоличество	= 1;
			КонецЕсли; 
			
			Если ВзносыСтрока.ОблагаемаяБазаФСС <> 0 Тогда
				ВзносыСтрока.ЗастрахованныеФССКоличество = 1;
				ВзносыСтрока.ЗастрахованныеКоличество = 1;
			КонецЕсли; 
			
			Если ВзносыСтрока.ОблагаемаяБазаФССПревышение <> 0 Тогда
				ВзносыСтрока.ЗастрахованныеФССПревышениеБазыКоличество	= 1;
			КонецЕсли; 
			
		КонецЕсли;
			
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область о // Сводные данные:

Процедура РасчетСводныхДанных(ИсходныеДанные,РезультатРасчета,СводныеДанные)
	
	СводныеДанные_Таблица_Месяц_Рассчет(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	СводныеДанные_Таблица_Квартал_Рассчет(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	СводныеДанные_Таблица_Год_Рассчет(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	//
	СводныеДанные_Численность(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	//
	СводныеДанные_Пособия(ИсходныеДанные,РезультатРасчета,СводныеДанные);
		
КонецПроцедуры

#Область о // Сводные данные [ВЗНОСЫ]:

Процедура СводныеДанные_Таблица_Месяц_Рассчет(ИсходныеДанные,РезультатРасчета,СводныеДанные)
    
    ВзносыСводТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц.Скопировать();
	
	ПоляДляСуммирования = ПолучитьПоляДляСуммированияТаблицВЗН();
	ВзносыСводТаблица_Месяц.Свернуть("Месяц,Период",ПоляДляСуммирования);
    
    СводныеДанные.Взносы.ВзносыСводТаблица_Месяц = ВзносыСводТаблица_Месяц;
    
КонецПроцедуры

Процедура СводныеДанные_Таблица_Квартал_Рассчет(ИсходныеДанные,РезультатРасчета,СводныеДанные)
    
    ВзносыСводТаблица_Квартал = РезультатРасчета.ВзносыТаблица_Квартал.Скопировать();
	
	ПоляДляСуммирования = ПолучитьПоляДляСуммированияТаблицВЗН();
	ВзносыСводТаблица_Квартал.Свернуть("Квартал,Период",ПоляДляСуммирования);
    
    СводныеДанные.Взносы.ВзносыСводТаблица_Квартал = ВзносыСводТаблица_Квартал;
	
КонецПроцедуры
   
Процедура СводныеДанные_Таблица_Год_Рассчет(ИсходныеДанные,РезультатРасчета,СводныеДанные);
    
    ВзносыСводТаблица_Год = РезультатРасчета.ВзносыТаблица_Год.Скопировать();
    
    ПоляДляСуммирования = ПолучитьПоляДляСуммированияТаблицВЗН();
    ВзносыСводТаблица_Год.Свернуть("",ПоляДляСуммирования);
    
    СводныеДанные.Взносы.ВзносыСводТаблица_Год = ВзносыСводТаблица_Год;
    
КонецПроцедуры

#КонецОбласти 

#Область о // Сводные данные [ЧИСЛЕННОСТЬ]:

Процедура ДобавитьКЧисленности(ИмяКолонки,ЧисленностьСтрока,ВзносыЭлемент)
	
	ЧисленностьСтрока[ИмяКолонки] = ЧисленностьСтрока[ИмяКолонки]
	                              + ВзносыЭлемент[ИмяКолонки]; 
	
КонецПроцедуры

Процедура ДобавитьКЧисленностиПериод(ИмяКолонки,ЧисленностьСтрока,ВзносыЭлемент)
	
	Если ВзносыЭлемент[ИмяКолонки] <> 0 Тогда
		ЧисленностьСтрока[ИмяКолонки] = 1;	
	КонецЕсли; 
	
КонецПроцедуры

Процедура СвернутьЧисленностьТаблица(ЧисленностьСводТаблица)
	
	ПоляДляСуммированияЧисленности = "";
	Для каждого КолонкаТаблицы Из ЧисленностьСводТаблица.Колонки Цикл
		Если КолонкаТаблицы.Имя <> "Период" Тогда
			ПоляДляСуммированияЧисленности = ПоляДляСуммированияЧисленности 
										   + КолонкаТаблицы.Имя 
										   + ",";
		КонецЕсли; 
	КонецЦикла; 

	ПоляДляСуммированияЧисленности = Лев(ПоляДляСуммированияЧисленности,СтрДлина(ПоляДляСуммированияЧисленности)-1);
	ЧисленностьСводТаблица.Свернуть("Период",ПоляДляСуммированияЧисленности);
	
КонецПроцедуры

Процедура СводныеДанные_Численность(ИсходныеДанные,РезультатРасчета,СводныеДанные)
	
	СводныеДанные_Численность_Месяц(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	СводныеДанные_Численность_Квартал(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	СводныеДанные_Численность_Год(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	
КонецПроцедуры	

Процедура СводныеДанные_Численность_Месяц(ИсходныеДанные,РезультатРасчета,СводныеДанные)
	
	ЧисленностьСводТаблица_Месяц 	= СводныеДанные.Численность.ЧисленностьСводТаблица_Месяц;	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	
	Для каждого СотрудникСтрока из ИсходныеДанные.СотрудникиТаблица Цикл

		Период   = НачалоМесяца(ИсходныеДанные.Дата1);
		Для Месяц = 1 По 12 Цикл 
			
			ЧисленностьМесяцСтрока 			= ЧисленностьСводТаблица_Месяц.Добавить();
			ЧисленностьМесяцСтрока.Период 	= Период;
			
			ПоискСтруктура = Новый Структура;
			ПоискСтруктура.Вставить("Месяц", Месяц);
			ПоискСтруктура.Вставить("Сотрудник", СотрудникСтрока.Сотрудник);
			
			ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтруктура);
			Для каждого ВзносыЭлемент Из ВзносыМассив Цикл
				
				Для каждого КолонкаТаблицы Из ЧисленностьСводТаблица_Месяц.Колонки Цикл

					Если КолонкаТаблицы.Имя <> "Период" Тогда
						ДобавитьКЧисленности(КолонкаТаблицы.Имя,ЧисленностьМесяцСтрока,ВзносыЭлемент);
					КонецЕсли; 
					
				КонецЦикла;
				
			КонецЦикла;
			
			Период = ДобавитьМесяц(Период,1);
			
		КонецЦикла;	
		
	КонецЦикла;
	
	СвернутьЧисленностьТаблица(ЧисленностьСводТаблица_Месяц);
	
КонецПроцедуры

Процедура СводныеДанные_Численность_Квартал(ИсходныеДанные,РезультатРасчета,СводныеДанные)
	
	ЧисленностьСводТаблица_Квартал 	= СводныеДанные.Численность.ЧисленностьСводТаблица_Квартал;	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	
	Для каждого СотрудникСтрока из ИсходныеДанные.СотрудникиТаблица Цикл

		Период   = НачалоМесяца(ИсходныеДанные.Дата1);
		Для Квартал = 1 По 4 Цикл 
			
			ЧисленностьКварталСтрока 		= ЧисленностьСводТаблица_Квартал.Добавить();
			ЧисленностьКварталСтрока.Период 	= НачалоКвартала(Период);
			
			ПоискСтруктура = Новый Структура;
			ПоискСтруктура.Вставить("Квартал", Квартал);
			ПоискСтруктура.Вставить("Сотрудник", СотрудникСтрока.Сотрудник);
			
			ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтруктура);
			Для каждого ВзносыЭлемент Из ВзносыМассив Цикл
				
				Для каждого КолонкаТаблицы Из ЧисленностьСводТаблица_Квартал.Колонки Цикл

					Если КолонкаТаблицы.Имя = "Период" Тогда
						Продолжить;
					ИначеЕсли КолонкаТаблицы.Имя = "СреднесписочнаяЧисленность" Тогда
						ДобавитьКЧисленности(КолонкаТаблицы.Имя,ЧисленностьКварталСтрока,ВзносыЭлемент);
					Иначе
						ДобавитьКЧисленностиПериод(КолонкаТаблицы.Имя,ЧисленностьКварталСтрока,ВзносыЭлемент);
					КонецЕсли; 
					
				КонецЦикла;

			КонецЦикла;
			
			ЧисленностьКварталСтрока.СреднесписочнаяЧисленность = Окр(ЧисленностьКварталСтрока.СреднесписочнаяЧисленность / 3,2);
			Период = ДобавитьМесяц(Период,3);
			
		КонецЦикла;	
		
	КонецЦикла;
	
	СвернутьЧисленностьТаблица(ЧисленностьСводТаблица_Квартал);
	
КонецПроцедуры

Процедура СводныеДанные_Численность_Год(ИсходныеДанные,РезультатРасчета,СводныеДанные)
	
	ЧисленностьСводТаблица_Год 	= СводныеДанные.Численность.ЧисленностьСводТаблица_Год;	
	ВзносыТаблица_Месяц = РезультатРасчета.ВзносыТаблица_Месяц;
	
	Для каждого СотрудникСтрока из ИсходныеДанные.СотрудникиТаблица Цикл

		ЧисленностьГодСтрока 		= ЧисленностьСводТаблица_Год.Добавить();
		ЧисленностьГодСтрока.Период	= НачалоГода(ИсходныеДанные.Дата1);
		
		ПоискСтруктура = Новый Структура;
		ПоискСтруктура.Вставить("Сотрудник", СотрудникСтрока.Сотрудник);
		
		ВзносыМассив = ВзносыТаблица_Месяц.НайтиСтроки(ПоискСтруктура);
		Для каждого ВзносыЭлемент Из ВзносыМассив Цикл
			
			Для каждого КолонкаТаблицы Из ЧисленностьСводТаблица_Год.Колонки Цикл

				Если КолонкаТаблицы.Имя = "Период" Тогда
					Продолжить;
				ИначеЕсли КолонкаТаблицы.Имя = "СреднесписочнаяЧисленность" Тогда
					ДобавитьКЧисленности(КолонкаТаблицы.Имя,ЧисленностьГодСтрока,ВзносыЭлемент);
				Иначе
					ДобавитьКЧисленностиПериод(КолонкаТаблицы.Имя,ЧисленностьГодСтрока,ВзносыЭлемент);
				КонецЕсли; 
				
			КонецЦикла;
			
		КонецЦикла;
		
		ЧисленностьГодСтрока.СреднесписочнаяЧисленность = Окр(ЧисленностьГодСтрока.СреднесписочнаяЧисленность / 12,2);
		
	КонецЦикла;
	
	СвернутьЧисленностьТаблица(ЧисленностьСводТаблица_Год);
	
КонецПроцедуры

#КонецОбласти 

#Область о // Сводные данные [ПОСОБИЯ]:

Процедура СводныеДанные_Пособия(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	
	НачисленияТаблица = ИсходныеДанные.НачисленияТаблица;
	Пособия_Год = СводныеДанные.Пособия.Пособия_Год;
	
	ПоискСтруктура = Новый Структура;
	ПоискСтруктура.Вставить("Начисление");
	
	МесяцДата = НачалоГода(ИсходныеДанные.Дата1);
	
	Пособия_Год.Период = МесяцДата;
	
	РасчетПособияПоВременнойНетрудоспособности(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
	РасчетПособияПоБеременностиИРодам(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
	РасчетПособияНаРаннейСтадииБеременности(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
	РасчетПособияПриРожденииРебенка(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
	РасчетПособияПоУходуЗаРебенкомДо1_5Лет(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
    РасчетПособияПоУходуЗаДетьмиИнвалидами(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
	РасчетПособияНаПогребение(ПоискСтруктура,НачисленияТаблица,Пособия_Год);
	РасчетПособияИтоги(Пособия_Год);
	
КонецПроцедуры

Процедура СложитьПособиеДанные(ПособиеДанные1,ПособиеДанные2)
	
	ПособиеДанные1.ЧислоСлучаев = ПособиеДанные1.ЧислоСлучаев +	ПособиеДанные2.ЧислоСлучаев;
	ПособиеДанные1.КоличествоДней = ПособиеДанные1.КоличествоДней +	ПособиеДанные2.КоличествоДней;
	ПособиеДанные1.РасходыВсего = ПособиеДанные1.РасходыВсего +	ПособиеДанные2.РасходыВсего;
	ПособиеДанные1.РасходыЗасчетФедеральногоБюджета = ПособиеДанные1.РасходыЗасчетФедеральногоБюджета +	ПособиеДанные2.РасходыЗасчетФедеральногоБюджета;
	
КонецПроцедуры
              
Процедура РасчетПособияИтоги(Пособия_Год)
	
	ПособиеИтоги = Пособия_Год.Итоги;
	
	ОбнулитьСтрокуПособия(ПособиеИтоги);
	
	Для Каждого Элемент Из Пособия_Год Цикл
		
		Если (Элемент.Ключ <> "Итоги") И (Элемент.Ключ <> "Период") Тогда
			СложитьПособиеДанные(ПособиеИтоги,Элемент.Значение); 
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры                            

Процедура ДобавитьВСтрокуПособияДанные(ПособиеДанные,НачисленияЭлемент);
	
	//ПособияСтруктура.Вставить("ЧислоСлучаев",Новый ОписаниеТипов("Число"));
	//ПособияСтруктура.Вставить("КоличествоДней",Новый ОписаниеТипов("Число"));
	//ПособияСтруктура.Вставить("РасходыВсего",Новый ОписаниеТипов("Число"));
	//ПособияСтруктура.Вставить("РасходыЗасчетФедеральногоБюджета",Новый ОписаниеТипов("Число"));
	
	// Очень грубый подсчет количества. Позже можно поправить. Делать расчет в разрезе сотрудников, тогда будет ясно верное количество случаев.
	ПособиеДанные.ЧислоСлучаев = ПособиеДанные.ЧислоСлучаев + 1; 
	ПособиеДанные.РасходыВсего = НачисленияЭлемент.СуммаНачисления;
	ПособиеДанные.РасходыЗасчетФедеральногоБюджета = 0;
	ПособиеДанные.КоличествоДней = НачисленияЭлемент.Дни;
	
КонецПроцедуры

Процедура ОбнулитьСтрокуПособия(ПособиеДанные)
	
	ПособиеДанные.ЧислоСлучаев 						= 0;
	ПособиеДанные.КоличествоДней					= 0;
	ПособиеДанные.РасходыВсего						= 0;
	ПособиеДанные.РасходыЗасчетФедеральногоБюджета	= 0;
	
КонецПроцедуры

Процедура РасчетПособияПоВременнойНетрудоспособности(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеПоВремНетрудоспособности;

	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.НетрудБезИностр);
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.НетрудБезИнострСовместители);
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.НетрудИностр);
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.НетрудИнострСовместители);
	//
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		
		Если Не НачисленияЭлемент.СотрудникИностранец Тогда
			
			ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.НетрудБезИностр,НачисленияЭлемент);
			
			Если НачисленияЭлемент.СотрудникСовместитель Тогда
				ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.НетрудБезИнострСовместители,НачисленияЭлемент);
			КонецЕсли; 

		Иначе
			
			ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.НетрудИностр,НачисленияЭлемент);
			
			Если НачисленияЭлемент.СотрудникСовместитель Тогда
				ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.НетрудИнострСовместители,НачисленияЭлемент);
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура РасчетПособияНаРаннейСтадииБеременности(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеНаРаннейСтадииБеременности;
	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПоБеременностиИРодамВРанниеСроки);
	//
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		
		ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПоБеременностиИРодамВРанниеСроки,НачисленияЭлемент);
															
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетПособияПоБеременностиИРодам(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеПоБеременностиИРодам;
	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПоБеременностиИРодам);
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПоБеременностиИРодамСовместители);
	//
	
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		
		ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПоБеременностиИРодам,НачисленияЭлемент);
		
		Если НачисленияЭлемент.СотрудникСовместитель Тогда
			ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПоБеременностиИРодамСовместители,НачисленияЭлемент);
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетПособияПриРожденииРебенка(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеНаРождРебенка;
	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПриРожденииРебенка);
	//
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПриРожденииРебенка,НачисленияЭлемент);
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетПособияПоУходуЗаРебенкомДо1_5Лет(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеПоУходуЗаРебенкомДо1_5лет;
	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПоУходуЗаРебенком);
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПоУходуЗаРебенкомЗаПервымРебенком);
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ПоУходуЗаРебенкомЗаВторымИПослед);
	//
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		
		ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПоУходуЗаРебенком,НачисленияЭлемент);
											 
		Если НачисленияЭлемент.КоличествоДетей = 1 Тогда
			
			ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПоУходуЗаРебенкомЗаПервымРебенком,НачисленияЭлемент);
			
		ИначеЕсли НачисленияЭлемент.КоличествоДетей > 1 Тогда 													
			
			ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ПоУходуЗаРебенкомЗаВторымИПослед,НачисленияЭлемент);
			
		КонецЕсли; 									 
															
	КонецЦикла;

КонецПроцедуры

Процедура РасчетПособияПоУходуЗаДетьмиИнвалидами(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ОплатаДопВыходныхДляУходаЗаДетьмиИнвалидами;
	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.ОплатаДнейЗаДетьмиИнвалидами);
	//
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.ОплатаДнейЗаДетьмиИнвалидами,НачисленияЭлемент);
	КонецЦикла;
	
КонецПроцедуры

Процедура РасчетПособияНаПогребение(ПоискСтруктура,НачисленияТаблица,ПособияМесяцСтрока)
	
	ПоискСтруктура.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеНаПогребение;
	НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСтруктура);
	//
	ОбнулитьСтрокуПособия(ПособияМесяцСтрока.НаПогребение);
	//
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		ДобавитьВСтрокуПособияДанные(ПособияМесяцСтрока.НаПогребение,НачисленияЭлемент);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 

#Область о // Расчет взносов - регресс:

Процедура РасчетРегресса(ИсходныеДанные,РезультатРасчета)
	
	Регресс_Взносы_Рассчет(ИсходныеДанные,РезультатРасчета);
	Регресс_ПФ_Рассчет(ИсходныеДанные,РезультатРасчета);
	Регресс_Инвалиды_Рассчет(ИсходныеДанные,РезультатРасчета);
	
КонецПроцедуры                                            

Процедура Регресс_Взносы_Рассчет(ИсходныеДанные,РезультатРасчета)
	
	ПредельнаяВеличинаБазы = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ОблагаемаяБаза","ПФ"); 
	ВзносыТаблица_Год = РезультатРасчета.ВзносыТаблица_Год;
	Регресс_Взносы = РезультатРасчета.Регресс_Взносы;
	Регресс_Взносы.Очистить();
	
	СтрокаЛимит         = Регресс_Взносы.Добавить();
	СтрокаСверхЛимита   = Регресс_Взносы.Добавить(); 
	
	//
	СтрокаЛимит.СтрокаТарифа        = "Всего до "+ПредельнаяВеличинаБазы+" руб. :";
	СтрокаСверхЛимита.СтрокаТарифа  = "Всего свыше "+ПредельнаяВеличинаБазы+" руб. :"; 
	//
	
	Для каждого СтрокаВзносы из ВзносыТаблица_Год Цикл
		
		Если СтрокаВзносы.ОблагаемаяБазаПревышение = 0 Тогда
			ДобавитьДанныеКРегресс_Взносы(СтрокаВзносы,СтрокаЛимит);
		Иначе 
			ДобавитьДанныеКРегресс_Взносы(СтрокаВзносы,СтрокаСверхЛимита);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры	

Процедура ДобавитьДанныеКРегресс_Взносы(СтрокаВзносы,СтрокаЛимит)

	Если СтрокаВзносы.Доход = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	СтрокаЛимит.Численность = СтрокаЛимит.Численность + 1;
	
	СтрокаЛимит.ОблагаемаяБазаСПревышением  = СтрокаЛимит.ОблагаемаяБазаСПревышением
	                                        + СтрокаВзносы.ОблагаемаяБаза
											+ СтрокаВзносы.ОблагаемаяБазаПревышение;
											
	СтрокаЛимит.ОблагаемаяБаза              = СтрокаЛимит.ОблагаемаяБаза
	 										+ СтрокаВзносы.ОблагаемаяБаза;
	
	СтрокаЛимит.ОблагаемаяБазаПревышение	= СтрокаЛимит.ОблагаемаяБазаПревышение
	                                        + СтрокаВзносы.ОблагаемаяБазаПревышение;
											
	СтрокаЛимит.ПФ                          = СтрокаЛимит.ПФ
	                                        + СтрокаВзносы.ПФ;
											
	СтрокаЛимит.ФФОМС						= СтрокаЛимит.ФФОМС
	                                        + СтрокаВзносы.ФФОМС;
											
	СтрокаЛимит.НСиПЗ						= СтрокаЛимит.НСиПЗ
											+ СтрокаВзносы.НСиПЗ; 
											
	СтрокаЛимит.ФСС							= СтрокаЛимит.ФСС
	                                        + СтрокаВзносы.ФСС; 
	
КонецПроцедуры	

Процедура Регресс_ПФ_Рассчет(ИсходныеДанные,РезультатРасчета)
	
	ПредельнаяВеличинаБазы = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ОблагаемаяБаза","ПФ"); 
	ВзносыТаблица_Год = РезультатРасчета.ВзносыТаблица_Год;
	Регресс_ПФ = РезультатРасчета.Регресс_ПФ;
	Регресс_ПФ.Очистить();
	
	СтрокаДо1967				= Регресс_ПФ.Добавить();
	СтрокаПосле1967             = Регресс_ПФ.Добавить();
	СтрокаИнвалиды              = Регресс_ПФ.Добавить();
	//СтрокаИностранцыДо6Мес      = Регресс_ПФ.Добавить();
	//СтрокаВременноПребывающие   = Регресс_ПФ.Добавить();
	//СтрокаВременноПроживающие   = Регресс_ПФ.Добавить();

	//
	СтрокаДо1967.НаименованиеПоказателя		 = "Год рождения до 1967";
	СтрокаПосле1967.НаименованиеПоказателя   = "Год рождения 1967 и позднее";
	СтрокаИнвалиды.НаименованиеПоказателя    = "Инвалиды";
	//СтрокаИностранцыДо6Мес.СтрокаТарифа      = "Иностранцы до 6 мес.";
	//СтрокаВременноПребывающие.СтрокаТарифа   = "Временно пребывающие";
	//СтрокаВременноПроживающие.СтрокаТарифа   = "Временно проживающие";
	//
	
	Для каждого СтрокаВзносы из ВзносыТаблица_Год Цикл
		
		Если СтрокаВзносы.Инвалид Тогда
			ДобавитьДанныеКРегресс_ПФ(СтрокаВзносы,СтрокаИнвалиды);
		ИначеЕсли СтрокаВзносы.ГодРождения < 1967 Тогда
			ДобавитьДанныеКРегресс_ПФ(СтрокаВзносы,СтрокаДо1967);
		Иначе
			ДобавитьДанныеКРегресс_ПФ(СтрокаВзносы,СтрокаПосле1967);
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьДанныеКРегресс_ПФ(СтрокаВзносы,СтрокаПФ)

	Если СтрокаВзносы.Доход = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	СтрокаПФ.Численность = СтрокаПФ.Численность + 1;
	         											
	СтрокаПФ.ОблагаемаяБаза             = СтрокаПФ.ОблагаемаяБаза
	 									+ СтрокаВзносы.ОблагаемаяБаза;
	
	СтрокаПФ.ОблагаемаяБазаПревышение	= СтрокаПФ.ОблагаемаяБазаПревышение
	                                    + СтрокаВзносы.ОблагаемаяБазаПревышение;
											
	СтрокаПФ.ПФ                         = СтрокаПФ.ПФ
	                                    + СтрокаВзносы.ПФ;
										
	СтрокаПФ.ПФПревышение               = СтрокаПФ.ПФПревышение
	                                    + СтрокаВзносы.ПФПревышение;
	
КонецПроцедуры	

Процедура Регресс_Инвалиды_Рассчет(ИсходныеДанные,РезультатРасчета)
	
	ПредельнаяВеличинаБазы = ПолучучитьНастройкиВЗН(ИсходныеДанные,"ОблагаемаяБаза","ПФ"); 
	ВзносыТаблица_ГодИнвалиды = ПолучитьТаблицуПоИнвалидам(РезультатРасчета);
	Регресс_Инвалиды = РезультатРасчета.Регресс_Инвалиды;
	Регресс_Инвалиды.Очистить();
	
	СтрокаЛимит         = Регресс_Инвалиды.Добавить();
	СтрокаСверхЛимита   = Регресс_Инвалиды.Добавить(); 
	
	//
	СтрокаЛимит.СтрокаТарифа        = "Всего до "+ПредельнаяВеличинаБазы+" руб. :";
	СтрокаСверхЛимита.СтрокаТарифа  = "Всего свыше "+ПредельнаяВеличинаБазы+" руб. :"; 
	//
	
	Для каждого СтрокаВзносы из ВзносыТаблица_ГодИнвалиды Цикл
		
		Если СтрокаВзносы.ОблагаемаяБазаПревышение = 0 Тогда
			ДобавитьДанныеКРегресс_Взносы(СтрокаВзносы,СтрокаЛимит);
		Иначе 
			ДобавитьДанныеКРегресс_Взносы(СтрокаВзносы,СтрокаСверхЛимита);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьТаблицуПоИнвалидам(РезультатРасчета)
	
	ВзносыТаблица_ГодИнвалиды = РезультатРасчета.ВзносыТаблица_Год.Скопировать(); 
	
	СтруктураОтбора = Новый Структура("Инвалид", Ложь);
	МассивСтрок = ВзносыТаблица_ГодИнвалиды.НайтиСтроки(СтруктураОтбора);
	Для Каждого ЭлементМассив Из МассивСтрок Цикл
		ВзносыТаблица_ГодИнвалиды.Удалить(ЭлементМассив); 
	КонецЦикла;
	
	Возврат ВзносыТаблица_ГодИнвалиды;
	
КонецФункции

#КонецОбласти

#Область о // Расчет взносов:

Процедура ВыполнитьРасчетВзносов() Экспорт
	
	ИсходныеДанные = ПолучитьИсходныеДанные(ДанныеДляРасчетаВзносов);
    // 
	ВзносыТаблица_Месяц_Рассчет(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_Квартал_Рассчет(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_Год_Рассчет(ИсходныеДанные,РезультатРасчета);
	//
	РасчетРегресса(ИсходныеДанные,РезультатРасчета);
    //
	РасчетСводныхДанных(ИсходныеДанные,РезультатРасчета,СводныеДанные);
	//
	Взносы_СформироватьТабличныеДокументы(ИсходныеДанные);
	
КонецПроцедуры

Процедура ВзносыТаблица_Месяц_Рассчет(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_НачальноеЗаполнениеДанными(ИсходныеДанные,РезультатРасчета);
	//
	ВзносыТаблица_Доход(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_Ст9ФЗ212(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_МатПомощь(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_ДоговорыГПХ(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_ВыплатыИнвалидам(ИсходныеДанные,РезультатРасчета);
	//
	ВзносыТаблица_ОблагаемаяБаза(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_ОблагаемаяБазаФСС(ИсходныеДанные,РезультатРасчета);
    //
	ВзносыТаблица_ПФ(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_ФФОМС(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_ФСС(ИсходныеДанные,РезультатРасчета);
	ВзносыТаблица_НСиПЗ(ИсходныеДанные,РезультатРасчета);
	//
	ВзносыТаблица_Численность(ИсходныеДанные,РезультатРасчета);
	               
КонецПроцедуры

Функция ПолучитьСтруктуруПоиска(ВзносыСтрока)
	
	ПоискСтруктура = Новый Структура;
	ПоискСтруктура.Вставить("Сотрудник");
	ПоискСтруктура.Вставить("Месяц");
	
	ЗаполнитьЗначенияСвойств(ПоискСтруктура,ВзносыСтрока);
	
	Возврат ПоискСтруктура;	
	
КонецФункции

Функция ПолучитьСтруктуруПоискаПоСотруднику(ВзносыСтрока)
	
	ПоискСтруктура = Новый Структура;
	ПоискСтруктура.Вставить("Сотрудник");
	
	ЗаполнитьЗначенияСвойств(ПоискСтруктура,ВзносыСтрока);
	
	Возврат ПоискСтруктура;	
	
КонецФункции                                             

Процедура ВзносыТаблица_Год_Рассчет(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Год	= ПолучитьСтруктуруВзносы_Год(ИсходныеДанные,РезультатРасчета);
	РезультатРасчета.ВзносыТаблица_Год = ВзносыТаблица_Год;
	
КонецПроцедуры

Процедура ВзносыТаблица_Квартал_Рассчет(ИсходныеДанные,РезультатРасчета)
	
	ВзносыТаблица_Квартал = РезультатРасчета.ВзносыТаблица_Месяц.Скопировать();
	УдалитьСтрокиНеВходящиеВПериод(ИсходныеДанные, ВзносыТаблица_Квартал);
	Для каждого СтрокаТаблицы Из ВзносыТаблица_Квартал Цикл
		СтрокаТаблицы.Период = НачалоКвартала(СтрокаТаблицы.Период);
	КонецЦикла; 
	
	ПоляДляГруппировки = ПолучитьПоляДляГруппировкиТаблицВЗН()+",Квартал,Период";
	ПоляДляСуммирования = ПолучитьПоляДляСуммированияТаблицВЗН();
	
	ВзносыТаблица_Квартал.Свернуть(ПоляДляГруппировки,ПоляДляСуммирования);
    РезультатРасчета.ВзносыТаблица_Квартал = ВзносыТаблица_Квартал;
    
КонецПроцедуры

Функция ПолучитьПоляДляГруппировкиТаблицВЗН()
	
	Возврат "Сотрудник,"
	  	  + "ФИО,"
	  	  + "ГодРождения,"
	  	  + "СтатусРезидента,"
		  + "Инвалид";
	
КонецФункции

Функция ПолучитьПоляДляСуммированияТаблицВЗН()
	
	Возврат "Доход,"
        + "ОблагаемаяБаза," 
		+ "ОблагаемаяБазаПревышение,"
		+ "ОблагаемаяБазаФСС,"
		+ "ОблагаемаяБазаФССПревышение,"
		+ "Ст9ФЗ212,"
		+ "МатПомощь,"
		+ "ВыплатыИнвалидам,"
		+ "ДоговорыГПХ,"
		+ "ПФ,"
		+ "ПФПревышение,"
		+ "ФФОМС,"
		+ "ФФОМСПревышение,"
		+ "НСиПЗ,"
		+ "ФСС,"
		+ "ФССПревышение,"
		+ "ФССИностранцы,"
		+ "СреднесписочнаяЧисленность";
		
КонецФункции

#КонецОбласти
