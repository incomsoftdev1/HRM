
#Область о // Очистить период от данных:

&НаСервере
Процедура ОчиститьПроизводсвенныйКалендарь(Год = 0) Экспорт
	
	НаборЗаписей = РегистрыСведений.ДанныеПроизводственногоКалендаря.СоздатьНаборЗаписей();
	Если Год <> 0 Тогда
		НаборЗаписей.Отбор.Год.Установить(Год);	
	КонецЕсли; 
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);    
	
	Сообщить("Данные по производсвенному календарю очищены.");
	
КонецПроцедуры                                

&НаСервере
Процедура ОчиститьНормуВремени(Год = 0) Экспорт

	НаборЗаписей = РегистрыСведений.инкНормаВремени.СоздатьНаборЗаписей();
	Если Год <> 0 Тогда
		НаборЗаписей.Отбор.Год.Установить(Год);	
	КонецЕсли; 
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	
	Сообщить("Данные по норме времени очищены.");
	                                                          
КонецПроцедуры

#КонецОбласти			                          

#Область о // Загрузка данных:

&НаСервере
Процедура ЗагрузитьДанныеНаСервере(Год) Экспорт
	
	ЗагрузитьДанныеПроизводственногоКалендаря(Год);
	инкУчетВремениСервер.ЗагрузитьНормуВремениИзГодовогоФондаРабочегоВремениНаСервере(Год);
  	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеПроизводственногоКалендаря(Год)
	
	// Загрузка производственного календаря:
	НаборЗаписейПК = РегистрыСведений.ДанныеПроизводственногоКалендаря.СоздатьНаборЗаписей();
	НаборЗаписейПК.Отбор.Год.Установить(Год);
	НаборЗаписейПК.Очистить();

	ПроизводственныйКалендарьРФ = инкУчетВремениСервер.ПолучитьПроизводственныйКалендарьРФ(); 
	ТекущийДеньГода = Дата(Формат(Год,"ЧГ=")+"0101000000");
	Для Месяц = 1 По 12 Цикл
		
		ПоследнийДеньМесяца = День(КонецМесяца(ТекущийДеньГода));
		
		Для День = 1 По ПоследнийДеньМесяца Цикл
			
			ЗаписьПК = НаборЗаписейПК.Добавить();
			ЗаписьПК.ПроизводственныйКалендарь = ПроизводственныйКалендарьРФ;
			ЗаписьПК.Дата                      = ТекущийДеньГода;
			ЗаписьПК.Год                       = Год;
			ЗаписьПК.ВидДня                    = ПолучитьВидДняПоДате(ТекущийДеньГода);
			
			ТекущийДеньГода = ТекущийДеньГода + 24 * 60	* 60;
			
		КонецЦикла;
		
	КонецЦикла;
	
	НаборЗаписейПК.Записать(Истина);   
	
	Сообщить("Данные за "+Год+" год загружены в производственный календарь.");

КонецПроцедуры

&НаСервере
Функция ПолучитьВидДняПоДате(ТекущийДеньГода)
	
	ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий;
	Если ДеньНедели(ТекущийДеньГода) = 6 Тогда                       
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
	ИначеЕсли ДеньНедели(ТекущийДеньГода) = 7 Тогда
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;
	КонецЕсли;
	
	Если Год(ТекущийДеньГода) = 2022 Тогда
		ВидДня = ВыходныеИПраздничныеДни2022(ВидДня,ТекущийДеньГода);
	ИначеЕсли Год(ТекущийДеньГода) = 2021 Тогда
		ВидДня = ВыходныеИПраздничныеДни2021(ВидДня,ТекущийДеньГода);
	КонецЕсли;   
	
	Возврат ВидДня;
		
КонецФункции      

&НаСервере
Функция ВыходныеИПраздничныеДни2021(ВидДня,ТекущийДеньГода)
	
	// Январь:
	Если (ТекущийДеньГода >= Дата("20210101000000")) И (ТекущийДеньГода <= Дата("20210108000000")) Тогда
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Февраль:
	ИначеЕсли (ТекущийДеньГода = Дата("20210220000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	ИначеЕсли (ТекущийДеньГода = Дата("20210222000000")) ИЛИ (ТекущийДеньГода = Дата("20210223000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Март:	
	ИначеЕсли (ТекущийДеньГода = Дата("20210308000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Апрель:	
	ИначеЕсли (ТекущийДеньГода = Дата("20210430000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	// Май:	
	ИначеЕсли (ТекущийДеньГода = Дата("20210503000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	ИначеЕсли (ТекущийДеньГода = Дата("20210507000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	ИначеЕсли (ТекущийДеньГода = Дата("20210510000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Июнь:	
	ИначеЕсли (ТекущийДеньГода = Дата("20210611000000")) Тогда                 
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	ИначеЕсли (ТекущийДеньГода = Дата("20210614000000")) Тогда                 
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Ноябрь:	
	ИначеЕсли (ТекущийДеньГода = Дата("20211103000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;                  
	ИначеЕсли (ТекущийДеньГода = Дата("20211104000000")) ИЛИ (ТекущийДеньГода = Дата("20211105000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;                  
	// Декабрь:	
	ИначеЕсли (ТекущийДеньГода = Дата("20211231000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;                  
	КонецЕсли;
	
	Возврат ВидДня; 

КонецФункции        

&НаСервере
Функция ВыходныеИПраздничныеДни2022(ВидДня,ТекущийДеньГода)
	
	// Январь:
	Если (ТекущийДеньГода >= Дата("20220101000000")) И (ТекущийДеньГода <= Дата("20220108000000")) Тогда
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Февраль:
	ИначеЕсли (ТекущийДеньГода = Дата("20220222000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	ИначеЕсли (ТекущийДеньГода = Дата("20220223000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Март:	
	ИначеЕсли (ТекущийДеньГода = Дата("20220305000000")) Тогда                 
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	ИначеЕсли (ТекущийДеньГода = Дата("20220307000000")) ИЛИ (ТекущийДеньГода = Дата("20220308000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
 	// Май:	
	ИначеЕсли (ТекущийДеньГода = Дата("20220502000000")) ИЛИ (ТекущийДеньГода = Дата("20220503000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	ИначеЕсли (ТекущийДеньГода = Дата("20220509000000")) ИЛИ (ТекущийДеньГода = Дата("20220510000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Июнь:	
	ИначеЕсли (ТекущийДеньГода = Дата("20220613000000")) Тогда                 
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	// Ноябрь:	
	ИначеЕсли (ТекущийДеньГода = Дата("20221103000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;                  
	ИначеЕсли (ТекущийДеньГода = Дата("20221104000000")) Тогда                  
		ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
	КонецЕсли;
	
	Возврат ВидДня; 

КонецФункции

#КонецОбласти			
