&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КодыБюджетнойКлассификации = "Коды бюджетной классификации";
	ЗагрузитьНастройкиВЗН();
	
КонецПроцедуры

&НаКлиенте
Процедура КодыБюджетнойКлассификацииНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.инкКодыБюджетнойКлассификации.Форма.ФормаСписка");	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиВЗН()
	
	ЗагрузитьНастройки_КонфигурацияВыплатВФонды();
	ЗагрузитьНастройки_ОсобыеУсловияТруда();
	ФондТравматизмаСтавка = Константы.инкФондТравматизма.Получить();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицу_КонфигурацияВыплатВФонды(инкСтрокаТарифаВЗН,РезультатЗапросаТаблица)
	
	ПоискТарифа = Новый Структура("СтрокаТарифаВЗН",инкСтрокаТарифаВЗН);
	ПоискМассив = РезультатЗапросаТаблица.НайтиСтроки(ПоискТарифа);
	
	КонфиурацияВылатВФондыСтрока = КонфиурацияВылатВФондыТаблица.Добавить();
	КонфиурацияВылатВФондыСтрока.СтрокаТарифаВЗН = инкСтрокаТарифаВЗН;
	
	Для каждого ПоискЭлемент из ПоискМассив Цикл
		ЗаполнитьЗначенияСвойств(КонфиурацияВылатВФондыСтрока,ПоискЭлемент);	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки_КонфигурацияВыплатВФонды()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкКонфигурацияВыплатВФондыСрезПоследних.СтрокаТарифаВЗН КАК СтрокаТарифаВЗН,
		|	инкКонфигурацияВыплатВФондыСрезПоследних.ПФ КАК ПФ,
		|	инкКонфигурацияВыплатВФондыСрезПоследних.ФСС КАК ФСС,
		|	инкКонфигурацияВыплатВФондыСрезПоследних.ФФОМС КАК ФФОМС
		|ИЗ
		|	РегистрСведений.инкКонфигурацияВыплатВФонды КАК инкКонфигурацияВыплатВФондыСрезПоследних";
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	
	ДобавитьСтрокуВТаблицу_КонфигурацияВыплатВФонды(Перечисления.инкСтрокаТарифаВЗН.ОблагаемаяБазаВЗН,РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_КонфигурацияВыплатВФонды(Перечисления.инкСтрокаТарифаВЗН.ТарифВПределахЛимита,РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_КонфигурацияВыплатВФонды(Перечисления.инкСтрокаТарифаВЗН.ТарифСверхЛимита,РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_КонфигурацияВыплатВФонды(Перечисления.инкСтрокаТарифаВЗН.ТарифСвышеМРОТДляМСБ,РезультатЗапросаТаблица);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(инкУсловияТрудаКласс,инкУсловияТрудаПодкласс,РезультатЗапросаТаблица)
	
	ПоискТарифа = Новый Структура;
	ПоискТарифа.Вставить("УсловияТрудаКласс",инкУсловияТрудаКласс);
	ПоискТарифа.Вставить("УсловияТрудаПодкласс",инкУсловияТрудаПодкласс);
	
	ПоискМассив = РезультатЗапросаТаблица.НайтиСтроки(ПоискТарифа);
	
	ОсобыеУсловияТрудаСтрока = ОсобыеУсловияТрудаТаблица.Добавить();
	ОсобыеУсловияТрудаСтрока.УсловияТрудаКласс    = инкУсловияТрудаКласс;
	ОсобыеУсловияТрудаСтрока.УсловияТрудаПодкласс = инкУсловияТрудаПодкласс;

	Для каждого ПоискЭлемент из ПоискМассив Цикл
		ЗаполнитьЗначенияСвойств(ОсобыеУсловияТрудаСтрока,ПоискЭлемент);	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки_ОсобыеУсловияТруда()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкОсобыеУсловияТруда.УсловияТрудаКласс КАК УсловияТрудаКласс,
		|	инкОсобыеУсловияТруда.УсловияТрудаПодкласс КАК УсловияТрудаПодкласс,
		|	инкОсобыеУсловияТруда.Тариф КАК Тариф
		|ИЗ
		|	РегистрСведений.инкОсобыеУсловияТруда КАК инкОсобыеУсловияТруда";
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Опасный,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс4,
											  РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Вредный,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс34,
											  РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Вредный,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс33,
											  РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Вредный,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс32,
											  РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Вредный,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс31,
											  РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Допустимый,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс2,
											  РезультатЗапросаТаблица);
	ДобавитьСтрокуВТаблицу_ОсобыеУсловияТруда(Перечисления.инкУсловияТрудаКласс.Оптимальный,
	                                          Перечисления.инкУсловияТрудаПодкласс.Подкласс1,
											  РезультатЗапросаТаблица);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	СохранитьНастройки_КонфигурацияВыплатВФонды();
	СохранитьНастройки_ОсобыеУсловияТруда();
	Константы.инкФондТравматизма.Установить(ФондТравматизмаСтавка);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки_КонфигурацияВыплатВФонды()
	
	КонфигурацияВыплатВФондыНабор = РегистрыСведений.инкКонфигурацияВыплатВФонды.СоздатьНаборЗаписей();
	Для каждого КонфиурацияВылатВФондыСтрока из КонфиурацияВылатВФондыТаблица Цикл
		КонфигурацияВыплатВФондыЗапись = КонфигурацияВыплатВФондыНабор.Добавить();
		ЗаполнитьЗначенияСвойств(КонфигурацияВыплатВФондыЗапись,КонфиурацияВылатВФондыСтрока);
	КонецЦикла;
	КонфигурацияВыплатВФондыНабор.Записать(Истина);
		
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки_ОсобыеУсловияТруда()
	
	ОсобыеУсловияТрудаНабор = РегистрыСведений.инкОсобыеУсловияТруда.СоздатьНаборЗаписей();
	Для каждого ОсобыеУсловияТрудаСтрока из ОсобыеУсловияТрудаТаблица Цикл
		ОсобыеУсловияТрудаЗапись = ОсобыеУсловияТрудаНабор.Добавить();
		ЗаполнитьЗначенияСвойств(ОсобыеУсловияТрудаЗапись,ОсобыеУсловияТрудаСтрока);
	КонецЦикла;
	ОсобыеУсловияТрудаНабор.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СохранитьНастройкиНаСервере();
	
КонецПроцедуры
	
