
#Область о // Объявление переменных

Перем СотрудникиМассив Экспорт;
Перем Организация Экспорт;

#КонецОбласти 

#Область о // Загрузка данных в табличный документ

Функция Получить_ОблагаемыеДоходы(СотрудникиМассив)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МЕСЯЦ(инкДоходыНДФЛОбороты.Период) КАК МесяцНалоговогоПериода,
		|	инкДоходыНДФЛОбороты.Сотрудник КАК Сотрудник,
		|	инкДоходыНДФЛОбороты.ДоходНДФЛ КАК КодДоходаСтрокой,
		|	инкДоходыНДФЛОбороты.ВычетНДФЛ КАК КодВычетаСтрокой,
		|	инкДоходыНДФЛОбороты.СуммаНачисленияОборот КАК СуммаДохода,
		|	инкДоходыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
		|ИЗ
		|	РегистрНакопления.инкНачисления.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			Месяц,
		|			Сотрудник В (&СотрудникиМассив)
		|				И Налог = ИСТИНА) КАК инкДоходыНДФЛОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	МесяцНалоговогоПериода,
		|	КодДоходаСтрокой,
		|	КодВычетаСтрокой";
	
	Если Не ЗначениеЗаполнено(СотрудникиМассив) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&СотрудникиМассив)","Истина");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Функция Получить_ВычетыНДФЛ(СотрудникиМассив)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
		|	ПОДСТРОКА(инкВычетыНДФЛОбороты.ВычетНДФЛ.Код, 1, 3) КАК КодВычетаСтрокой,
		|	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
		|ИЗ
		|	РегистрНакопления.инкВычетыНДФЛ.Обороты(&Дата1, &Дата2, , Сотрудник В (&СотрудникиМассив)) КАК инкВычетыНДФЛОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	КодВычетаСтрокой";
	
	Если Не ЗначениеЗаполнено(СотрудникиМассив) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&СотрудникиМассив)","Истина");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Функция Получить_НалогУдержанный(СотрудникиМассив)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНалогУдержанныйОбороты.Сотрудник КАК Сотрудник,
		|	инкНалогУдержанныйОбороты.НалоговаяСтавка КАК НалоговаяСтавка,
		|	инкНалогУдержанныйОбороты.СуммаНалогаОборот КАК СуммаНалога
		|ИЗ
		|	РегистрНакопления.инкНалогУдержанный.Обороты(&Дата1, &Дата2, , Сотрудник В (&СотрудникиМассив)) КАК инкНалогУдержанныйОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	НалоговаяСтавка";
	
	Если Не ЗначениеЗаполнено(СотрудникиМассив) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&СотрудникиМассив)","Истина");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Процедура ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет,ВычетыТаблица)
	
	Если ИндексВычеты > ВычетыКоличество Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Вычет.Параметры,ВычетыТаблица[ИндексВычеты]);	
	ИндексВычеты = ИндексВычеты+ 1;
	
КонецПроцедуры

Функция РассчитатьОбщиеСуммыДоходаИНалога(ОблагаемыеДоходы,Вычеты,НалогУдержанный,Процент = 0.13)
	
	СтруктураДоходаИНалога = Новый Структура;
	
	СтруктураДоходаИНалога.Вставить("ОбщаяСуммаДохода",0);
	СтруктураДоходаИНалога.Вставить("ОбщаяСуммаВычетов",0);
	СтруктураДоходаИНалога.Вставить("ОблагаемаяСуммаДохода",0);
	СтруктураДоходаИНалога.Вставить("Исчислено",0);
	СтруктураДоходаИНалога.Вставить("ЗачтеноАвансовыхПлатежей",0);
	
	СтруктураДоходаИНалога.Вставить("Удержано",0);
	СтруктураДоходаИНалога.Вставить("Перечислено",0);
	СтруктураДоходаИНалога.Вставить("ИзлишнеУдержано",0);
	СтруктураДоходаИНалога.Вставить("Задолженность",0);
	
	Для каждого ОблагаемыеДоходыСтрока из ОблагаемыеДоходы Цикл
		СтруктураДоходаИНалога.ОбщаяСуммаДохода  = СтруктураДоходаИНалога.ОбщаяСуммаДохода
		                                         + ОблагаемыеДоходыСтрока.СуммаДохода;
		СтруктураДоходаИНалога.ОбщаяСуммаВычетов = СтруктураДоходаИНалога.ОбщаяСуммаВычетов
		                                         + ОблагаемыеДоходыСтрока.СуммаВычета;
	КонецЦикла;
	
	Для каждого ВычетыСтрока из Вычеты Цикл
		СтруктураДоходаИНалога.ОбщаяСуммаВычетов = СтруктураДоходаИНалога.ОбщаяСуммаВычетов
		                                         + ВычетыСтрока.СуммаВычета;
	КонецЦикла;

	Для каждого НалогУдержанныйСтрока из НалогУдержанный Цикл
		СтруктураДоходаИНалога.Удержано = СтруктураДоходаИНалога.Удержано
		                                + НалогУдержанныйСтрока.СуммаНалога;
	КонецЦикла;
	
	СтруктураДоходаИНалога.ОблагаемаяСуммаДохода = СтруктураДоходаИНалога.ОбщаяСуммаДохода
	                                             - СтруктураДоходаИНалога.ОбщаяСуммаВычетов; 
												 
	СтруктураДоходаИНалога.Исчислено = СтруктураДоходаИНалога.ОблагаемаяСуммаДохода * Процент; 
												 
	Возврат СтруктураДоходаИНалога;
	
КонецФункции

Функция Получить2НДФЛНаСервере()
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Год) Тогда
		Сообщить("Не задан год.");
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не задана организация.");
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("инкФорма2НДФЛс2019");
	ОблагаемыеДоходыТаблица = Получить_ОблагаемыеДоходы(СотрудникиМассив);
	ВычетыТаблица 			= Получить_ВычетыНДФЛ(СотрудникиМассив);   
	НалогУдержанныйТаблица 	= Получить_НалогУдержанный(СотрудникиМассив);
	
	Для каждого СотрудникСтрока из СотрудникиМассив Цикл 
		
		ПоискСотрудника = Новый Структура("Сотрудник",СотрудникСтрока);
		ОблагаемыеДоходы = ОблагаемыеДоходыТаблица.НайтиСтроки(ПоискСотрудника);
		Вычеты			 = ВычетыТаблица.НайтиСтроки(ПоискСотрудника);
		НалогУдержанный  = НалогУдержанныйТаблица.НайтиСтроки(ПоискСотрудника);
		
		Если ОблагаемыеДоходы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;			
		
		ШапкаПервойСтраницы = Макет.ПолучитьОбласть("ШапкаПервойСтраницы");
		ШапкаПервойСтраницы.Параметры.НалоговыйПериод = Год(ЭтотОбъект.Год);
		ШапкаПервойСтраницы.Параметры.Дата = ТекущаяДата();
		
		// 1. Данные о налоговом агенте:
		ШапкаПервойСтраницы.Параметры.ОКТМО     = Организация.ОКТМО;
		ШапкаПервойСтраницы.Параметры.Телефон   = "";
		ШапкаПервойСтраницы.Параметры.ИННорг    = Организация.ИНН;
		ШапкаПервойСтраницы.Параметры.КПП		= Организация.КПП;
		ШапкаПервойСтраницы.Параметры.НазваниеОрганизации   = Организация.Наименование;
		ШапкаПервойСтраницы.Параметры.ФормаРеорганизации	= "";			
		ШапкаПервойСтраницы.Параметры.ИННРеорганизованнойОрганизации = "";
		ШапкаПервойСтраницы.Параметры.КППРеорганизованнойОрганизации = "";
		
		//2. Данные о физическом лице - получателе дохода
		ШапкаПервойСтраницы.Параметры.ИНН		= СотрудникСтрока.ИНН;
		ШапкаПервойСтраницы.Параметры.Фамилия   = СотрудникСтрока.Фамилия;
		ШапкаПервойСтраницы.Параметры.Имя       = СотрудникСтрока.Имя;
		ШапкаПервойСтраницы.Параметры.Отчество  = СотрудникСтрока.ФИО;
		//Исправить в будущем:
		ШапкаПервойСтраницы.Параметры.Статус    = "1";
		//ШапкаПервойСтраницы.Параметры.Статус    = СотрудникСтрока.СтатусРезидента;
		ШапкаПервойСтраницы.Параметры.ДатаРождения		= СотрудникСтрока.ДатаРождения;
		ШапкаПервойСтраницы.Параметры.Гражданство       = СотрудникСтрока.Гражданство;
		ШапкаПервойСтраницы.Параметры.КодУдЛичн         = СотрудникСтрока.ДокументУдостоверяющийЛичность.КодМВД;
		ШапкаПервойСтраницы.Параметры.СерияДокумента    = СотрудникСтрока.ДокументСерия;
		ШапкаПервойСтраницы.Параметры.НомерДокумента    = СотрудникСтрока.ДокументНомер;
		
		ТабДок.Вывести(ШапкаПервойСтраницы);

		// Доходы:
		ЗаголовокРаздела3 = Макет.ПолучитьОбласть("ЗаголовокРаздела3");
		ЗаголовокРаздела3.Параметры.Ставка = "13%"; 
		ТабДок.Вывести(ЗаголовокРаздела3);
		
		ОблагаемыеДоходыКоличество = ОблагаемыеДоходы.Количество()-1;
		
		Для ИндексЧисло = 1 по 20 Цикл
			
			Если (ИндексЧисло-1) > ОблагаемыеДоходыКоличество Тогда
				Прервать;
			КонецЕсли;
			
			СтрокаДоходовЛеваяЧасть = Макет.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть");
			СтрокаДоходовПраваяЧасть = Макет.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть");

			ЛевыйИндекс = ИндексЧисло - 1;  
			Если ОблагаемыеДоходыКоличество >= ЛевыйИндекс Тогда 
				ЗаполнитьЗначенияСвойств(СтрокаДоходовЛеваяЧасть.Параметры,ОблагаемыеДоходы[ЛевыйИндекс]);
			КонецЕсли;
			
			ПравыйИндекс = ИндексЧисло + 20 - 1;
			Если ОблагаемыеДоходыКоличество >= ПравыйИндекс Тогда 
				ЗаполнитьЗначенияСвойств(СтрокаДоходовЛеваяЧасть.Параметры,ОблагаемыеДоходы[ПравыйИндекс]);
			КонецЕсли;
			
			ТабДок.Вывести(СтрокаДоходовЛеваяЧасть);
			ТабДок.Присоединить(СтрокаДоходовПраваяЧасть);
			
		КонецЦикла;
		
		// Вычеты:
		ЗаголовокРаздела4 = Макет.ПолучитьОбласть("ЗаголовокРаздела4");
		ТабДок.Вывести(ЗаголовокРаздела4);

		ВычетыКоличество = Вычеты.Количество()-1;
		ИндексВычеты     = 0;
		
		Для ИндексСтрока = 1 по 5 Цикл
			
			Если ИндексВычеты > ВычетыКоличество Тогда
				Прервать;
			КонецЕсли;
			
			Вычет1 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты1");
			Вычет2 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты2");
			Вычет3 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты3");
			Вычет4 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты4");
			
			ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет1,Вычеты);
			ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет2,Вычеты);
			ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет3,Вычеты);
			ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет4,Вычеты);
			
			ТабДок.Вывести(Вычет1);
			ТабДок.Присоединить(Вычет2);
			ТабДок.Присоединить(Вычет3);
			ТабДок.Присоединить(Вычет4);
			
		КонецЦикла;	
		
		// Общие суммы дохода и налога: 
		Раздел5 = Макет.ПолучитьОбласть("Раздел5");  
		
		ОбщиеСуммыДоходаИНалогаСтруктура = РассчитатьОбщиеСуммыДоходаИНалога(ОблагаемыеДоходы,Вычеты,НалогУдержанный);
		ЗаполнитьЗначенияСвойств(Раздел5.Параметры,ОбщиеСуммыДоходаИНалогаСтруктура);
		Раздел5.Параметры.Перечислено = ЭтотОбъект.СуммаУплаченногоНалога;
		ТабДок.Вывести(Раздел5);
		
		// 
		НалоговыйАгент = Макет.ПолучитьОбласть("НалоговыйАгент");
		НалоговыйАгент.Параметры.ФИОПодписавшего = Организация.Наименование;
		ТабДок.Вывести(НалоговыйАгент);
		//
		Примечание = Макет.ПолучитьОбласть("Примечание");
		ТабДок.Вывести(Примечание);
		
		ТабДок.ВывестиВертикальныйРазделительСтраниц();
		
	КонецЦикла;

	Возврат ТабДок;
	
КонецФункции

#КонецОбласти 

#Область о // Печать расчетных листков

Функция ПолучитьРезультатРасчета() Экспорт
	
	ТабличныйДокумент = Получить2НДФЛНаСервере();
	Возврат ТабличныйДокумент; 
	
КонецФункции

#КонецОбласти