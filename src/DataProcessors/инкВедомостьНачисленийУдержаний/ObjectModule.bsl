#Область о // Параметры:

// Параметры:
//	ДанныеДляОтчета - структура, содержит информацию для формирования отчета 
//					  см. инкОтчетыСервер.ПолучитьСтруктуруДляВедомостиНачисленийУдержаний().
//						
//
//	ТабличныеДокументы - структура, содержит табличные документы для вывода на печать:	
//  	ВедомостьНачислений 	- табличный документ, Ведомость начислений. 
//		ВедомостьУдержаний		- табличный документ, Ведомость удержаний.

#КонецОбласти

#Область о // Переменные:

Перем ДанныеДляОтчета Экспорт;

#КонецОбласти

#Область о // Инициализация:

Процедура Инициализация() Экспорт
	
	ДанныеДляОтчета = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область о // Исходные данные:

Функция ПолучитьИсходныеДанные(ДанныеДляОтчета)
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("НачисленияСоответсвие",ПолучитьНачисленияСоответсвие(ДанныеДляОтчета));
	ИсходныеДанные.Вставить("УдержанияТаблица",ПолучитьУдержанияТаблица(ДанныеДляОтчета));
	ИсходныеДанные.Вставить("УдержанияСоответствие",ПолучитьУдержанияСоответсвие(ИсходныеДанные));
	
	Возврат ИсходныеДанные;
	
КонецФункции

Функция ПолучитьУдержанияСоответсвие(ИсходныеДанные)
	
	УдержанияСоответсвие = Новый Соответствие;
	ПрочиеУдержания = ИсходныеДанные.УдержанияТаблица;
	
	Для каждого УдержаниеСтрока Из ПрочиеУдержания Цикл
		УдержанияСоответсвие.Вставить(УдержаниеСтрока.Удержание,"Код - "+УдержаниеСтрока.Удержание.Код);			
	КонецЦикла; 
	
	Возврат УдержанияСоответсвие;
	
КонецФункции

Функция ПолучитьНачисленияСоответсвие(ДанныеДляОтчета)
	
	НачисленияСоответсвие = Новый Соответствие;
	ПрочиеНачисления = ДанныеДляОтчета.ТаблицаПрочихНачислений;
	
	Для каждого НачислениеСтрока Из ПрочиеНачисления Цикл
		Если ЗначениеЗаполнено(НачислениеСтрока.Начисление) Тогда
			НачисленияСоответсвие.Вставить(НачислениеСтрока.Начисление,"Код - "+НачислениеСтрока.Начисление.Код);			
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат НачисленияСоответсвие;
	
КонецФункции

Функция ПолучитьУдержанияТаблица(ДанныеДляОтчета)
	
	УдержанияСводТаблица = Новый ТаблицаЗначений;
	ПрочиеУдержания = ДанныеДляОтчета.ТаблицаПрочихУдержаний;
	УдержанияСводТаблица = ПрочиеУдержания.Скопировать();
	УдержанияСводТаблица.Очистить();
	
	Для каждого УдержаниеСтрока Из ПрочиеУдержания Цикл
		
		УдержанияСводСтрока = УдержанияСводТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(УдержанияСводСтрока,УдержаниеСтрока);
		
		ВидУдержания = УдержаниеСтрока.Удержание;
		Если СтрНайти(НРег(УдержаниеСтрока.Удержание.Наименование),НРег("Аванс")) > 0 Тогда
			ВидУдержания = ПланыВидовРасчета.инкУдержания.Аванс;
		ИначеЕсли СтрНайти(НРег(УдержаниеСтрока.Удержание.Наименование),НРег("Долг")) > 0 Тогда	
			ВидУдержания = ПланыВидовРасчета.инкУдержания.Долг;
		ИначеЕсли СтрНайти(НРег(УдержаниеСтрока.Удержание.Наименование),НРег("Подарки")) > 0 Тогда	
			ВидУдержания = ПланыВидовРасчета.инкУдержания.Подарки;
		ИначеЕсли СтрНайти(НРег(УдержаниеСтрока.Удержание.Наименование),НРег("Алименты")) > 0 Тогда	
			ВидУдержания = ПланыВидовРасчета.инкУдержания.Алименты;
		КонецЕсли;
		
		УдержанияСводСтрока.Удержание = ВидУдержания;
			
	КонецЦикла;                 
	
	УдержанияСводТаблица.Свернуть("Сотрудник,Удержание","СуммаУдержания");
	
	Возврат УдержанияСводТаблица;
	
КонецФункции

#КонецОбласти

#Область о // Сформировать отчет:

Функция ПолучитьТабличныеДокументы() Экспорт
	
	ТабличныеДокументы = Новый Структура;
	ТабличныеДокументы.Вставить("ВедомостьНачислений");
	ТабличныеДокументы.Вставить("ВедомостьУдержаний");

	ИсходныеДанные = ПолучитьИсходныеДанные(ДанныеДляОтчета);
	ТабличныеДокументы.ВедомостьНачислений = СформироватьВедомостьНачислений(ДанныеДляОтчета,ИсходныеДанные);
	ТабличныеДокументы.ВедомостьУдержаний = СформироватьВедомостьУдержаний(ДанныеДляОтчета,ИсходныеДанные);
	
	Возврат ТабличныеДокументы;
	
КонецФункции

Процедура ВывестиБлокРасшифровки(НачисленияУдержанияСоответсвие,ВедомостьМакет,ВедомостьТабличныйДокумент)
	
	Если НачисленияУдержанияСоответсвие.Количество() > 0 Тогда
		
		РасшифровкаЗаголовокОбласть = ВедомостьМакет.ПолучитьОбласть("РасшифровкаЗаголовок");
		ВедомостьТабличныйДокумент.Вывести(РасшифровкаЗаголовокОбласть);
		
		РасшифровкаСтрокаОбласть = ВедомостьМакет.ПолучитьОбласть("РасшифровкаСтрока");
		Для каждого НачисленияУдержанияЗначение Из НачисленияУдержанияСоответсвие Цикл
			РасшифровкаСтрокаОбласть.Параметры.Расшифровка = Строка(НачисленияУдержанияЗначение.Значение) + ": " 
														   + Строка(НачисленияУдержанияЗначение.Ключ) + ";";	
			ВедомостьТабличныйДокумент.Вывести(РасшифровкаСтрокаОбласть);	
		КонецЦикла; 
		
	КонецЕсли; 
	    	
КонецПроцедуры                                                   

#Область о // Таблица начислений:

Функция СформироватьВедомостьНачислений(ДанныеДляОтчета,ИсходныеДанные)
	
	ВедомостьНачислений = Новый ТабличныйДокумент;
	ВедомостьНачисленийМакет = ПолучитьМакет("МакетВедомостьНачисленийУдержаний");
	
	// Заголовок:
	ЗаголовокОбласть = ВедомостьНачисленийМакет.ПолучитьОбласть("ЗаголовокОтчета");
	ЗаголовокОбласть.Параметры.НачисленийУдержаний = "начислений";
	ЗаголовокОбласть.Параметры.ДатаВедомости = Формат(ДанныеДляОтчета.МесяцНачисления, "ДФ='ММММ гггг'") + "г.";
	ЗаголовокОбласть.Параметры.Организация = ДанныеДляОтчета.Организация;
	ЗаголовокОбласть.Параметры.Подразделение = ДанныеДляОтчета.Подразделение;
	ВедомостьНачислений.Вывести(ЗаголовокОбласть);
	
	ВывестиБлокТаблицыНачислений("ТаблицаЗаголовок",ВедомостьНачислений,ВедомостьНачисленийМакет,ИсходныеДанные);
	
	Для каждого ВедомостьСтрока Из ДанныеДляОтчета.ТаблицаВедомость Цикл
		ВывестиБлокТаблицыНачислений("ТаблицаСтрока",ВедомостьНачислений,ВедомостьНачисленийМакет,ИсходныеДанные,ВедомостьСтрока);
	КонецЦикла; 
	
	ВывестиБлокТаблицыНачислений("ТаблицаИтог",ВедомостьНачислений,ВедомостьНачисленийМакет,ИсходныеДанные,,ДанныеДляОтчета.ТаблицаВедомость);

	// Расшифровка:
	ВывестиБлокРасшифровки(ИсходныеДанные.НачисленияСоответсвие,ВедомостьНачисленийМакет,ВедомостьНачислений);
	
	ВедомостьНачислений.ФиксацияСлева = 1;
	
	Возврат ВедомостьНачислений;
	
КонецФункции

Процедура ВывестиБлокТаблицыНачислений(ИмяСтроки,ВедомостьТабличныйДокумент,ВедомостьМакет,ИсходныеДанные,ВедомостьСтрока = Неопределено,ВедомостьТаблица = Неопределено)
	
	// Таблица:
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаФИО");
	Если ИмяСтроки = "ТаблицаСтрока" Тогда
		ТаблицаОбласть.Параметры.ФИО = ВедомостьСтрока.Сотрудник.ФИОСокращенное;
	КонецЕсли; 
	ВедомостьТабличныйДокумент.Вывести(ТаблицаОбласть);
	
	// Сальдо:
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаНачислениеУдержание");
	Если ИмяСтроки = "ТаблицаЗаголовок" Тогда
		ТаблицаОбласть.Параметры.НачислениеУдержание = "Сальдо";	
	ИначеЕсли ИмяСтроки = "ТаблицаСтрока" Тогда 	
		ТаблицаОбласть.Параметры.Сумма = ВедомостьСтрока.СальдоВходящее;
	ИначеЕсли ИмяСтроки = "ТаблицаИтог" Тогда	
		ТаблицаОбласть.Параметры.Сумма = ДанныеДляОтчета.ТаблицаВедомость.Итог("СальдоВходящее");	
	КонецЕсли; 
	ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);
	// Оклад:
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаНачислениеУдержание");
	Если ИмяСтроки = "ТаблицаЗаголовок" Тогда
		ТаблицаОбласть.Параметры.НачислениеУдержание = "Оклад";
	ИначеЕсли ИмяСтроки = "ТаблицаСтрока" Тогда 	
		ТаблицаОбласть.Параметры.Сумма = ВедомостьСтрока.Оклад;	
	ИначеЕсли ИмяСтроки = "ТаблицаИтог" Тогда	
		ТаблицаОбласть.Параметры.Сумма = ДанныеДляОтчета.ТаблицаВедомость.Итог("Оклад");
	КонецЕсли; 	
	ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);
	// РК:
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаНачислениеУдержание");
	Если ИмяСтроки = "ТаблицаЗаголовок" Тогда
		ТаблицаОбласть.Параметры.НачислениеУдержание = "РК";
	ИначеЕсли ИмяСтроки = "ТаблицаСтрока" Тогда 	
		ТаблицаОбласть.Параметры.Сумма = ВедомостьСтрока.РайонныйКоэффициент;
	ИначеЕсли ИмяСтроки = "ТаблицаИтог" Тогда	
		ТаблицаОбласть.Параметры.Сумма = ДанныеДляОтчета.ТаблицаВедомость.Итог("РайонныйКоэффициент");	
	КонецЕсли; 	
	ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);
	// СН:
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаНачислениеУдержание");
	Если ИмяСтроки = "ТаблицаЗаголовок" Тогда
		ТаблицаОбласть.Параметры.НачислениеУдержание = "СН";
	ИначеЕсли ИмяСтроки = "ТаблицаСтрока" Тогда 	
		ТаблицаОбласть.Параметры.Сумма = ВедомостьСтрока.СевернаяНадбавка;
	ИначеЕсли ИмяСтроки = "ТаблицаИтог" Тогда	
		ТаблицаОбласть.Параметры.Сумма = ДанныеДляОтчета.ТаблицаВедомость.Итог("СевернаяНадбавка");
	КонецЕсли; 		
	ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);

	// Прочие начисления:
	Для каждого НачисленияЗначение Из ИсходныеДанные.НачисленияСоответсвие Цикл
		ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаНачислениеУдержание");
		Если ИмяСтроки = "ТаблицаЗаголовок" Тогда
        	ТаблицаОбласть.Параметры.НачислениеУдержание = НачисленияЗначение.Значение;
		ИначеЕсли ИмяСтроки = "ТаблицаСтрока" Тогда 	
			ТаблицаОбласть.Параметры.Сумма = ПолучитьСуммуНачисления(ВедомостьСтрока.Сотрудник,НачисленияЗначение.Ключ,ДанныеДляОтчета.ТаблицаПрочихНачислений);
		ИначеЕсли ИмяСтроки = "ТаблицаИтог" Тогда	
			ТаблицаОбласть.Параметры.Сумма = ПолучитьСуммуНачисления(Неопределено,НачисленияЗначение.Ключ,ДанныеДляОтчета.ТаблицаПрочихНачислений);
		КонецЕсли;	
		ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);
	КонецЦикла; 
	
	// Всего:
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаВсего");
	Если ИмяСтроки = "ТаблицаСтрока" Тогда 	
		ТаблицаОбласть.Параметры.Сумма = ВедомостьСтрока.ВсегоНачислено;
	ИначеЕсли ИмяСтроки = "ТаблицаИтог" Тогда	
		ТаблицаОбласть.Параметры.Сумма = ДанныеДляОтчета.ТаблицаВедомость.Итог("ВсегоНачислено");
	КонецЕсли;	

	ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);
	
КонецПроцедуры

Функция ПолучитьСуммуНачисления(Сотрудник,НачисленияЗначение,ПрочиеНачисления)
	
	СуммаНачисления = 0;
	
	ПоискЗначения = Новый Структура;
	Если Сотрудник <> Неопределено Тогда
		ПоискЗначения.Вставить("Сотрудник",Сотрудник);	             
	КонецЕсли; 
	ПоискЗначения.Вставить("Начисление",НачисленияЗначение);
	
	НачисленияМассив = ПрочиеНачисления.НайтиСтроки(ПоискЗначения);
	
	Для каждого НачисленияЭлемент Из НачисленияМассив Цикл
		СуммаНачисления = СуммаНачисления + НачисленияЭлемент.СуммаНачисления;
	КонецЦикла; 
	
	Возврат СуммаНачисления;
	
КонецФункции

#КонецОбласти

#Область о // Таблица удержаний:

Функция СформироватьВедомостьУдержаний(ДанныеДляОтчета,ИсходныеДанные)
	
	ВедомостьУдержаний = Новый ТабличныйДокумент;
	ВедомостьУдержанийМакет = ПолучитьМакет("МакетВедомостьНачисленийУдержаний");
	
	// Заголовок:
	ЗаголовокОбласть = ВедомостьУдержанийМакет.ПолучитьОбласть("ЗаголовокОтчета");
	ЗаголовокОбласть.Параметры.НачисленийУдержаний = "удержаний";
	ЗаголовокОбласть.Параметры.ДатаВедомости = Формат(ДанныеДляОтчета.МесяцНачисления, "ДФ='ММММ гггг'") + "г.";
	ЗаголовокОбласть.Параметры.Подразделение = ДанныеДляОтчета.Подразделение;
	ЗаголовокОбласть.Параметры.Организация = ДанныеДляОтчета.Организация;
	ВедомостьУдержаний.Вывести(ЗаголовокОбласть);
	
	// Таблица:
	ВывестиБлокТаблицыУдержаний("ТаблицаЗаголовок",ВедомостьУдержаний,ВедомостьУдержанийМакет,ИсходныеДанные);
	
	Для каждого ВедомостьСтрока Из ДанныеДляОтчета.ТаблицаВедомость Цикл
		ВывестиБлокТаблицыУдержаний("ТаблицаСтрока",ВедомостьУдержаний,ВедомостьУдержанийМакет,ИсходныеДанные,ВедомостьСтрока);
	КонецЦикла; 
	
	ВывестиБлокТаблицыУдержаний("ТаблицаИтог",ВедомостьУдержаний,ВедомостьУдержанийМакет,ИсходныеДанные);

	// Расшифровка:
	ВывестиБлокРасшифровки(ИсходныеДанные.УдержанияСоответствие,ВедомостьУдержанийМакет,ВедомостьУдержаний);
	
	ВедомостьУдержаний.ФиксацияСлева = 1;
	
	Возврат ВедомостьУдержаний;
	
КонецФункции                                                            

Процедура ВывестиБлокТаблицыУдержаний(ИмяСтроки,ВедомостьТабличныйДокумент,ВедомостьМакет,ИсходныеДанные,ВедомостьСтрока = Неопределено,ВедомостьТаблица = Неопределено)
	
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ИмяСтроки+"|ТаблицаФИО");
	Если ИмяСтроки = "ТаблицаСтрока" Тогда
		ТаблицаОбласть.Параметры.ФИО = ВедомостьСтрока.Сотрудник.ФИОСокращенное;	
	КонецЕсли; 
	ВедомостьТабличныйДокумент.Вывести(ТаблицаОбласть);

	ПараметрыОтображения = Новый Структура;
	ПараметрыОтображения.Вставить("НачислениеУдержание");
	ПараметрыОтображения.Вставить("ВедомостьКолонка");
	ПараметрыОтображения.Вставить("ВедомостьСтрока",ВедомостьСтрока);  
	ПараметрыОтображения.Вставить("ИмяСтроки",ИмяСтроки);  
	ПараметрыОтображения.Вставить("ИсходныеДанные",ИсходныеДанные);
	
	// Вх. сальдо:                          
	ПараметрыОтображения.НачислениеУдержание 	= "Вх. сальдо";
	ПараметрыОтображения.ВедомостьКолонка 		= "СальдоВходящее";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);

	// Начислено:	
	ПараметрыОтображения.НачислениеУдержание 	= "Начислено";
	ПараметрыОтображения.ВедомостьКолонка 		= "ВсегоНачислено";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// НДФЛ:
	ПараметрыОтображения.НачислениеУдержание 	= "НДФЛ";
	ПараметрыОтображения.ВедомостьКолонка 		= "НДФЛ";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);

	// Аванс:
	ПараметрыОтображения.НачислениеУдержание 	= "Аванс";
	ПараметрыОтображения.ВедомостьКолонка 		= "Аванс";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// Межрасчетные выплаты:
	ПараметрыОтображения.НачислениеУдержание 	= "Межрасчетные выплаты";
	ПараметрыОтображения.ВедомостьКолонка 		= "МежрасчетныеВыплаты";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// Выплаты отпускн. и б/л: 
	ПараметрыОтображения.НачислениеУдержание 	= "Выплаты отпускн. и б/л";
	ПараметрыОтображения.ВедомостьКолонка 		= "ВыплатыОтпускныхИБЛ";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);

	// Алименты: 
	ПараметрыОтображения.НачислениеУдержание 	= "Алименты";
	ПараметрыОтображения.ВедомостьКолонка 		= "Алименты";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// ЗП пред. мес.:
	ПараметрыОтображения.НачислениеУдержание 	= "ЗП пред. мес.";
	ПараметрыОтображения.ВедомостьКолонка 		= "ЗПТекМес";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// ПрочиеУдержания:
	ПараметрыОтображения.НачислениеУдержание 	= "Прочие";
	ПараметрыОтображения.ВедомостьКолонка 		= "ПрочиеУдержания";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// ЗП тек. мес.					
	ПараметрыОтображения.НачислениеУдержание 	= "ЗП пред. мес.";
	ПараметрыОтображения.ВедомостьКолонка 		= "ЗППредМес";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);

	// Всего ударжано:					               
	ПараметрыОтображения.НачислениеУдержание 	= "ВсегоУдержано";
	ПараметрыОтображения.ВедомостьКолонка 		= "ВсегоУдержано";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
	
	// К выплате:					               
	ПараметрыОтображения.НачислениеУдержание 	= "К выплате";
	ПараметрыОтображения.ВедомостьКолонка 		= "КВыплате";
	ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент);
		
КонецПроцедуры

Процедура ОтобразитьДанныеПредопределеннойКолонки(ПараметрыОтображения,ВедомостьМакет,ВедомостьТабличныйДокумент)
	
	УдержанияМассив = Новый Массив;
	Если ПараметрыОтображения.ВедомостьКолонка = "Аванс" Тогда
		УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.Аванс);
	ИначеЕсли ПараметрыОтображения.ВедомостьКолонка = "МежрасчетныеВыплаты" Тогда
		УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.МежрасчетныеВыплаты);
	ИначеЕсли ПараметрыОтображения.ВедомостьКолонка = "ВыплатыОтпускныхИБЛ" Тогда  
		УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.ВыплатаОтпускныхИБЛВТекущемМесяце);
	ИначеЕсли ПараметрыОтображения.ВедомостьКолонка = "ЗПТекМес" Тогда 
		УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.ЗарплатаТекущегоМесяца);
	ИначеЕсли ПараметрыОтображения.ВедомостьКолонка = "ЗППредМес" Тогда
		УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.ЗарплатаПредыдущегоМесяца); 
	ИначеЕсли ПараметрыОтображения.ВедомостьКолонка = "ПрочиеУдержания" Тогда	
		
		Для каждого УдержаниеЭлемент Из ПараметрыОтображения.ИсходныеДанные.УдержанияСоответствие Цикл
			
			Если УдержаниеЭлемент.Ключ <> ПланыВидовРасчета.инкУдержания.Аванс И 
				 УдержаниеЭлемент.Ключ <> ПланыВидовРасчета.инкУдержания.МежрасчетныеВыплаты И
				 УдержаниеЭлемент.Ключ <> ПланыВидовРасчета.инкУдержания.ВыплатаОтпускныхИБЛВТекущемМесяце И  
				 УдержаниеЭлемент.Ключ <> ПланыВидовРасчета.инкУдержания.Алименты И
				 УдержаниеЭлемент.Ключ <> ПланыВидовРасчета.инкУдержания.ЗарплатаТекущегоМесяца И
				 УдержаниеЭлемент.Ключ <> ПланыВидовРасчета.инкУдержания.ЗарплатаПредыдущегоМесяца				
			Тогда
				УдержанияМассив.Добавить(УдержаниеЭлемент.Ключ); 	
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаОбласть = ВедомостьМакет.ПолучитьОбласть(ПараметрыОтображения.ИмяСтроки+"|ТаблицаНачислениеУдержание");
	Если ПараметрыОтображения.ИмяСтроки = "ТаблицаЗаголовок" Тогда
		ТаблицаОбласть.Параметры.НачислениеУдержание = ПараметрыОтображения.НачислениеУдержание;
	ИначеЕсли ПараметрыОтображения.ИмяСтроки = "ТаблицаСтрока" Тогда
		
		Если УдержанияМассив.Количество() > 0 Тогда
			ТаблицаОбласть.Параметры.Сумма = ПолучитьСуммуПоПрочимУдержаниям(УдержанияМассив,ПараметрыОтображения);	
		Иначе	
			ТаблицаОбласть.Параметры.Сумма = ПараметрыОтображения.ВедомостьСтрока[ПараметрыОтображения.ВедомостьКолонка];	
		КонецЕсли;		
			
	ИначеЕсли ПараметрыОтображения.ИмяСтроки = "ТаблицаИтог" Тогда
		
		Если УдержанияМассив.Количество() > 0 Тогда
			ТаблицаОбласть.Параметры.Сумма = ПолучитьСуммуПоПрочимУдержаниям(УдержанияМассив,ПараметрыОтображения,Истина);	
		Иначе
			ТаблицаОбласть.Параметры.Сумма = ДанныеДляОтчета.ТаблицаВедомость.Итог(ПараметрыОтображения.ВедомостьКолонка);
		КонецЕсли;
		
	КонецЕсли;	
	ВедомостьТабличныйДокумент.Присоединить(ТаблицаОбласть);
	
КонецПроцедуры   

&НаСервере
Функция ПолучитьСуммуПоПрочимУдержаниям(УдержанияМассив,ПараметрыОтображения,РасчетИтога = Ложь)
	
	СуммаУдержания = 0;
	
	ПоискСотрудника = Новый Структура;   
	Если НЕ РасчетИтога Тогда
		ПоискСотрудника.Вставить("Сотрудник",ПараметрыОтображения.ВедомостьСтрока.Сотрудник);	
		УдержанияСводМассив = ПараметрыОтображения.ИсходныеДанные.УдержанияТаблица.НайтиСтроки(ПоискСотрудника);
	Иначе
		УдержанияСводМассив = ПараметрыОтображения.ИсходныеДанные.УдержанияТаблица;	
	КонецЕсли;
	
	Для каждого УдержанияСводЭлемент Из УдержанияСводМассив Цикл
		
		Для каждого УдержаниеЭлемент Из УдержанияМассив Цикл                    

			Если УдержанияСводЭлемент.Удержание = УдержаниеЭлемент Тогда
				СуммаУдержания = СуммаУдержания + УдержанияСводЭлемент.СуммаУдержания;		
			КонецЕсли;
		
		КонецЦикла;
        		
	КонецЦикла; 
	
    Возврат СуммаУдержания;
	
КонецФункции
   
Функция ПолучитьСводнуюТаблицуПоУдержаниям(Сотрудник,ТаблицаПрочихУдержаний)

	ПрочиеУдержанияСвод = Новый ТаблицаЗначений;
	ПрочиеУдержанияСвод.Колонки.Вставить("НачислениеУдержание");
	ПрочиеУдержанияСвод.Колонки.Вставить("Сумма");

    // Выделение прочих начислений, для вывода в таблицу:
	ПоискЗначения = Новый Структура;
	ПоискЗначения.Вставить("Сотрудник",Сотрудник);	             
	
	ПрочиеУдержанияМассив = ТаблицаПрочихУдержаний.НайтиСтроки(ПоискЗначения);

	Для каждого ПрочиеУдержанияСтрока Из ПрочиеУдержанияМассив Цикл
		
		ПрочиеУдержанияСводСтрока = ПрочиеУдержанияСвод.Добавить();
		
		ПрочиеУдержанияСводСтрока.НачислениеУдержание = ПланыВидовРасчета.инкУдержания.ПрочиеУдержания;
		Если СтрНайти(НРег(ПрочиеУдержанияСтрока.Удержание.Наименование),НРег("аванс")) > 0 Тогда
			ПрочиеУдержанияСводСтрока.НачислениеУдержание = ПланыВидовРасчета.инкУдержания.Аванс;
		ИначеЕсли СтрНайти(НРег(ПрочиеУдержанияСтрока.Удержание.Наименование),НРег("долг")) > 0 Тогда
			ПрочиеУдержанияСводСтрока.НачислениеУдержание = ПланыВидовРасчета.инкУдержания.Долг;	
		ИначеЕсли СтрНайти(НРег(ПрочиеУдержанияСтрока.Удержание.Наименование),НРег("подарки")) > 0 Тогда
			ПрочиеУдержанияСводСтрока.НачислениеУдержание = ПланыВидовРасчета.инкУдержания.Подарки;	
		ИначеЕсли СтрНайти(НРег(ПрочиеУдержанияСтрока.Удержание.Наименование),НРег("алименты")) > 0 Тогда
			ПрочиеУдержанияСводСтрока.НачислениеУдержание = ПланыВидовРасчета.инкУдержания.Алименты;
		КонецЕсли;               
		
		ПрочиеУдержанияСводСтрока.Сумма = ПрочиеУдержанияСтрока.Сумма;
		
	КонецЦикла;
	ПрочиеУдержанияСвод.Свернуть("НачислениеУдержание","Сумма");
	
	Возврат ПрочиеУдержанияСвод;	
	
КонецФункции                    

Функция ПолучитьСуммуУдержения(Сотрудник,УдержанияЗначение,ПрочиеУдержания)
	
	СуммаУдержания = 0;
	
	ПоискЗначения = Новый Структура;
	Если Сотрудник <> Неопределено Тогда
		ПоискЗначения.Вставить("Сотрудник",Сотрудник);	             
	КонецЕсли; 
	ПоискЗначения.Вставить("Удержание",УдержанияЗначение);
	
	УдержанияМассив = ПрочиеУдержания.НайтиСтроки(ПоискЗначения);
	
	Для каждого УдержанияЭлемент Из УдержанияМассив Цикл
		СуммаУдержания = СуммаУдержания + УдержанияЭлемент.СуммаУдержания;
	КонецЦикла; 
	
	Возврат СуммаУдержания;
	
КонецФункции

#КонецОбласти

#КонецОбласти
