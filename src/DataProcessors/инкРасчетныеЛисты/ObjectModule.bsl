
#Область о // Объявление переменных

Перем СотрудникиМассив Экспорт;
Перем ДокументОбъект Экспорт; 
Перем Дата1 Экспорт; 
Перем Дата2 Экспорт; 

#КонецОбласти 

#Область о // Общие процедуры и функции:

Процедура ЗаполнитьСотрудникиМассив()
	
	Если Не ЗначениеЗаполнено(СотрудникиМассив) Тогда
		
		СотрудникиМассив = Новый Массив;
		
		Для каждого ВедомостьСтрока из ДокументОбъект.Ведомость Цикл 
			СотрудникиМассив.Добавить(ВедомостьСтрока.Сотрудник);		
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область о // Печать результатов расчета:

Функция ПолучитьТаблицуНачисленийДляОтчета()
	
	тзНачисленияСотрудника = Новый ТаблицаЗначений;
	тзНачисленияСотрудника.Колонки.Добавить("Начисление");
	тзНачисленияСотрудника.Колонки.Добавить("ОтработаноДней");
	тзНачисленияСотрудника.Колонки.Добавить("ОтработаноЧасов");
	тзНачисленияСотрудника.Колонки.Добавить("ОплаченныеДниЧасы");
	тзНачисленияСотрудника.Колонки.Добавить("СуммаНачислено");
	тзНачисленияСотрудника.Колонки.Добавить("ПорядокВОтчете");

	Возврат тзНачисленияСотрудника;
	
КонецФункции

Функция ПолучитьВсеНачисленияСотрудника(Объект = Неопределено,стрПоиск = Неопределено,ВедомостьСтрока = Неопределено,НачисленияМассив = Неопределено)
	
	тзНачисленияСотрудника = ПолучитьТаблицуНачисленийДляОтчета();
	
	// Основные начисления:
	Если ВедомостьСтрока = Неопределено Тогда
		ВедомостьМассив = Объект.Ведомость.НайтиСтроки(стрПоиск); 
		Если ВедомостьМассив.Количество() > 0 Тогда 
			ВедомостьСтрока = ВедомостьМассив[0];		
		КонецЕсли;
	КонецЕсли;
	
	Если ВедомостьСтрока <> Неопределено Тогда
		
		// Оклад:
		Если ВедомостьСтрока.Оклад <> 0 Тогда 
			стр = тзНачисленияСотрудника.Добавить();
			стр.Начисление			= ПланыВидовРасчета.инкНачисления.ОсновнаяЗарплата;
			
			Если Объект.ВидРасчетаДниЧасы = Перечисления.инкВидРасчетаДниЧасы.ВДнях Тогда
				
				стр.ОтработаноДней		= ВедомостьСтрока.ДниФакт;
				Если ВедомостьСтрока.НормаДниФакт <> 0 Тогда
					стр.ОтработаноДней	= ВедомостьСтрока.НормаДниФакт;	
				КонецЕсли;
				
			Иначе
				
				стр.ОтработаноЧасов		= ВедомостьСтрока.ЧасыФакт;
				Если ВедомостьСтрока.НормаЧасыФакт <> 0 Тогда
					стр.ОтработаноЧасов		= ВедомостьСтрока.НормаЧасыФакт;	
				КонецЕсли;
				
			КонецЕсли;
			
			
			стр.СуммаНачислено		= ВедомостьСтрока.Оклад;
			стр.ПорядокВОтчете		= 1;
		КонецЕсли;
		
		// РК:
		Если ВедомостьСтрока.РайонныйКоэффициент <> 0 Тогда 
			стр = тзНачисленияСотрудника.Добавить();
			стр.Начисление			= ПланыВидовРасчета.инкНачисления.ОсновнойРайонныйКоэффициент;
			стр.ОтработаноДней		= "";
			стр.ОтработаноЧасов		= "";
			стр.СуммаНачислено		= ВедомостьСтрока.РайонныйКоэффициент;
			стр.ПорядокВОтчете		= 2;
		КонецЕсли;
		
		// СН:
		Если ВедомостьСтрока.СевернаяНадбавка <> 0 Тогда 
			стр = тзНачисленияСотрудника.Добавить();
			стр.Начисление			= ПланыВидовРасчета.инкНачисления.ОсновнаяСевернаяНадбавка;
			стр.ОтработаноДней		= "";
			стр.ОтработаноЧасов		= "";
			стр.СуммаНачислено		= ВедомостьСтрока.СевернаяНадбавка;
			стр.ПорядокВОтчете		= 3;
		КонецЕсли;
		
	КонецЕсли;
	
	// Прочие начисления:
	Если НачисленияМассив = Неопределено Тогда
		НачисленияМассив = Объект.ПрочиеНачисления.НайтиСтроки(стрПоиск); 
	КонецЕсли;
	
	Для каждого НачислениеСтрока из НачисленияМассив Цикл
		
		Если НачислениеСтрока.Начисление = ПланыВидовРасчета.инкНачисления.ОсновнаяЗарплата ИЛИ
			 НачислениеСтрока.Начисление = ПланыВидовРасчета.инкНачисления.ОсновнойРайонныйКоэффициент ИЛИ
			 НачислениеСтрока.Начисление = ПланыВидовРасчета.инкНачисления.ОсновнаяСевернаяНадбавка
		Тогда
			Продолжить;
		КонецЕсли;  		
		
		Если НачислениеСтрока.СуммаНачисления <> 0 Тогда 
			стр = тзНачисленияСотрудника.Добавить();
			ЗаполнитьЗначенияСвойств(стр, НачислениеСтрока);
			стр.ПорядокВОтчете		= 100;
			стр.СуммаНачислено 	= НачислениеСтрока.СуммаНачисления;  
			стр.ОтработаноДней	= НачислениеСтрока.Дни;
			стр.ОтработаноЧасов = НачислениеСтрока.Часы;
		КонецЕсли;
		
	КонецЦикла;
	
	тзНачисленияСотрудника.Сортировать("ПорядокВОтчете");
	
	Возврат тзНачисленияСотрудника;
	
КонецФункции
	
Функция ПолучитьВсеУдержанияСотрудника(Объект = Неопределено,стрПоиск = Неопределено, УдержанияМассив = Неопределено, НДФЛМассив = Неопределено)
	
	тзУдержанияСотрудника = Новый ТаблицаЗначений;
	тзУдержанияСотрудника.Колонки.Добавить("Удержание");
	тзУдержанияСотрудника.Колонки.Добавить("ПериодДействияУдержаний");
	тзУдержанияСотрудника.Колонки.Добавить("СуммаУдержано");
	
	Если УдержанияМассив = Неопределено Тогда
		УдержанияМассив	= Объект.ПрочиеУдержания.НайтиСтроки(стрПоиск);
	КонецЕсли;
	Для каждого стрУдержанияСотрудника из УдержанияМассив Цикл
		стр = тзУдержанияСотрудника.Добавить();
		ЗаполнитьЗначенияСвойств(стр, стрУдержанияСотрудника);
		стр.СуммаУдержано = стрУдержанияСотрудника.СуммаУдержания;  
	КонецЦикла;
	             
	Если НДФЛМассив = Неопределено Тогда
		НДФЛМассив	= Объект.НДФЛ.НайтиСтроки(стрПоиск);
	КонецЕсли;
	
	стр = тзУдержанияСотрудника.Добавить();
	стр.Удержание = "НДФЛ";
	стр.СуммаУдержано = 0;
	Для каждого стрНДФЛ из НДФЛМассив Цикл
		стр.СуммаУдержано = стр.СуммаУдержано + стрНДФЛ.СуммаНалога;  
	КонецЦикла;
	
	Возврат тзУдержанияСотрудника;
	
КонецФункции

Функция ПолучитьНДФЛСотрудника(Объект,стрПоиск)
	
	НДФЛСотрудникаСтрока = Неопределено;
	НДФЛМассив = Объект.НДФЛ.НайтиСтроки(стрПоиск);
	
	Если НДФЛМассив.Количество() > 0 Тогда
		НДФЛСотрудникаСтрока = НДФЛМассив[0];
	КонецЕсли;
		
	Возврат НДФЛСотрудникаСтрока;
	
КонецФункции

Процедура ЗаполнитьОбластьДанными(ТекущаяОбласть,НДФЛСотрудника,ТабДок)
	
	ЗаполнитьЗначенияСвойств(ТекущаяОбласть.Параметры,НДФЛСотрудника);
	ТабДок.Вывести(ТекущаяОбласть);
	
КонецПроцедуры

Функция ПолучитьРезультатыРасчетаНаСервере()
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ_MXL_РасчетныйЛисток");
	
	Для каждого Сотрудники из СотрудникиМассив Цикл 
		
		стрПоиск = Новый Структура("Сотрудник",Сотрудники);
		ВедомостьМассив = ДокументОбъект.Ведомость.НайтиСтроки(стрПоиск);
		
		ДанныеСотрудника = Неопределено;
		Если ВедомостьМассив.Количество() <> 0 Тогда
			ДанныеСотрудника = ВедомостьМассив[0]; 	
		КонецЕсли;
		
		чВсегоНачислено = ДанныеСотрудника.ВсегоНачислено;
		чВсегоУдаржано  = ДанныеСотрудника.ВсегоУдержано;
		чКВыплате		= чВсегоНачислено - чВсегоУдаржано + ДанныеСотрудника.СальдоВходящее;
		НДФЛСотрудника 	= ПолучитьНДФЛСотрудника(ДокументОбъект,стрПоиск);
		
		облШапка1 = Макет.ПолучитьОбласть("Шапка1");
		облШапка1.Параметры.ПериодПредставление = Формат(ДокументОбъект.МесяцНачисления, "ДФ='ММММ гггг'"); 
		облШапка1.Параметры.СотрудникКод = Сотрудники.ТабельныйНомер;
		облШапка1.Параметры.ПодразделениеГоловногоСотрудникаНаКонецПериода = Сотрудники.Подразделение;
		облШапка1.Параметры.ДолжностьГоловногоСотрудникаНаКонецПериода = Сотрудники.Должность;			
		облШапка1.Параметры.ТарифнаяСтавкаНаКонецПериода = Формат(Сотрудники.Оклад,"ЧДЦ=2; ЧН=");								
		
		облШапка1.Параметры.СотрудникФизическоеЛицоФИО = Сотрудники;
		облШапка1.Параметры.Организация = ДокументОбъект.Организация;
		облШапка1.Параметры.КВыплате = чКВыплате;			
		
		Если НДФЛСотрудника <> Неопределено Тогда
			
			// Облагаемая база:
			облШапка1.Параметры.ОблагаемыйДоход		= НДФЛСотрудника.НалоговаяБазаЗаМесяц;
			
			// Вычеты:
			облШапка1.Параметры.ВычетНаФизлицо		= Формат(НДФЛСотрудника.СтандартныеВычетыНаРаботникаЗаМесяц,"ЧДЦ=0; ЧН=");
			облШапка1.Параметры.ВычетНаДетей        = Формат(НДФЛСотрудника.СтандартныеВычетыНаДетейЗаМесяц,"ЧДЦ=0; ЧН=");
			облШапка1.Параметры.ВычетИмущественный  = Формат(НДФЛСотрудника.ИмущественныйВычетЗаМесяц,"ЧДЦ=0; ЧН=");
			облШапка1.Параметры.ВычетСоциальный     = Формат(НДФЛСотрудника.СоциальныеВычетыЗаМесяц,"ЧДЦ=0; ЧН="); 
			
		КонецЕсли;	
			
		ТабДок.Вывести(облШапка1);
		
		облШапка2 = Макет.ПолучитьОбласть("Шапка2");
		ТабДок.Вывести(облШапка2);
		
		облНачисленоУдержано = Макет.ПолучитьОбласть("НачисленоУдержано");
		ТабДок.Вывести(облНачисленоУдержано);
		
		облСтрокаДвижений = Макет.ПолучитьОбласть("СтрокаДвижений"); 
		
		тзНачисленияСотрудника    = ПолучитьВсеНачисленияСотрудника(ДокументОбъект,стрПоиск);
		тзУдержанияСотрудника     = ПолучитьВсеУдержанияСотрудника(ДокументОбъект,стрПоиск);

		чВсегоНачислено			  = тзНачисленияСотрудника.Итог("СуммаНачислено");
		чВсегоУдаржано			  =	тзУдержанияСотрудника.Итог("СуммаУдержано");
        
        ВывестиСальдоВходящее(ДанныеСотрудника.СальдоВходящее,облСтрокаДвижений,ТабДок);
        
		чМаксСтрок = Макс(тзНачисленияСотрудника.Количество(),тзУдержанияСотрудника.Количество());
		
		Для Индекс = 0 По чМаксСтрок - 1 Цикл
			//				
			облСтрокаДвижений.Параметры.Начисление = "";	
			облСтрокаДвижений.Параметры.ПериодДействияНачислений = ""; 		
			облСтрокаДвижений.Параметры.ОтработаноДней = "";	
			облСтрокаДвижений.Параметры.ОтработаноЧасов = "";	
			облСтрокаДвижений.Параметры.СуммаНачислено = "";		
			облСтрокаДвижений.Параметры.Удержание = "";			
			облСтрокаДвижений.Параметры.ПериодДействияУдержаний = "";		
			облСтрокаДвижений.Параметры.СуммаУдержано = "";		
			//
			Если Индекс <= (тзНачисленияСотрудника.Количество()-1) Тогда
				ЗаполнитьЗначенияСвойств(облСтрокаДвижений.Параметры,тзНачисленияСотрудника[Индекс]);	
				облСтрокаДвижений.Параметры.СуммаНачислено = Формат(облСтрокаДвижений.Параметры.СуммаНачислено,"ЧДЦ=2; ЧН=");	
			КонецЕсли;
			//
			Если Индекс <= (тзУдержанияСотрудника.Количество()-1) Тогда
				ЗаполнитьЗначенияСвойств(облСтрокаДвижений.Параметры,тзУдержанияСотрудника[Индекс]);
				Если облСтрокаДвижений.Параметры.Удержание = "НДФЛ" Тогда
					облСтрокаДвижений.Параметры.СуммаУдержано = Формат(НДФЛСотрудника.СуммаНалога,"ЧДЦ=0; ЧН="); 	
				КонецЕсли;
			КонецЕсли;
			//
			ТабДок.Вывести(облСтрокаДвижений);
        КонецЦикла;
        
        ВывестиСальдоИсходящее(ДанныеСотрудника.СальдоИсходящее,облСтрокаДвижений,ТабДок);
        
		облИтог12 = Макет.ПолучитьОбласть("Итог12"); 
		облИтог12.Параметры.СуммаНачисления	= чВсегоНачислено;
		облИтог12.Параметры.СуммаУдержания	= чВсегоУдаржано;
		ТабДок.Вывести(облИтог12);
        
        Если ДанныеСотрудника.СальдоВходящее<>0 ИЛИ ДанныеСотрудника.СальдоИсходящее<>0 Тогда
            облВидыВыплатНеВходящиеВСуммуНаРуки = Макет.ПолучитьОбласть("ВидыВыплатНеВходящиеВСуммуНаРуки"); 
            ТабДок.Вывести(облВидыВыплатНеВходящиеВСуммуНаРуки);
        КонецЕсли; 

		ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("РазделительСтроки"),НДФЛСотрудника,ТабДок);
        
		Если НДФЛСотрудника <> Неопределено Тогда
			
			Если НДФЛСотрудника.ОблагаемыйДоходСНачалаГода > 0 Тогда
				ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("СовокупныйОблагаемыйДоход"),НДФЛСотрудника,ТабДок);
				ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("РазделительСтроки"),НДФЛСотрудника,ТабДок);
			КонецЕсли;	
			
			Если НДФЛСотрудника.СоциальныеВычетыСНачалаГода > 0 Тогда
				ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("НалоговыеВычеты"),НДФЛСотрудника,ТабДок);
			КонецЕсли;
			
			Если НДФЛСотрудника.СтандартныеВычетыНаРаботникаСНачалаГода > 0 Тогда 
				ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("СтандартныеВычетыНаРаботника"),НДФЛСотрудника,ТабДок);
			КонецЕсли;
			
			Если НДФЛСотрудника.СтандартныеВычетыНаДетейСНачалаГода > 0 Тогда
				ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("СтандартныеВычетыНаДетей"),НДФЛСотрудника,ТабДок);
			КонецЕсли;
			
			Если НДФЛСотрудника.ИмущественныйВычетСНачалаГода > 0 Тогда
				ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("ИмущественныйВычет"),НДФЛСотрудника,ТабДок);
			КонецЕсли;
			
			ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("НалоговаяБазаЗаМесяц"),НДФЛСотрудника,ТабДок);
			ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("РазделительСтроки"),НДФЛСотрудника,ТабДок);
			ЗаполнитьОбластьДанными(Макет.ПолучитьОбласть("РасчетНалога"),НДФЛСотрудника,ТабДок);
			
		КонецЕсли;	
			
		ТабДок.ВывестиВертикальныйРазделительСтраниц();
		
	КонецЦикла;

	инкОтчетыСервер.УстановитьНастройкиМаштабаДокумента(ТабДок);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьРезультатРасчета() Экспорт
	
	ЗаполнитьСотрудникиМассив();

	ТабличныйДокумент = ПолучитьРезультатыРасчетаНаСервере();
	
	Возврат ТабличныйДокумент; 
	
КонецФункции

#КонецОбласти

#Область о // Печать расчетных листков:

Функция ПолучитьВедомостиСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкВедомостиОбороты.Период КАК МесяцНачисления,
		|	МЕСЯЦ(инкВедомостиОбороты.Период) КАК МесяцНомер,
		|	инкВедомостиОбороты.Сотрудник КАК Сотрудник,
		|	инкВедомостиОбороты.Сотрудник.Оклад КАК СотрудникОклад,
		|	инкВедомостиОбороты.Сотрудник.Должность КАК Должность,
		|	инкВедомостиОбороты.Сотрудник.ТабельныйНомер КАК ТабельныйНомер,
		|	инкВедомостиОбороты.Подразделение КАК Подразделение,
		|	инкВедомостиОбороты.Организация КАК Организация,
		|	инкВедомостиОбороты.ОблагаемыйДоходОборот КАК ОблагаемыйДоход,
		|	инкВедомостиОбороты.ОкладОборот КАК Оклад,
		|	инкВедомостиОбороты.ВычетСтандартныйОборот КАК ВычетСтандартный,
		|	инкВедомостиОбороты.ВычетНаДетейОборот КАК ВычетНаДетей,
		|	инкВедомостиОбороты.ВычетИмущественныйОборот КАК ВычетИмущественный,
		|	инкВедомостиОбороты.ВычетСоциальныйОборот КАК ВычетСоциальный,
		|	инкВедомостиОбороты.ВсегоНачисленоОборот КАК ВсегоНачислено,
		|	инкВедомостиОбороты.ВсегоУдержаноОборот КАК ВсегоУдержано,
		|	инкВедомостиОбороты.ВсегоНачисленоОборот - инкВедомостиОбороты.ВсегоУдержаноОборот + инкВедомостиОбороты.СальдоВходящееОборот КАК КВыплате,
		|	ВЫБОР
		|		КОГДА инкВедомостиОбороты.НормаДниФактОборот = 0
		|			ТОГДА инкВедомостиОбороты.ДниФактОборот
		|		ИНАЧЕ инкВедомостиОбороты.НормаДниФактОборот
		|	КОНЕЦ КАК ДниФакт,
		|	ВЫБОР
		|		КОГДА инкВедомостиОбороты.НормаЧасыФактОборот = 0
		|			ТОГДА инкВедомостиОбороты.ЧасыФактОборот
		|		ИНАЧЕ инкВедомостиОбороты.НормаЧасыФактОборот
		|	КОНЕЦ КАК ЧасыФакт,
		|	инкВедомостиОбороты.РайонныйКоэффициентОборот КАК РайонныйКоэффициент,
		|	инкВедомостиОбороты.СевернаяНадбавкаОборот КАК СевернаяНадбавка,
		|	инкВедомостиОбороты.НалоговаяБазаОборот КАК НалоговаяБаза,
		|	инкВедомостиОбороты.СальдоВходящееОборот КАК СальдоВходящее,
		|	инкВедомостиОбороты.СальдоИсходящееОборот КАК СальдоИсходящее
		|ИЗ
		|	РегистрНакопления.инкВедомости.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкВедомостиОбороты";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	РезультатЗапросаТаблица.Индексы.Добавить("Сотрудник");
	
	Возврат РезультатЗапросаТаблица; 
	
КонецФункции

Функция ПолучитьДанныеПоНачислениямСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНачисленияОбороты.Период КАК МесяцНачисления,
		|	МЕСЯЦ(инкНачисленияОбороты.Период) КАК МесяцНомер,
		|	инкНачисленияОбороты.Сотрудник КАК Сотрудник,
		|	инкНачисленияОбороты.Начисление КАК Начисление,
		|	инкНачисленияОбороты.СуммаНачисленияОборот КАК СуммаНачисления,
		|	инкНачисленияОбороты.ДниФактОборот КАК ОтработаноДней,
		|	инкНачисленияОбороты.ЧасыФактОборот КАК ОтработаноЧасов
		|ИЗ
		|	РегистрНакопления.инкНачисления.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкНачисленияОбороты";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	РезультатЗапросаТаблица.Индексы.Добавить("Сотрудник");
	
	Возврат РезультатЗапросаТаблица; 
	
КонецФункции

Функция ПолучитьДанныеПоУдержаниямСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкУдержанияОбороты.Период КАК МесяцНачисления,
		|	МЕСЯЦ(инкУдержанияОбороты.Период) КАК МесяцНомер,
		|	инкУдержанияОбороты.Сотрудник КАК Сотрудник,
		|	инкУдержанияОбороты.Удержание КАК Удержание,
		|	инкУдержанияОбороты.СуммаУдержанияОборот КАК СуммаУдержания
		|ИЗ
		|	РегистрНакопления.инкУдержания.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкУдержанияОбороты";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	РезультатЗапросаТаблица.Индексы.Добавить("Сотрудник");
	
	Возврат РезультатЗапросаТаблица; 
	
КонецФункции

Функция ПолучитьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНалогУдержанныйОбороты.Период КАК МесяцНачисления,
		|	МЕСЯЦ(инкНалогУдержанныйОбороты.Период) КАК МесяцНомер,
		|	инкНалогУдержанныйОбороты.Сотрудник КАК Сотрудник,
		|	инкНалогУдержанныйОбороты.СуммаНалогаОборот КАК СуммаНалога
		|ИЗ
		|	РегистрНакопления.инкНалогУдержанный.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкНалогУдержанныйОбороты";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	РезультатЗапросаТаблица.Индексы.Добавить("Сотрудник");
	
	Возврат РезультатЗапросаТаблица; 
	
КонецФункции

Функция ПолучитьНалогУдержанный()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНалогУдержанныйОбороты.Период КАК МесяцНачисления,
		|	МЕСЯЦ(инкНалогУдержанныйОбороты.Период) КАК МесяцНомер,
		|	инкНалогУдержанныйОбороты.Сотрудник КАК Сотрудник,
		|	инкНалогУдержанныйОбороты.СуммаНалогаОборот КАК СуммаНалога
		|ИЗ
		|	РегистрНакопления.инкНалогУдержанный.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкНалогУдержанныйОбороты";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", СотрудникиМассив);
	
	РезультатЗапросаТаблица = Запрос.Выполнить().Выгрузить();
	РезультатЗапросаТаблица.Индексы.Добавить("Сотрудник");
	
	Возврат РезультатЗапросаТаблица; 
	
КонецФункции

Функция ПолучитьРасчетныеЛисткиНаСервере()

	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ_MXL_РасчетныйЛисток");
	ВедомостиТаблица = ПолучитьВедомостиСотрудников();
	НачисленияТаблица = ПолучитьДанныеПоНачислениямСотрудников();
	УдержанияТаблица = ПолучитьДанныеПоУдержаниямСотрудников();
	НДФЛТаблица = ПолучитьНДФЛ();
	
	Месяц1 = Месяц(Дата1); 
	Месяц2 = Месяц(Дата2);
	
	Для МесяцТекущий = Месяц1 По Месяц2 Цикл
		
		ПоискМесяц = Новый Структура;
		ПоискМесяц.Вставить("МесяцНомер",МесяцТекущий);
		ВедомостиМассив = ВедомостиТаблица.НайтиСтроки(ПоискМесяц);
		
		Для каждого ВедомостьСотрудник из ВедомостиМассив Цикл 
			
			ПоискСотрудник = Новый Структура;
			ПоискСотрудник.Вставить("Сотрудник",ВедомостьСотрудник.Сотрудник);
			ПоискСотрудник.Вставить("МесяцНомер",МесяцТекущий);
			
			НачисленияМассив = НачисленияТаблица.НайтиСтроки(ПоискСотрудник);
			УдержанияМассив = УдержанияТаблица.НайтиСтроки(ПоискСотрудник);
			НДФЛМассив = НДФЛТаблица.НайтиСтроки(ПоискСотрудник);
			
			чВсегоНачислено = ВедомостьСотрудник.ВсегоНачислено;
			чВсегоУдаржано  = ВедомостьСотрудник.ВсегоУдержано;
			чКВыплате		= ВедомостьСотрудник.КВыплате;
			
			облШапка1 = Макет.ПолучитьОбласть("Шапка1");
			облШапка1.Параметры.ПериодПредставление = Формат(ВедомостьСотрудник.МесяцНачисления, "ДФ='ММММ гггг'"); 
			облШапка1.Параметры.СотрудникКод = ВедомостьСотрудник.ТабельныйНомер;
			облШапка1.Параметры.ПодразделениеГоловногоСотрудникаНаКонецПериода = ВедомостьСотрудник.Подразделение;
			облШапка1.Параметры.ДолжностьГоловногоСотрудникаНаКонецПериода = ВедомостьСотрудник.Должность;			
			облШапка1.Параметры.ТарифнаяСтавкаНаКонецПериода = Формат(ВедомостьСотрудник.СотрудникОклад,"ЧДЦ=2; ЧН=");								
			
			облШапка1.Параметры.СотрудникФизическоеЛицоФИО = ВедомостьСотрудник.Сотрудник;
			облШапка1.Параметры.Организация = ВедомостьСотрудник.Организация;
			//облШапка1.Параметры.ПодразделениеГоловногоСотрудникаНаКонецПериода = ;
			//облШапка1.Параметры.ДолжностьГоловногоСотрудникаНаКонецПериода = ;
			//облШапка1.Параметры.ТарифнаяСтавкаНаКонецПериода = ;
			облШапка1.Параметры.КВыплате = ВедомостьСотрудник.КВыплате;			
			
			// Облагаемый доход:
			//облШапка1.Параметры.ОблагаемыйДоход		= ВедомостьСотрудник.ОблагаемыйДоход;
			// Налоговая база:
			облШапка1.Параметры.ОблагаемыйДоход		= ВедомостьСотрудник.НалоговаяБаза;
			
			// Вычеты:
			облШапка1.Параметры.ВычетНаФизлицо		= Формат(ВедомостьСотрудник.ВычетСтандартный,"ЧДЦ=0; ЧН=");
			облШапка1.Параметры.ВычетНаДетей        = Формат(ВедомостьСотрудник.ВычетНаДетей,"ЧДЦ=0; ЧН=");
			облШапка1.Параметры.ВычетИмущественный  = Формат(ВедомостьСотрудник.ВычетИмущественный,"ЧДЦ=0; ЧН=");
			облШапка1.Параметры.ВычетСоциальный     = Формат(ВедомостьСотрудник.ВычетСоциальный,"ЧДЦ=0; ЧН="); 
				
			ТабДок.Вывести(облШапка1);
			
			//
			
			облШапка2 = Макет.ПолучитьОбласть("Шапка2");
			ТабДок.Вывести(облШапка2);
			
			облНачисленоУдержано = Макет.ПолучитьОбласть("НачисленоУдержано");
			ТабДок.Вывести(облНачисленоУдержано);
			
			облСтрокаДвижений = Макет.ПолучитьОбласть("СтрокаДвижений"); 
			
			тзНачисленияСотрудника    = ПолучитьВсеНачисленияСотрудника(,,ВедомостьСотрудник,НачисленияМассив);
			тзУдержанияСотрудника     = ПолучитьВсеУдержанияСотрудника(,,УдержанияМассив,НДФЛМассив);

			чВсегоНачислено			  = тзНачисленияСотрудника.Итог("СуммаНачислено");
			чВсегоУдаржано			  =	тзУдержанияСотрудника.Итог("СуммаУдержано");
            
            ВывестиСальдоВходящее(ВедомостьСотрудник.СальдоВходящее,облСтрокаДвижений,ТабДок);
            
			чМаксСтрок = Макс(тзНачисленияСотрудника.Количество(),тзУдержанияСотрудника.Количество());
			Для Индекс = 0 По чМаксСтрок - 1 Цикл
				//				
                ОчиститьПараметрыСтрокиДвижений(облСтрокаДвижений);
				//
				Если Индекс <= (тзНачисленияСотрудника.Количество()-1) Тогда
					ЗаполнитьЗначенияСвойств(облСтрокаДвижений.Параметры,тзНачисленияСотрудника[Индекс]);	
				КонецЕсли;
				//
				Если Индекс <= (тзУдержанияСотрудника.Количество()-1) Тогда
					ЗаполнитьЗначенияСвойств(облСтрокаДвижений.Параметры,тзУдержанияСотрудника[Индекс]);
					Если облСтрокаДвижений.Параметры.Удержание = "НДФЛ" Тогда
						облСтрокаДвижений.Параметры.СуммаУдержано = Формат(тзУдержанияСотрудника[Индекс].СуммаУдержано,"ЧДЦ=0; ЧН="); 	
					КонецЕсли;
				КонецЕсли;
				//
				ТабДок.Вывести(облСтрокаДвижений);
            КонецЦикла;
            
            ВывестиСальдоИсходящее(ВедомостьСотрудник.СальдоИсходящее,облСтрокаДвижений,ТабДок);
            
			облИтог12 = Макет.ПолучитьОбласть("Итог12"); 
			облИтог12.Параметры.СуммаНачисления	= чВсегоНачислено;
			облИтог12.Параметры.СуммаУдержания	= чВсегоУдаржано;
			ТабДок.Вывести(облИтог12);
			
			ТабДок.ВывестиВертикальныйРазделительСтраниц();
			
		КонецЦикла;
		
	КонецЦикла;;

	инкОтчетыСервер.УстановитьНастройкиМаштабаДокумента(ТабДок);
	
	Возврат ТабДок;

КонецФункции

Процедура ВывестиСальдоВходящее(СальдоВходящее,облСтрокаДвижений,ТабДок)
    
    Если СальдоВходящее <> 0 Тогда
        ОчиститьПараметрыСтрокиДвижений(облСтрокаДвижений);
        облСтрокаДвижений.Параметры.Начисление = "*Сальдо входящее:";
        облСтрокаДвижений.Параметры.СуммаНачислено = СальдоВходящее;   
        ТабДок.Вывести(облСтрокаДвижений);
    КонецЕсли; 
		
КонецПроцедуры     

Процедура ВывестиСальдоИсходящее(СальдоИсходящее,облСтрокаДвижений,ТабДок)
    
    Если СальдоИсходящее <> 0 Тогда
        ОчиститьПараметрыСтрокиДвижений(облСтрокаДвижений);
        облСтрокаДвижений.Параметры.Удержание = "*Сальдо исходящее:";
        облСтрокаДвижений.Параметры.СуммаУдержано = СальдоИсходящее;   
        ТабДок.Вывести(облСтрокаДвижений);
    КонецЕсли; 
		
КонецПроцедуры     

Процедура ОчиститьПараметрыСтрокиДвижений(облСтрокаДвижений)

    облСтрокаДвижений.Параметры.Начисление = "";	
    облСтрокаДвижений.Параметры.ПериодДействияНачислений = ""; 		
    облСтрокаДвижений.Параметры.ОтработаноДней = "";	
    облСтрокаДвижений.Параметры.ОтработаноЧасов = "";	
    облСтрокаДвижений.Параметры.СуммаНачислено = "";		
    облСтрокаДвижений.Параметры.Удержание = "";			
    облСтрокаДвижений.Параметры.ПериодДействияУдержаний = "";		
    облСтрокаДвижений.Параметры.СуммаУдержано = "";		
		
КонецПроцедуры

Функция ПолучитьРасчетныеЛистки() Экспорт
	
	ЗаполнитьСотрудникиМассив();
	
	ТабличныйДокумент = ПолучитьРасчетныеЛисткиНаСервере();
	
	Возврат ТабличныйДокумент; 
	
КонецФункции

#КонецОбласти
