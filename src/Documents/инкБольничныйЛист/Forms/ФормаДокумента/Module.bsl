
#Область о // Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    ПервоначальноеЗаполнениеНаСервере(Отказ, Параметры);
	
КонецПроцедуры    

&НаСервере
Процедура ПервоначальноеЗаполнениеНаСервере(Отказ, Параметры)
	
	ЗаполнитьРеквизитИзПараметров("Организация",Параметры);
	ЗаполнитьРеквизитИзПараметров("Подразделение",Параметры);
	ЗаполнитьРеквизитИзПараметров("Сотрудник",Параметры);
	
	ЗаполнитьРеквизитИзПараметров("МесяцНачисления",Параметры);
	мМесяцНачисленияСтрокой  = инкЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(Объект.МесяцНачисления);

	
	ЗаполнитьРеквизит("ВидПособия",Перечисления.инкВидыПособий.ПособиеПоВременнойНетрудоспособности);
	ЗаполнитьРеквизит("ВидПособияЗаСчетРаботодателя",Перечисления.инкВидыПособий.ПособиеПоВременнойНетрудоспособностиЗаСчетРаботодателя);
	ЗаполнитьРеквизит("ПроцентОплаты",100);
	
	ЗаполнитьРасчетныеДанныеНаСервере();
	
КонецПроцедуры                              

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если мПомещатьРасчетВХранилище Тогда
		Закрыть(ПоместитьИзмененныеДанныеВоВременноеХранилище());
	Иначе
		Закрыть();
	КонецЕсли;
    	                              	
КонецПроцедуры

&НаКлиенте
Процедура БольничныйДатаНачалаПриИзменении(Элемент)
	РасчитатьКоличествоДней();
КонецПроцедуры

&НаКлиенте
Процедура БольничныйДатаОкончанияПриИзменении(Элемент)
	РасчитатьКоличествоДней();
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьНачисления(Команда)
	ЗаполнитьРасчетныеДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура БольничныйЛистРезультатРасчета(Команда)

	ТабличныйДокумент = ПолучитьТабличныйДокументНаСервере();
	инкОтчетыКлиент.ПечатьТабличногоДокумента(ТабличныйДокумент,"Больничный лист",ЭтаФорма);

КонецПроцедуры                                             

&НаСервере
Функция ПолучитьТабличныйДокументНаСервере()
	
	ТабличныйДокумент = Документы.инкБольничныйЛист.СформироватьБольничныйЛистРезультатРасчетаТабличныйДокумент(Объект);
	Возврат ТабличныйДокумент; 
	
КонецФункции                                

&НаКлиенте
Процедура РасчетныеДанныеПриИзменении(Элемент)
	ОбновлениеРасчетныхДанныхНаСервере();	
КонецПроцедуры           

#КонецОбласти	                        

#Область о // Исходные данные:

&НаСервере
Функция ПолучитьИсходныеДанные()
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("МесяцНачисления",Объект.МесяцНачисления);
	ИсходныеДанные.Вставить("Дата2",НачалоГода(Объект.МесяцНачисления)-1);
	ИсходныеДанные.Вставить("Дата1",НачалоГода(НачалоГода(ИсходныеДанные.Дата2) - 1));
	ИсходныеДанные.Вставить("Сотрудник",Объект.Сотрудник);
	ИсходныеДанные.Вставить("НачисленияБольничныеТаблица",ПолучитьНачисленияБольничныеТаблица(ИсходныеДанные));
	ИсходныеДанные.Вставить("ВедомостьНормаВремениТаблица",инкУчетВремениСервер.ПолучитьНормуВремениИзВедомости(ИсходныеДанные));

	Возврат ИсходныеДанные;	
	
КонецФункции 

&НаСервере
Функция ПолучитьНачисленияБольничныеТаблица(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНачисленияОбороты.Период КАК Месяц,
		|	инкНачисленияОбороты.Начисление КАК Начисление,
		|	инкНачисленияОбороты.Сотрудник КАК Сотрудник,
		|	инкНачисленияОбороты.Начисление.Премия КАК Премия,
		|	инкНачисленияОбороты.СуммаНачисленияОборот КАК Сумма
		|ИЗ
		|	РегистрНакопления.инкНачисления.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			Месяц,
		|			Сотрудник = &Сотрудник
		|				И БольничныйЛист) КАК инкНачисленияОбороты";
	
	                                                      
	Запрос.УстановитьПараметр("Дата1", ИсходныеДанные.Дата1);
	Запрос.УстановитьПараметр("Дата2", ИсходныеДанные.Дата2);
	Запрос.УстановитьПараметр("Сотрудник", ИсходныеДанные.Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;	
	
КонецФункции                                            

#КонецОбласти	                        

#Область о // Дополнительные процедуры и функции:

&НаСервере
Процедура ОбновлениеРасчетныхДанныхНаСервере()

	Для каждого РасчетныеДанныеСтрока Из Объект.РасчетныеДанные Цикл
		РасчетныеДанныеСтрока.Итого = РасчетныеДанныеСтрока.ПремииГод +
		                              РасчетныеДанныеСтрока.ПремииКвартал +
		                              РасчетныеДанныеСтрока.ПремииМесяц +
		                              РасчетныеДанныеСтрока.Зарплата;
		
	КонецЦикла;	
	                                   
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьКоличествоДней()
	
	Если Не ЗначениеЗаполнено(Объект.БольничныйДатаОкончания) Тогда
		Объект.БольничныйДатаОкончания = Объект.БольничныйДатаНачала;
	КонецЕсли;
	Объект.КоличествоДней = (НачалоДня(Объект.БольничныйДатаОкончания) - НачалоДня(Объект.БольничныйДатаНачала)) / (60 * 60 * 24) + 1;
	
КонецПроцедуры
                                   
&НаСервере
Процедура ЗаполнитьРасчетныеДанныеНаСервере()
	
	Если Объект.РасчетныеДанные.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ИсходныеДанные = ПолучитьИсходныеДанные();
    
	Объект.РасчетныеДанные.Очистить();
	ТекущийМесяцДата = ИсходныеДанные.Дата1;
	Для МесяцНомер = 1 По 24 Цикл
		
		РасчетныеДанныеСтрока = Объект.РасчетныеДанные.Добавить();
		РасчетныеДанныеСтрока.Год = Год(ТекущийМесяцДата);
		РасчетныеДанныеСтрока.Месяц = ТекущийМесяцДата;
		
		ПоискПериод = Новый Структура("Месяц",ТекущийМесяцДата);
		НачисленияБольничныеМассив = ИсходныеДанные.НачисленияБольничныеТаблица.НайтиСтроки(ПоискПериод);
		Для каждого НачисленияБольничныеЭлемент Из НачисленияБольничныеМассив Цикл
			
			Если НачисленияБольничныеЭлемент.Премия = Перечисления.инкВидыПремий.Месяц Тогда
				РасчетныеДанныеСтрока.ПремииМесяц = РасчетныеДанныеСтрока.ПремииМесяц 
				                                  + НачисленияБольничныеЭлемент.Сумма;
			ИначеЕсли НачисленияБольничныеЭлемент.Премия = Перечисления.инкВидыПремий.Квартальная Тогда
				РасчетныеДанныеСтрока.ПремииКвартал = РасчетныеДанныеСтрока.ПремииКвартал
				                                    + НачисленияБольничныеЭлемент.Сумма; 
			ИначеЕсли НачисленияБольничныеЭлемент.Премия = Перечисления.инкВидыПремий.Годовая Тогда
				РасчетныеДанныеСтрока.ПремииГод = РасчетныеДанныеСтрока.ПремииГод
				                                + НачисленияБольничныеЭлемент.Сумма; 
			Иначе            
				РасчетныеДанныеСтрока.Зарплата = РасчетныеДанныеСтрока.Зарплата 
				                               + НачисленияБольничныеЭлемент.Сумма;					
			КонецЕсли;
						
		КонецЦикла; 

		//Если РасчетныеДанныеСтрока.КоличествоДнейЧасовНорма = 0 Тогда
		//	РасчетныеДанныеСтрока.КоличествоДнейЧасовНорма = День(КонецМесяца(ТекущийМесяцДата));   
		//КонецЕсли;	
		//Если РасчетныеДанныеСтрока.КоличествоДнейЧасовФакт = 0 Тогда
		//	РасчетныеДанныеСтрока.КоличествоДнейЧасовФакт = День(КонецМесяца(ТекущийМесяцДата));   
		//КонецЕсли;	

		НормаВремениСтруктура = ПолучитьНормуВремениСтруктура(ИсходныеДанные,ПоискПериод);
		РасчетныеДанныеСтрока.КоличествоДнейЧасовНорма	= НормаВремениСтруктура.ДниЧасы;	
		РасчетныеДанныеСтрока.КоличествоДнейЧасовФакт	= НормаВремениСтруктура.ДниЧасыФакт;
		
		ТекущийМесяцДата = ДобавитьМесяц(ТекущийМесяцДата,1);	
		
	КонецЦикла;
	
	ОбновлениеРасчетныхДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНормуВремениСтруктура(ИсходныеДанные,ПоискПериод)
	
	НормаВремени = Новый Структура;
	НормаВремени.Вставить("ДниЧасы",0);
	НормаВремени.Вставить("ДниЧасыФакт",0);
	
	ВедомостьНормаВремениМассив = ИсходныеДанные.ВедомостьНормаВремениТаблица.НайтиСтроки(ПоискПериод);
	Для каждого ВедомостьНормаВремени Из ВедомостьНормаВремениМассив Цикл

		// ДниЧасы:
		Если ВедомостьНормаВремени.Дни <> 0 Тогда
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.Дни;
		ИначеЕсли ВедомостьНормаВремени.Часы <> 0 Тогда
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.Часы;
		ИначеЕсли ВедомостьНормаВремени.НормаДни <> 0 Тогда  
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.НормаДни;
		ИначеЕсли ВедомостьНормаВремени.НормаЧасы <> 0 Тогда  
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.НормаЧасы;
		КонецЕсли; 
		
		// ДниЧасыФакт:
		Если ВедомостьНормаВремени.ДниФакт <> 0 Тогда
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.ДниФакт;
		ИначеЕсли ВедомостьНормаВремени.ЧасыФакт <> 0 Тогда
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.ЧасыФакт;
		ИначеЕсли ВедомостьНормаВремени.НормаДниФакт <> 0 Тогда  
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.НормаДниФакт;
		ИначеЕсли ВедомостьНормаВремени.НормаЧасыФакт <> 0 Тогда  
			НормаВремени.ДниЧасы = ВедомостьНормаВремени.НормаЧасыФакт;
		КонецЕсли; 

	КонецЦикла; 
	
	Если НормаВремени.ДниЧасы = 0 Тогда
		НормаВремени.ДниЧасы = День(КонецМесяца(ПоискПериод.Месяц));			
	КонецЕсли;
	
	Возврат НормаВремени;
	
КонецФункции


&НаСервере
Процедура ЗаполнитьРеквизит(ИмяСвойства,Значение)
	
	Если ЗначениеЗаполнено(Объект[ИмяСвойства]) Тогда
		Возврат;	
	КонецЕсли;	

	Объект[ИмяСвойства] = Значение;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитИзПараметров(ИмяСвойства,Параметры)
	
	Если Параметры.Свойство(ИмяСвойства) Тогда
		ЗаполнитьРеквизит(ИмяСвойства,Параметры[ИмяСвойства]);    
		мПомещатьРасчетВХранилище = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПоместитьИзмененныеДанныеВоВременноеХранилище()
	
	ВозвращаемыеСведения = Новый Структура;             
	ВозвращаемыеСведения.Вставить("Сотрудник", Объект.Сотрудник); 
	ВозвращаемыеСведения.Вставить("тзПрочиеНачисления",Неопределено);
	ВозвращаемыеСведения.Вставить("ДокументСсылка", Неопределено); 
	
	Если Объект.Проведен Тогда
		ВозвращаемыеСведения.тзПрочиеНачисления = Объект.РезультатРасчета.Выгрузить();	
		ВозвращаемыеСведения.Вставить("ДокументСсылка", Объект.Ссылка); 
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ВозвращаемыеСведения, Новый УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти	                        

#Область о // Расчет больничного листа:

&НаКлиенте
Процедура Расчет(Команда)
	РасчитатьБольничныйНаСервере();
КонецПроцедуры

&НаСервере
Процедура РасчитатьБольничныйНаСервере()
	
	Отказ = Ложь;
	//
	РасчетБольничного = ПолучитьРасчетБольничного(Отказ);
	//                                                  
	Если Отказ Тогда
		Возврат;	
	КонецЕсли;
	
	ПояснениеРасчета = "Расчет по сотруднику "
	                 + Объект.Сотрудник.ФИОСокращенное
	                 + " на "+ТекущаяДата()+": "+Символы.ПС+Символы.ПС;
    //
	ПояснениеРасчета = ПояснениеРасчета + "За "
	                 + Формат(РасчетБольничного.ДанныеГод1.Период,"ДФ=гггг")+" год:"
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "Сумма з/пл = "
	                 + Формат(РасчетБольничного.ДанныеГод1.СуммаЗарплаты,"ЧДЦ=2; ЧН=0,00")
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "Сумма з/пл с пред. места работы = "
	                 + Формат(РасчетБольничного.ДанныеГод1.СуммаЗарплатыСПредМестаРаботы,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "Расчетная сумма за "
	                 + Формат(РасчетБольничного.ДанныеГод1.Период,"ДФ=гггг") + "г. = "
					 + Формат(РасчетБольничного.ДанныеГод1.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС + Символы.ПС;
	//
	ПояснениеРасчета = ПояснениеРасчета + "За " 
					 + Формат(РасчетБольничного.ДанныеГод2.Период,"ДФ=гггг")
	                 + " год:" 
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "Сумма з/пл = "
	                 + Формат(РасчетБольничного.ДанныеГод2.СуммаЗарплаты,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "Сумма з/пл с пред. места работы = "
	                 + Формат(РасчетБольничного.ДанныеГод2.СуммаЗарплатыСПредМестаРаботы,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "Расчетная сумма за "
	                 + Формат(РасчетБольничного.ДанныеГод2.Период,"ДФ=гггг") + "г. = " 
					 + Формат(РасчетБольничного.ДанныеГод2.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС + Символы.ПС;
	//                                         
	ПояснениеРасчета = ПояснениеРасчета + "Итого расчетная сумма: ("
	                 + Формат(РасчетБольничного.ДанныеГод1.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00") + " + " 
					 + Формат(РасчетБольничного.ДанныеГод2.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00") + ") = " 
					 + Формат(РасчетБольничного.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00"); 
	//
	ПояснениеРасчета = ПояснениеРасчета 
					 + Символы.ПС + Символы.ПС;
	//                                  
	
	ПояснениеРасчета = ПояснениеРасчета + "Расчет дневного пособия:"
	 				 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "("
					 + Формат(РасчетБольничного.ДанныеГод1.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00") + " + " 
	                 + Формат(РасчетБольничного.ДанныеГод2.РасчетнаяСумма,"ЧДЦ=2; ЧН=0,00") + ")" + " / " 
					 + РасчетБольничного.ДниЗаДваГода + " * " 
					 + РасчетБольничного.ПроцентОплаты + "% = " 
					 + Формат(РасчетБольничного.ДневноеПособиеСумма,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС;
	//                                                                               
	ПояснениеРасчета = ПояснениеРасчета + "Стоимость больничных за счет работодателя:"
	                 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "(" 
					 + Формат(РасчетБольничного.ДневноеПособиеСумма,"ЧДЦ=2; ЧН=0,00") + " * " 
					 + РасчетБольничного.ДниЗаСчетРаботодателя + ") = " 
					 + Формат(РасчетБольничного.ПособиеЗаСчетРаботодателяСумма,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС;

	//
	ПояснениеРасчета = ПояснениеРасчета + "Стоимость больничных за счет ФСС:"
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета + "(" 
					 + Формат(РасчетБольничного.ДневноеПособиеСумма,"ЧДЦ=2; ЧН=0,00") + " * " 
					 + РасчетБольничного.ДниБольничного + " - " 
					 + Формат(РасчетБольничного.ПособиеЗаСчетРаботодателяСумма,"ЧДЦ=2; ЧН=0,00") + ") = " 
					 + Формат(РасчетБольничного.ПособиеЗаСчетФСССумма,"ЧДЦ=2; ЧН=0,00") 
					 + Символы.ПС;
	 
    // 
	ПояснениеРасчета = ПояснениеРасчета + "Итого начислено:"
					 + Символы.ПС;
	ПояснениеРасчета = ПояснениеРасчета 
					 + Формат(РасчетБольничного.ИтогоНачисленоСумма,"ЧДЦ=2; ЧН=0,00");
	//				 
	
	// Расчет по МРОТ:
	Если Объект.РасчетМрот Тогда
		
		ПояснениеРасчета = ПояснениеРасчета 
		                 + Символы.ПС + Символы.ПС; 
		ПояснениеРасчета = ПояснениеРасчета + "Расчет дневного пособия c учетом МРОТ:"
					     + Символы.ПС;
	
		Если РасчетБольничного.МРОТКоличествоДнейВМесяце = 31 Тогда
			// (12792.00+12792.00*0.15)*24/730*100%= 483.64
			ПояснениеРасчета = ПояснениеРасчета 
							 + "(" 
			                 + Формат(РасчетБольничного.МРОТ,"ЧДЦ=2; ЧН=0,00") + " + "
							 + Формат(РасчетБольничного.МРОТ,"ЧДЦ=2; ЧН=0,00") + " * "
							 + Формат(РасчетБольничного.МРОТРайонныйКоэффициент,"ЧДЦ=2; ЧН=0,00") 
							 + ")*24/730"
							 + "*" + РасчетБольничного.ПроцентОплаты + "%"
							 + " = " + РасчетБольничного.МРОТДневноеПособиеСумма;  
		Иначе            
			// (12792.00+12792.00*0.15)/30=490.36
			ПояснениеРасчета = ПояснениеРасчета 
							 + "(" 
			                 + Формат(РасчетБольничного.МРОТ,"ЧДЦ=2; ЧН=0,00") + " + "
							 + Формат(РасчетБольничного.МРОТ,"ЧДЦ=2; ЧН=0,00") + " * "
							 + Формат(РасчетБольничного.МРОТРайонныйКоэффициент,"ЧДЦ=2; ЧН=0,00") 
							 + ")/" + РасчетБольничного.МРОТКоличествоДнейВМесяце
							 + " = " + РасчетБольничного.МРОТДневноеПособиеСумма;  
		КонецЕсли;
		
		ПояснениеРасчета = ПояснениеРасчета
					     + Символы.ПС;
						 
		//                                                                               
		ПояснениеРасчета = ПояснениеРасчета + "Стоимость больничных за счет работодателя:"
		                 + Символы.ПС;
		ПояснениеРасчета = ПояснениеРасчета + "(" 
						 + Формат(РасчетБольничного.МРОТДневноеПособиеСумма,"ЧДЦ=2; ЧН=0,00") + " * " 
						 + РасчетБольничного.ДниЗаСчетРаботодателя + ") = " 
						 + Формат(РасчетБольничного.МРОТПособиеЗаСчетРаботодателяСумма,"ЧДЦ=2; ЧН=0,00") 
						 + Символы.ПС;

		//
		ПояснениеРасчета = ПояснениеРасчета + "Стоимость больничных за счет ФСС:"
						 + Символы.ПС;
		ПояснениеРасчета = ПояснениеРасчета + "(" 
						 + Формат(РасчетБольничного.МРОТДневноеПособиеСумма,"ЧДЦ=2; ЧН=0,00") + " * " 
						 + РасчетБольничного.ДниБольничного + " - " 
						 + Формат(РасчетБольничного.МРОТПособиеЗаСчетРаботодателяСумма,"ЧДЦ=2; ЧН=0,00") + ") = " 
						 + Формат(РасчетБольничного.МРОТПособиеЗаСчетФСССумма,"ЧДЦ=2; ЧН=0,00") 
						 + Символы.ПС;
						 
	    // 
		ПояснениеРасчета = ПояснениеРасчета + "Итого начислено:"
						 + Символы.ПС;
		ПояснениеРасчета = ПояснениеРасчета 
						 + Формат(РасчетБольничного.МРОТИтогоНачисленоСумма,"ЧДЦ=2; ЧН=0,00");
		//				 
					 
	КонецЕсли;	
		
	//                  
	Объект.ПояснениеРасчета = ПояснениеРасчета; 
	//
	ЗаполнитьРезультатРасчета(РасчетБольничного);
	
КонецПроцедуры   

&НаСервере
Процедура ЗаполнитьРезультатРасчета(РасчетБольничного)
	
	Объект.РезультатРасчета.Очистить();
	
	// За счет работодателя:
	НачислениеСтрока = Объект.РезультатРасчета.Добавить();
	НачислениеСтрока.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеПоВремНетрудоспособностиЗаСчетРаботодателя;
	//
	Если Объект.РасчетМрот Тогда
		НачислениеСтрока.СуммаНачисления = РасчетБольничного.МРОТПособиеЗаСчетРаботодателяСумма;	
	Иначе
		НачислениеСтрока.СуммаНачисления = РасчетБольничного.ПособиеЗаСчетРаботодателяСумма;	
	КонецЕсли;
    //
	НачислениеСтрока.Дни             = РасчетБольничного.ДниЗаСчетРаботодателя;
	НачислениеСтрока.Месяц           = РасчетБольничного.МесяцБольничного;
	
	Объект.СуммаДокумента = Объект.РезультатРасчета.Итог("СуммаНачисления");
	
КонецПроцедуры
    
&НаСервере
Функция ПолучитьРасчетБольничного(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.БольничныйДатаОкончания) Тогда
		Сообщить("Внимание! Не задан период больничного листа. Расчет будет прерван.");
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	РасчетБольничного = Новый Структура;
	РасчетБольничного.Вставить("ПроцентОплаты");
	РасчетБольничного.Вставить("ДанныеГод1");
	РасчетБольничного.Вставить("ДанныеГод2");
	РасчетБольничного.Вставить("МесяцБольничного");
	//
	РасчетБольничного.Вставить("ДниЗаДваГода");
	РасчетБольничного.Вставить("ДниБольничного");
	РасчетБольничного.Вставить("ДниЗаСчетРаботодателя");
	//
	РасчетБольничного.Вставить("РасчетнаяСумма");
	РасчетБольничного.Вставить("ДневноеПособиеСумма");
	//
	РасчетБольничного.Вставить("ПособиеЗаСчетРаботодателяСумма");
	РасчетБольничного.Вставить("ПособиеЗаСчетФСССумма");
	РасчетБольничного.Вставить("ИтогоНачисленоСумма");
	//
	РасчетБольничного.ПроцентОплаты = Объект.ПроцентОплаты; 
	РасчетБольничного.МесяцБольничного = НачалоМесяца(Объект.БольничныйДатаОкончания); 
	//
	РасчетныеСуммыТаблица = ПолучитьРасчетныеСуммы();
	РасчетБольничного.ДанныеГод1 = РасчетныеСуммыТаблица[0];
	РасчетБольничного.ДанныеГод2 = РасчетныеСуммыТаблица[1];
	//
	РасчетБольничного.ДниЗаДваГода  		= РасчетБольничного.ДанныеГод1.КоличествоДнейВГоду + РасчетБольничного.ДанныеГод2.КоличествоДнейВГоду;
	РасчетБольничного.ДниБольничного  		= Объект.КоличествоДней;
	РасчетБольничного.ДниЗаСчетРаботодателя	= Объект.КоличествоДнейЗаСчетРаботодателя;
	//     
	РасчетБольничного.РасчетнаяСумма = РасчетБольничного.ДанныеГод1.РасчетнаяСумма+РасчетБольничного.ДанныеГод2.РасчетнаяСумма;
	РасчетБольничного.ДневноеПособиеСумма = РасчетБольничного.РасчетнаяСумма/РасчетБольничного.ДниЗаДваГода*РасчетБольничного.ПроцентОплаты/100;	
	//
	РасчетБольничного.ПособиеЗаСчетРаботодателяСумма 	= РасчетБольничного.ДневноеПособиеСумма * РасчетБольничного.ДниЗаСчетРаботодателя;
	РасчетБольничного.ПособиеЗаСчетФСССумма				= РасчетБольничного.ДневноеПособиеСумма * РасчетБольничного.ДниБольничного 
	                                                    - РасчетБольничного.ПособиеЗаСчетРаботодателяСумма;	
	РасчетБольничного.ИтогоНачисленоСумма				= РасчетБольничного.ПособиеЗаСчетРаботодателяСумма + РасчетБольничного.ПособиеЗаСчетФСССумма; 
	//
	
	// Расчет исходя из МРОТ:
	РасчетБольничного.Вставить("МРОТ");                     
	РасчетБольничного.Вставить("МРОТКоличествоДнейВМесяце");                     
	РасчетБольничного.Вставить("МРОТДневноеПособиеСумма");
	РасчетБольничного.Вставить("МРОТРайонныйКоэффициент");
	РасчетБольничного.Вставить("МРОТПособиеЗаСчетРаботодателяСумма");
	РасчетБольничного.Вставить("МРОТПособиеЗаСчетФСССумма");
	РасчетБольничного.Вставить("МРОТИтогоНачисленоСумма");
	//
	РасчетБольничного.Вставить("МРОТИтогоНачисленоСумма");
	Если Объект.РасчетМрот Тогда
		
		СтандартныеВычетыНастройки = инкОбщийСервер.СтандартныеВычетыНастройки(Объект.МесяцНачисления);
		РасчетБольничного.МРОТ = СтандартныеВычетыНастройки.МРОТ; 	
		РасчетБольничного.МРОТКоличествоДнейВМесяце = День(КонецМесяца(Объект.МесяцНачисления));                     
		РасчетБольничного.МРОТРайонныйКоэффициент = Объект.Сотрудник.РайонныйКоэффициент;
		
		Если РасчетБольничного.МРОТКоличествоДнейВМесяце = 31 Тогда
			РасчетБольничного.МРОТДневноеПособиеСумма = (РасчетБольничного.МРОТ + РасчетБольничного.МРОТ*РасчетБольничного.МРОТРайонныйКоэффициент)*24/РасчетБольничного.ДниЗаДваГода*(Объект.ПроцентОплаты/100);				
		Иначе   
			РасчетБольничного.МРОТДневноеПособиеСумма = (РасчетБольничного.МРОТ + РасчетБольничного.МРОТ*РасчетБольничного.МРОТРайонныйКоэффициент)/730;				
		КонецЕсли;
		
		РасчетБольничного.МРОТДневноеПособиеСумма = Окр(РасчетБольничного.МРОТДневноеПособиеСумма,2);
		РасчетБольничного.МРОТПособиеЗаСчетРаботодателяСумма = РасчетБольничного.МРОТДневноеПособиеСумма 
		                                                     * РасчетБольничного.ДниЗаСчетРаботодателя;
		РасчетБольничного.МРОТПособиеЗаСчетФСССумма          = РасчетБольничного.МРОТДневноеПособиеСумма 
		                                                     * РасчетБольничного.ДниБольничного 
	                                                         - РасчетБольничного.МРОТПособиеЗаСчетРаботодателяСумма;	
		
		РасчетБольничного.МРОТИтогоНачисленоСумма = РасчетБольничного.МРОТПособиеЗаСчетРаботодателяСумма
		                                          + РасчетБольничного.МРОТПособиеЗаСчетФСССумма;
		
	КонецЕсли;
	
	Возврат РасчетБольничного;
	
КонецФункции                  

&НаСервере
Функция ПолучитьРасчетныеСуммы()
	
	РасчетныеСуммыТаблица = Новый ТаблицаЗначений;
	РасчетныеСуммыТаблица.Колонки.Добавить("Период");
	РасчетныеСуммыТаблица.Колонки.Добавить("СуммаЗарплаты");
	РасчетныеСуммыТаблица.Колонки.Добавить("СуммаЗарплатыСПредМестаРаботы");
	РасчетныеСуммыТаблица.Колонки.Добавить("РасчетнаяСумма");
	РасчетныеСуммыТаблица.Колонки.Добавить("КоличествоДнейВГоду");
	
	ТекущийПериод = ДобавитьМесяц(НачалоГода(Объект.МесяцНачисления),-24); 
	Для Год = 1 По 2 Цикл                                            
		
		ТаблицаСтрока = РасчетныеСуммыТаблица.Добавить();
		ТаблицаСтрока.Период = ТекущийПериод; 
		ТаблицаСтрока.СуммаЗарплаты = ПолучитьСуммуЗарплаты(ТекущийПериод,Объект.РасчетныеДанные);
		ТаблицаСтрока.СуммаЗарплатыСПредМестаРаботы = ПолучитьСуммуЗарплатыСПредМестаРаботы(ТекущийПериод,Объект.Сотрудник); 
		ТаблицаСтрока.РасчетнаяСумма = ТаблицаСтрока.СуммаЗарплаты
		 							 + ТаблицаСтрока.СуммаЗарплатыСПредМестаРаботы;
		ТаблицаСтрока.КоличествоДнейВГоду = ДеньГода(КонецГода(ТекущийПериод));							 
									 
		ТекущийПериод = ДобавитьМесяц(ТекущийПериод,12);
		
	КонецЦикла;   
	
	Возврат РасчетныеСуммыТаблица;	
	
КонецФункции   

&НаСервере
Функция ПолучитьСуммуЗарплаты(ТекущийПериод,РасчетныеДанные)
	
	СуммаЗарплаты = 0;                      
	
	ПериодПоиск = Новый Структура("Год",Год(ТекущийПериод)); 
	РасчетныеДанныеМассив = РасчетныеДанные.НайтиСтроки(ПериодПоиск);
	
	Для каждого РасчетныеДанныеЭлемент Из РасчетныеДанныеМассив Цикл
		СуммаЗарплаты = СуммаЗарплаты + РасчетныеДанныеЭлемент.Итого;	
	КонецЦикла;
	           
	Возврат СуммаЗарплаты;
		
КонецФункции

&НаСервере
Функция ПолучитьСуммуЗарплатыСПредМестаРаботы(ТекущийПериод,Сотрудник)
	
	СуммаЗарплатыСПредМестаРаботы = 0;
	
	Для каждого ДоходСПредМестаРаботы Из Сотрудник.ДоходСоСтраховыхВзносов Цикл  

		Если ДоходСПредМестаРаботы.Год = ТекущийПериод Тогда
			СуммаЗарплатыСПредМестаРаботы = СуммаЗарплатыСПредМестаРаботы +	ДоходСПредМестаРаботы.ДоходСумма;	
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат СуммаЗарплатыСПредМестаРаботы;
	
КонецФункции  

&НаКлиенте
Процедура РасчетМротПриИзменении(Элемент)
	РасчитатьБольничныйНаСервере();
КонецПроцедуры

#КонецОбласти	 

#Область о // Месяц начисления:

&НаКлиенте
Процедура мМесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Элемент",Элемент);
	
    ПараметрыВыбораПериода = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(Объект.МесяцНачисления), КонецМесяца(Объект.МесяцНачисления));
	ОписаниеОповещения     = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.инкВыборСтандартногоПериодаМесяц", ПараметрыВыбораПериода, Объект.МесяцНачисления, , , , ОписаниеОповещения);

КонецПроцедуры  
       &НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 

	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
    
	Объект.МесяцНачисления = РезультатВыбора.НачалоПериода;
    инкЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "Объект.МесяцНачисления", "мМесяцНачисленияСтрокой", 0, Модифицированность);

КонецПроцедуры    

#КонецОбласти


