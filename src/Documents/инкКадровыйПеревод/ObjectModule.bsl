
#Область о //Служебные процедуры и функции:

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбновлениеИнформацииОСотруднике();
	ЗаписьДвижений_инкКадроваяИсторияСотрудников();
	ЗаписьДвижений_инкПлановыеНачисления();
	
КонецПроцедуры

#КонецОбласти	

#Область о //Дополнительные процедуры и функции:

Процедура ОбновлениеИнформацииОСотруднике()
	
	обСотрудник = ЭтотОбъект.Сотрудник.ПолучитьОбъект();
	ЗаполнитьЗначенияСвойств(обСотрудник,ЭтотОбъект);
	обСотрудник.Записать();
	
КонецПроцедуры
 
#КонецОбласти	

#Область о //Запись движений:

Процедура ЗаписьДвижений_инкКадроваяИсторияСотрудников()
	
	Движения.инкКадроваяИсторияСотрудников.Записывать = Истина;
	
	Движение = Движения.инкКадроваяИсторияСотрудников.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ЭтотОбъект);
	Движение.Период = НачалоДня(ДатаПриказа);
    Движение.ВидСобытия = Перечисления.инкВидыКадровыхСобытий.Перемещение;
	
КонецПроцедуры

Процедура ЗаписьДвижений_инкПлановыеНачисления()
	
	Движения.инкПлановыеНачисления.Записывать = Истина;
	Если ЗначениеЗаполнено(ЭтотОбъект.Оклад) Тогда
		ДобавитьНачисление(ПланыВидовРасчета.инкНачисления.Оклад, ЭтотОбъект.Оклад);
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭтотОбъект.СевернаяНадбавка) Тогда
		ДобавитьНачисление(ПланыВидовРасчета.инкНачисления.СевернаяНадбавка, ЭтотОбъект.СевернаяНадбавка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьНачисление(Начисление, Размер) 
	
	Движение = Движения.инкПлановыеНачисления.Добавить();
	Движение.Период 			= НачалоДня(ЭтотОбъект.ДатаПриказа);
	Движение.Сотрудник 			= ЭтотОбъект.Сотрудник;
	Движение.Начисление      	= Начисление;
	Движение.Организация     	= ЭтотОбъект.Организация;
	Движение.Подразделение   	= ЭтотОбъект.Подразделение;     
	Движение.РазмерНачисления	= Размер;

КонецПроцедуры

#КонецОбласти	

