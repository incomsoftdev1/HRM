
#Область о // Получение дополнительных данных:

Функция ПолучитьТЗВедомости()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНачислениеЗарплатыВедомость.Сотрудник КАК Сотрудник,
		|	инкНачислениеЗарплатыВедомость.Подразделение КАК Подразделение,
		|	инкНачислениеЗарплатыВедомость.Оклад КАК Оклад,
		|	инкНачислениеЗарплатыВедомость.Дни КАК Дни,
		|	инкНачислениеЗарплатыВедомость.ДниФакт КАК ДниФакт,
		|	инкНачислениеЗарплатыВедомость.РайонныйКоэффициент КАК РайонныйКоэффициент,
		|	инкНачислениеЗарплатыВедомость.СевернаяНадбавка КАК СевернаяНадбавка,
		|	инкНачислениеЗарплатыВедомость.Отпуск КАК Отпуск,
		|	инкНачислениеЗарплатыВедомость.БольничныйЛист КАК БольничныйЛист,
		|	инкНачислениеЗарплатыВедомость.ПрочиеНачисления КАК ПрочиеНачисления,
		|	инкНачислениеЗарплатыВедомость.ПрочиеУдержания КАК ПрочиеУдержания,
		|	инкНачислениеЗарплатыВедомость.НДФЛ КАК НДФЛ,
		|	инкНачислениеЗарплатыВедомость.ВсегоНачислено КАК ВсегоНачислено,
		|	инкНачислениеЗарплатыВедомость.ВсегоУдержано КАК ВсегоУдержано,
		|	инкНачислениеЗарплатыВедомость.Ссылка.Организация КАК Организация,
		|	инкНачислениеЗарплатыВедомость.Ссылка.МесяцНачисления КАК ПериодНачисления,
		|	инкНачислениеЗарплатыВедомость.Ссылка.Дата КАК Период,
		|	инкНачислениеЗарплатыВедомость.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.инкНачислениеЗарплаты.Ведомость КАК инкНачислениеЗарплатыВедомость
		|ГДЕ
		|	инкНачислениеЗарплатыВедомость.Ссылка = &ОбъектСсылка";
	
	Запрос.УстановитьПараметр("ОбъектСсылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьТЗНалогУдержанный()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНачислениеЗарплатыВедомость.Сотрудник КАК Сотрудник,
		|	инкНачислениеЗарплатыВедомость.Ссылка.МесяцНачисления КАК ПериодНачисления,
		|	инкНачислениеЗарплатыВедомость.Ссылка.Дата КАК Период
		|ПОМЕСТИТЬ втВедомость
		|ИЗ
		|	Документ.инкНачислениеЗарплаты.Ведомость КАК инкНачислениеЗарплатыВедомость
		|ГДЕ
		|	инкНачислениеЗарплатыВедомость.Ссылка = &ОбъектСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкНачислениеЗарплатыНДФЛ.Сотрудник КАК Сотрудник,
		|	инкНачислениеЗарплатыНДФЛ.НалоговаяСтавка КАК НалоговаяСтавка,
		|	инкНачислениеЗарплатыНДФЛ.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	инкНачислениеЗарплатыНДФЛ.СуммаНалога КАК СуммаНалога
		|ПОМЕСТИТЬ втНДФЛ
		|ИЗ
		|	Документ.инкНачислениеЗарплаты.НДФЛ КАК инкНачислениеЗарплатыНДФЛ
		|ГДЕ
		|	инкНачислениеЗарплатыНДФЛ.Ссылка = &ОбъектСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВедомость.Сотрудник КАК Сотрудник,
		|	втВедомость.Подразделение КАК Подразделение,
		|	втНДФЛ.НалоговаяСтавка КАК НалоговаяСтавка,
		|	втНДФЛ.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	втНДФЛ.СуммаНалога КАК СуммаНалога,
		|	втВедомость.Организация КАК Организация,
		|	втВедомость.ПериодНачисления КАК ПериодНачисления,
		|	втВедомость.Период КАК Период
		|ИЗ
		|	втВедомость КАК втВедомость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНДФЛ КАК втНДФЛ
		|		ПО втВедомость.Сотрудник = втНДФЛ.Сотрудник";
	
	Запрос.УстановитьПараметр("ОбъектСсылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьТЗВзносыВФонды()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНачислениеЗарплатыВедомость.Сотрудник КАК Сотрудник,
		|	инкНачислениеЗарплатыВедомость.Подразделение КАК Подразделение,
		|	инкНачислениеЗарплатыВедомость.Ссылка.Организация КАК Организация,
		|	инкНачислениеЗарплатыВедомость.Ссылка.МесяцНачисления КАК ПериодНачисления,
		|	инкНачислениеЗарплатыВедомость.Ссылка.Дата КАК Период
		|ПОМЕСТИТЬ втВедомость
		|ИЗ
		|	Документ.инкНачислениеЗарплаты.Ведомость КАК инкНачислениеЗарплатыВедомость
		|ГДЕ
		|	инкНачислениеЗарплатыВедомость.Ссылка = &ОбъектСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	инкНачислениеЗарплатыНДФЛ.Сотрудник КАК Сотрудник,
		|	инкНачислениеЗарплатыНДФЛ.НалоговаяСтавка КАК НалоговаяСтавка,
		|	инкНачислениеЗарплатыНДФЛ.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	инкНачислениеЗарплатыНДФЛ.СуммаНалога КАК СуммаРасчет
		|ПОМЕСТИТЬ втВзносыВФонды
		|ИЗ
		|	Документ.инкНачислениеЗарплаты.НДФЛ КАК инкНачислениеЗарплатыНДФЛ
		|ГДЕ
		|	инкНачислениеЗарплатыНДФЛ.Ссылка = &ОбъектСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВедомость.Сотрудник КАК Сотрудник,
		|	втВедомость.Подразделение КАК Подразделение,
		|	втНДФЛ.НалоговаяСтавка КАК НалоговаяСтавка,
		|	втНДФЛ.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	втНДФЛ.СуммаРасчет КАК СуммаРасчет,
		|	втВедомость.Организация КАК Организация,
		|	втВедомость.ПериодНачисления КАК ПериодНачисления,
		|	втВедомость.Период КАК Период
		|ИЗ
		|	втВедомость КАК втВедомость
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВзносыВФонды КАК втНДФЛ
		|		ПО втВедомость.Сотрудник = втНДФЛ.Сотрудник";
	
	Запрос.УстановитьПараметр("ОбъектСсылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции

#КонецОбласти

#Область о // Запись движений документа:
	
Процедура ЗаписьДвижений_инкВедомости(Отказ, РежимПроведения)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	инкВедомости = ЭтотОбъект.Движения.инкВедомости;
	инкВедомости.Записывать = Истина;
	
	// Основные начисления:
	Для каждого ВедомостьСтрока из ЭтотОбъект.Ведомость Цикл
		
		Если (ВедомостьСтрока.ВсегоНачислено = 0) И (ВедомостьСтрока.ВсегоУдержано = 0) Тогда
			Продолжить;	
		КонецЕсли;
		
		Движение = инкВедомости.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ВедомостьСтрока);
		Движение.Период = НачалоМесяца(ЭтотОбъект.МесяцНачисления);
		Движение.Организация = ЭтотОбъект.Организация;
		
		Движение.РайонныйКоэффициент = ВедомостьСтрока.РайонныйКоэффициент;
		Движение.СевернаяНадбавка    = ВедомостьСтрока.СевернаяНадбавка;
		
		// НДФЛ:
		ПоискСотрудника = Новый Структура("Сотрудник",ВедомостьСтрока.Сотрудник);
		НДФЛМассив = ЭтотОбъект.НДФЛ.НайтиСтроки(ПоискСотрудника);
		Для каждого НДФЛСтрока из НДФЛМассив Цикл
			Движение.ОблагаемыйДоход = НДФЛСтрока.ОблагаемыйДоходЗаМесяц;
			Движение.НалоговаяБаза = НДФЛСтрока.НалоговаяБазаЗаМесяц;
			Движение.ВычетСтандартный = НДФЛСтрока.СтандартныеВычетыНаРаботникаЗаМесяц;
			Движение.ВычетНаДетей = НДФЛСтрока.СтандартныеВычетыНаДетейЗаМесяц;
			Движение.ВычетИмущественный = НДФЛСтрока.ИмущественныйВычетЗаМесяц;
			Движение.ВычетСоциальный = НДФЛСтрока.СоциальныеВычетыЗаМесяц; 
		КонецЦикла;
		
		ОбнулитьЧасыДниОтВидаРасчета(ЭтотОбъект.ВидРасчетаДниЧасы,Движение);
		
	КонецЦикла;
	
КонецПроцедуры  

Процедура ОбнулитьЧасыДниОтВидаРасчета(ВидРасчетаДниЧасы,Движение)

	Если ВидРасчетаДниЧасы = Перечисления.инкВидРасчетаДниЧасы.ВДнях Тогда
		Движение.Часы 			= 0;
		Движение.ЧасыФакт		= 0;
		Движение.НормаЧасы		= 0;
		Движение.НормаЧасыФакт	= 0;
	Иначе
		Движение.Дни 		= 0;
		Движение.ДниФакт	= 0;
		Движение.НормаДни 		= 0;
		Движение.НормаДниФакт	= 0;
	КонецЕсли;
		
КонецПроцедуры   

Процедура ДобавитьДвижение_ОсновноеНачисление(ВедомостьСтрока,инкНачисления,Начисление,Сумма)
	
	Если Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движение = инкНачисления.Добавить(); 
	Движение.Начисление			= Начисление;
	Движение.Период 		   	= НачалоМесяца(ЭтотОбъект.МесяцНачисления);
	Движение.Сотрудник			= ВедомостьСтрока.Сотрудник;
	Движение.ДокументОснование 	= ЭтотОбъект.Ссылка;
	Движение.ДоходНДФЛ 			= Справочники.инкДоходНДФЛ.КодДоходаПоУмолчанию;
	Движение.Организация 		= ЭтотОбъект.Организация;
	Движение.Подразделение 		= ВедомостьСтрока.Подразделение;
	Движение.ВычетНДФЛ 			= Справочники.инкВычетыНДФЛ.ПустаяСсылка();
	Движение.Налог 				= Истина;
	Движение.СуммаНачисления	= Сумма;
	Движение.СуммаВычета		= 0;
	Движение.РайонныйКоэффициент = ВедомостьСтрока.РайонныйКоэффициентОклад;
	Движение.СевернаяНадбавка    = ВедомостьСтрока.СевернаяНадбавкаОклад;
	
КонецПроцедуры

Процедура ДобавитьДвижение_ДополнительноеНачисление(инкНачисления,ПрочиеНачисленияСтрока)
	
	Если ПрочиеНачисленияСтрока.СуммаНачисления = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движение = инкНачисления.Добавить();   
	Движение.Начисление 		= ПрочиеНачисленияСтрока.Начисление;
	Движение.Период 		   	= НачалоМесяца(ЭтотОбъект.МесяцНачисления);
	Движение.Сотрудник			= ПрочиеНачисленияСтрока.Сотрудник;
	Движение.ДокументОснование 	= ЭтотОбъект.Ссылка;
	//
	Движение.ДоходНДФЛ 			= ПрочиеНачисленияСтрока.Начисление.ДоходНДФЛ;
	Если Не ЗначениеЗаполнено(Движение.ДоходНДФЛ) Тогда
		Движение.ДоходНДФЛ = Справочники.инкДоходНДФЛ.КодДоходаПоУмолчанию;
	КонецЕсли;
	//
	Движение.Организация 		= ЭтотОбъект.Организация;
	Движение.Подразделение 		= ПрочиеНачисленияСтрока.Подразделение;
	Движение.ВычетНДФЛ 			= ПрочиеНачисленияСтрока.ВычетНДФЛ;
	Движение.Налог 				= ПрочиеНачисленияСтрока.Начисление.Налог;
	Движение.СуммаНачисления	= ПрочиеНачисленияСтрока.СуммаНачисления;
	Движение.СуммаВычета		= ПрочиеНачисленияСтрока.СуммаВычета;
	Движение.РайонныйКоэффициент = ПрочиеНачисленияСтрока.РайонныйКоэффициент;
	Движение.СевернаяНадбавка    = ПрочиеНачисленияСтрока.СевернаяНадбавка;
	
КонецПроцедуры  

Процедура ЗаписьДвижений_инкНачисления(Отказ, РежимПроведения);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	инкНачисления = ЭтотОбъект.Движения.инкНачисления;
	инкНачисления.Записывать = Истина;
	
	// Основные начисления:
	Для каждого ВедомостьСтрока из ЭтотОбъект.Ведомость Цикл
		
		ДобавитьДвижение_ОсновноеНачисление(ВедомостьСтрока,
		                                    инкНачисления,
											ПланыВидовРасчета.инкНачисления.ОсновнаяЗарплата,
											ВедомостьСтрока.Оклад);		
											
	КонецЦикла;	
	
	// Прочие начисления:
	Для каждого ПрочиеНачисленияСтрока из ЭтотОбъект.ПрочиеНачисления Цикл
		ДобавитьДвижение_ДополнительноеНачисление(инкНачисления,ПрочиеНачисленияСтрока);		
	КонецЦикла;
	
КонецПроцедуры
	
Процедура ЗаписьДвижений_инкУдержания(Отказ, РежимПроведения);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	инкУдержания = ЭтотОбъект.Движения.инкУдержания;
	инкУдержания.Записывать = Истина;
	
	Для каждого ПрочиеУдержанияСтрока из ЭтотОбъект.ПрочиеУдержания Цикл
		
		Движение = инкУдержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ПрочиеУдержанияСтрока);
		Движение.Период 		   	= НачалоМесяца(ЭтотОбъект.МесяцНачисления);
		Движение.ДокументОснование 	= ЭтотОбъект.Ссылка;
		Движение.Организация 		= ЭтотОбъект.Организация;
		
	КонецЦикла;
	 
КонецПроцедуры

Процедура ЗаписьДвижений_инкНалогУдержанный(Отказ, РежимПроведения);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	НалогУдержанный = ЭтотОбъект.Движения.инкНалогУдержанный;
	НалогУдержанный.Записывать = Истина;
	
	Для каждого НДФЛСтрока из ЭтотОбъект.НДФЛ Цикл
		
		Движение = НалогУдержанный.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,НДФЛСтрока);		
		Движение.Период 		   = НачалоМесяца(ЭтотОбъект.МесяцНачисления);
		Движение.ДокументОснование = ЭтотОбъект.Ссылка;
		Движение.Организация	   = ЭтотОбъект.Организация;	
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписьДвижений_ВычетыНДФЛ(Отказ, РежимПроведения)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВычетыНДФЛРегистр = ЭтотОбъект.Движения.инкВычетыНДФЛ;
	ВычетыНДФЛРегистр.Записывать = Истина;
	
	Для каждого ВычетыНДФЛСтрока из ЭтотОбъект.ВычетыНДФЛ Цикл
		
		Движение = ВычетыНДФЛРегистр.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ВычетыНДФЛСтрока);
		Движение.Период = НачалоМесяца(ЭтотОбъект.МесяцНачисления);
		Движение.ДокументОснование = ЭтотОбъект.Ссылка;
		Движение.ГруппаВычетаНДФЛ = ВычетыНДФЛСтрока.ВычетНДФЛ.ГруппаВычетаНДФЛ;
		Движение.Организация = ЭтотОбъект.Организация;	

	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область о // Проведение документа:

Процедура ДобавитьСотрудниковВВедомость(СотрудникиМассив,ПерерасчетСотрудников = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(СотрудникиМассив) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СотрудникЭлемент из СотрудникиМассив Цикл
		
		ВедомостьСтрока = ЭтотОбъект.Ведомость.Добавить();
		ВедомостьСтрока.Сотрудник = СотрудникЭлемент;
		ВедомостьСтрока.ОкладРазмер = СотрудникЭлемент.Оклад;
		
	КонецЦикла;
	
	ПересчетСотрудниковВОбъекте(СотрудникиМассив,ПерерасчетСотрудников);
	
КонецПроцедуры

Процедура ПересчетСотрудниковВОбъекте(СписокСотрудников = Неопределено,ПерерасчетСотрудников = Истина) Экспорт
	
	стрДанныеНачисленияЗарплаты = инкРасчетЗаработнойПлатыСервер.ПолучитьСтрукруруДанныхНачисленияЗарплаты(ЭтотОбъект);
	Если ТипЗнч(СписокСотрудников) = Тип("СправочникСсылка.инкСотрудники") Тогда
		стрДанныеНачисленияЗарплаты.СотрудникиМассив.Добавить(СписокСотрудников);
	ИначеЕсли ЗначениеЗаполнено(СписокСотрудников) Тогда 
		Для каждого стрСотрудник из СписокСотрудников Цикл
			стрДанныеНачисленияЗарплаты.СотрудникиМассив.Добавить(стрСотрудник);
		КонецЦикла;
	Иначе
		Для каждого стрСотрудник из ЭтотОбъект.Ведомость Цикл
			стрДанныеНачисленияЗарплаты.СотрудникиМассив.Добавить(стрСотрудник.Сотрудник);
		КонецЦикла;		
	КонецЕсли;
	//
	стрДанныеНачисленияЗарплаты.булПерерасчет = ПерерасчетСотрудников;
	//
	МенеджерРасчета = Обработки.инкРасчетЗарабатнойПлаты.Создать();
	МенеджерРасчета.Инициализация();
	МенеджерРасчета.ДанныеНачисленияЗарплаты = стрДанныеНачисленияЗарплаты;
	МенеджерРасчета.ВыполнитьРасчетЗаработнойПлаты(); 	
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,МенеджерРасчета.ДанныеНачисленияЗарплаты.ОбъектНачисленияЗарплаты);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПересчетСотрудниковВОбъекте();
	
	ЗаписьДвижений_инкВедомости(Отказ, РежимПроведения);
	ЗаписьДвижений_инкНачисления(Отказ, РежимПроведения);
	ЗаписьДвижений_инкУдержания(Отказ, РежимПроведения);
	ЗаписьДвижений_инкНалогУдержанный(Отказ, РежимПроведения);
	ЗаписьДвижений_ВычетыНДФЛ(Отказ, РежимПроведения); 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПересчетСотрудниковВОбъекте();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
