
#Область о // Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Параметры.АдресПараметровВХранилище) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПараметрыРасчета = ПолучитьИзВременногоХранилища(Параметры.АдресПараметровВХранилище);
	
	мСотрудник = ПараметрыРасчета.Сотрудник;
	ЗагрузитьДанныеНаФормуИзРегистра(мСотрудник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	СохранитьДанныеФормыВРегистр(мСотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ПриЗакрытииНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область о // Загрузка данных по начислениям и удержаниям

&НаСервере
Процедура ЗагрузитьДанныеНаФормуИзРегистра(СотрудникСсылка)
	
	Если Не ЗначениеЗаполнено(СотрудникСсылка) Тогда
		Возврат;
	КонецЕсли; 
	
	ПостоянныеНачисленияУдержания = ПолучитьПостоянныеНачисленияУдержанияПоСотруднику(СотрудникСсылка);
	мНачисленияТаблица.Очистить();
	мУдержанияТаблица.Очистить();
	
	Для каждого СтрокаТаблицы Из ПостоянныеНачисленияУдержания Цикл
		
		Если ТипЗнч(СтрокаТаблицы.НачислениеУдержание) = Тип("ПланВидовРасчетаСсылка.инкНачисления") Тогда
			НачисленияСтрока = мНачисленияТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НачисленияСтрока,СтрокаТаблицы);
			НачисленияСтрока.Начисление = СтрокаТаблицы.НачислениеУдержание;
		Иначе
			УдержаниеСтрока = мУдержанияТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(УдержаниеСтрока,СтрокаТаблицы);
			УдержаниеСтрока.Удержание = СтрокаТаблицы.НачислениеУдержание;
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПостоянныеНачисленияУдержанияПоСотруднику(СотрудникСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкПостоянныеНачисленияУдержания.Сотрудник КАК Сотрудник,
		|	инкПостоянныеНачисленияУдержания.НачислениеУдержание КАК НачислениеУдержание,
		|	инкПостоянныеНачисленияУдержания.Размер КАК Размер
		|ИЗ
		|	РегистрСведений.инкПостоянныеНачисленияУдержания КАК инкПостоянныеНачисленияУдержания
		|ГДЕ
		|	инкПостоянныеНачисленияУдержания.Сотрудник = &СотрудникСсылка";
	
	Запрос.УстановитьПараметр("СотрудникСсылка", СотрудникСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
    
#КонецОбласти 

#Область о // Сохранение данных по начисленям и удержаниям

&НаСервере
Процедура СохранитьДанныеФормыВРегистр(СотрудникСсылка)
	
	МенеджерРегистра = РегистрыСведений.инкПостоянныеНачисленияУдержания.СоздатьНаборЗаписей();
	МенеджерРегистра.Отбор.Сотрудник.Установить(СотрудникСсылка);
	Для каждого НачислениеСтрока Из мНачисленияТаблица Цикл
		Если ЗначениеЗаполнено(НачислениеСтрока.Начисление) И (НачислениеСтрока.Размер <> 0) Тогда
			ЗаписьРегистра = МенеджерРегистра.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра,НачислениеСтрока);
			ЗаписьРегистра.НачислениеУдержание = НачислениеСтрока.Начисление;
			ЗаписьРегистра.Сотрудник = СотрудникСсылка;
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого УдержаниеСтрока Из мУдержанияТаблица Цикл
		Если ЗначениеЗаполнено(УдержаниеСтрока.Удержание) И (УдержаниеСтрока.Размер <> 0) Тогда
			ЗаписьРегистра = МенеджерРегистра.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра,УдержаниеСтрока);
			ЗаписьРегистра.НачислениеУдержание = УдержаниеСтрока.Удержание;
			ЗаписьРегистра.Сотрудник = СотрудникСсылка;
		КонецЕсли; 
	КонецЦикла; 
	
	МенеджерРегистра.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти 
