
#Область о //Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Параметры.АдресПараметровВХранилище) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПараметрыРасчета = ПолучитьИзВременногоХранилища(Параметры.АдресПараметровВХранилище);
	
	Сотрудник = ПараметрыРасчета.Сотрудник;
	ОбъектРасчетаЗарплаты = ПараметрыРасчета.ОбъектРасчетаЗарплаты;
	
	тзПрочиеНачисления.Очистить();
	стрПоиск = Новый Структура("Сотрудник",Сотрудник);
	массПрочиеНачисления = ОбъектРасчетаЗарплаты.ПрочиеНачисления.НайтиСтроки(стрПоиск); 
	Для каждого стрПрочиеНачисления из массПрочиеНачисления Цикл
		стртзПрочиеНачисления = тзПрочиеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(стртзПрочиеНачисления,стрПрочиеНачисления);		
	КонецЦикла;
	
	ЭтотОбъект.Заголовок = "Прочие начисления: "+Сотрудник.ФИОСокращенное

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Модифицированность = Ложь;
		Закрыть(ПоместитьИзмененныеДанныеВоВременноеХранилище());
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РасчитатьИтоговыеСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура тзПрочиеНачисленияПриИзменении(Элемент)
	                            
	Модифицированность = Истина;
	РасчитатьИтоговыеСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьИтоговыеСуммы()
	
	РазмерНачисленияИтог = 0;
	Для каждого Строка из тзПрочиеНачисления Цикл
		
		РазмерНачисленияИтог = РазмерНачисленияИтог + Строка.СуммаНачисления;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПереносВОсновнуюФорму

&НаСервере
Функция ПоместитьИзмененныеДанныеВоВременноеХранилище()
	
	ВозвращаемыеСведения = Новый Структура;
	ВозвращаемыеСведения.Вставить("Сотрудник", Сотрудник);
	ВозвращаемыеСведения.Вставить("тзПрочиеНачисления", тзПрочиеНачисления.Выгрузить());
	
	Возврат ПоместитьВоВременноеХранилище(ВозвращаемыеСведения, Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура тзПрочиеНачисленияСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.тзПрочиеНачисления.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ПроцентОтБазы = 0;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура тзПрочиеНачисленияПроцентОтБазыПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.тзПрочиеНачисления.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.СуммаНачисления = 0;	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


